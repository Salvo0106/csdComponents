/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("$CSD", [], factory);
	else if(typeof exports === 'object')
		exports["$CSD"] = factory();
	else
		root["$CSD"] = factory();
})(this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./component/csd-accordion.js":
/*!************************************!*\
  !*** ./component/csd-accordion.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeAccordion: () => (/* binding */ initializeAccordion),\n/* harmony export */   showAccordion: () => (/* binding */ showAccordion)\n/* harmony export */ });\n/**\n * Triggers a custom accordion event with detailed state information\n * @param $item - The accordion item that triggered the event\n * @param {string} action - The action that was performed (show, hide, show-all, hide-all)\n * @param {boolean} fromFunction - Whether the event was triggered from showAccordion function\n * @private\n */\nfunction _triggerAccordionEvent($item, action) {\n  var fromFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var $accordion = $item.closest(\".csd-accordion\");\n  var $allItems = $accordion.find(\".csd-accordion-item\");\n  var $openItems = $allItems.filter(\".open\");\n\n  // Create event object with all details\n  var eventData = {\n    type: \"csd_accordion_change\",\n    // - type: \"csd_accordion_change\"\n    action: action,\n    // - action: \"show\", \"hide\", \"show-all\", o \"hide-all\"\n    fromFunction: fromFunction,\n    // - fromFunction: true if the event was triggered from showAccordion function\n    targetValue: $item.attr(\"value\"),\n    // - targetValue: value of the target element\n    isMultiple: $accordion.hasClass(\"multiple\"),\n    // - isMultiple: if the accordion is multiple\n    totalItems: $allItems.length,\n    // - totalItems: total number of items\n    openItems: $openItems.length,\n    // - openItems: number of open items\n    allOpen: $allItems.length === $openItems.length,\n    // - allOpen: true if all items are open\n    allClosed: $openItems.length === 0,\n    // - allClosed: true if all items are closed\n    openValues: function () {\n      // - openValues: array of open item values\n      var array = [];\n      $openItems.each(function () {\n        array.push($CSD(this).attr(\"value\"));\n      });\n      return array;\n    }()\n  };\n\n  // Trigger the event using CSD library on the accordion element\n  $accordion.trigger(eventData);\n}\n\n/**\n * Destroys an accordion instance, removing all event handlers and data attributes\n * @param {HTMLElement} element - The root DOM element of the accordion\n */\nfunction destroyAccordion(element) {\n  if (!element) return;\n  var $element = $CSD(element);\n\n  // Check if the element is already initialized\n  if (!$element.attr('data-csd-accordion-initialized')) {\n    return; // Not initialized, nothing to destroy\n  }\n\n  // Carefully remove only our event listeners\n  var $headers = $element.find(\".csd-accordion-header\");\n  $headers.each(function () {\n    var $header = $CSD(this);\n    // Clona il contenuto dell'header senza eventi ma mantenendo i figli\n    var $newHeader = $header.clone(false, true);\n    // Rimuovi solo l'icona accordion che abbiamo aggiunto\n    $newHeader.find(\".csd-accordion-icon\").remove();\n    // Sostituisci il vecchio header con quello nuovo (senza eventi)\n    $header.replaceWith($newHeader);\n  });\n\n  // Remove the initialized flag\n  $element.removeAttr('data-csd-accordion-initialized');\n}\n\n/**\n * Accordion Component\n * Initializes the accordion behavior on a DOM element\n * @param {HTMLElement} element - The root DOM element of the accordion\n */\nfunction initializeAccordion(element) {\n  // Check if element exists, otherwise terminate\n  if (!element) return;\n  var $element = $CSD(element);\n\n  // Check if the element is already initialized\n  if ($element.attr('data-csd-accordion-initialized')) {\n    // If already initialized, destroy it first\n    destroyAccordion(element);\n  }\n  var $accordionItems = $element.find(\".csd-accordion-item\");\n  // Check if the accordion allows multiple items to be open\n  var isMultiple = $element.hasClass(\"multiple\");\n\n  // Iterate over each accordion item\n  $accordionItems.each(function (item) {\n    var $item = $CSD(item);\n    // Find the header of the current item\n    var $header = $item.find(\".csd-accordion-header\");\n    // Create chevron icon using ion-icons\n    var $icon = $CSD('<ion-icon name=\"chevron-down-outline\" class=\"csd-accordion-icon\"></ion-icon>');\n\n    // If header exists and is not disabled\n    if ($header.length && !$header.prop(\"disabled\")) {\n      // Add the icon to the header\n      $header.append($icon);\n      // Add click event handler\n      $header.on(\"click\", function () {\n        // Find the closest accordion-item to the clicked header\n        var $currentItem = $CSD(this).closest(\".csd-accordion-item\");\n\n        // If multiple open items are not allowed, close all other items\n        if (!isMultiple) {\n          $accordionItems.not($currentItem).removeClass(\"open\");\n        }\n\n        // Toggle the 'open' class on the current item\n        $currentItem.toggleClass(\"open\");\n\n        // Trigger event with the new state\n        _triggerAccordionEvent($currentItem, $currentItem.hasClass(\"open\") ? \"show\" : \"hide\");\n      });\n    }\n  });\n\n  // Mark the element as initialized\n  $element.attr('data-csd-accordion-initialized', 'true');\n}\n\n/**\n * Function to handle accordion actions\n * @param {string} param - Action parameter:\n *   - 'show-all': Opens all items in multiple accordion\n *   - 'hide-all': Closes all items in multiple accordion\n *   - any other value: Toggles item with matching value attribute\n * @throws {TypeError} When parameter is missing or of wrong type\n * @throws {ReferenceError} When required elements are not found\n * @throws {SyntaxError} When action is not allowed for accordion type\n */\nfunction showAccordion(param) {\n  try {\n    // Validate input parameter type\n    if (!param || typeof param !== \"string\" && typeof param !== \"number\") {\n      throw new TypeError(\"Missing or invalid parameter type for showAccordion function\");\n    }\n\n    // Get all accordion items with value attribute\n    var $items = $CSD(\".csd-accordion-item[value]\");\n    if ($items.length === 0) {\n      throw new ReferenceError(\"No accordion items found with value attribute\");\n    }\n\n    // Normalize param by removing quotes if present\n    var normalizedParam = param.replace(/^['\"](.+)['\"]$/, \"$1\");\n\n    // Handle show-all action\n    if (normalizedParam === \"show-all\") {\n      var $multipleItems = $items.filter(function () {\n        return $CSD(this).closest(\".csd-accordion\").hasClass(\"multiple\");\n      });\n      if ($multipleItems.length === 0) {\n        throw new ReferenceError(\"show-all is not allowed for single-accordion\");\n      }\n      $multipleItems.addClass(\"open\");\n      // Trigger event for show-all\n      _triggerAccordionEvent($multipleItems.first(), \"show-all\", true);\n      return;\n    }\n\n    // Handle hide-all action\n    if (normalizedParam === \"hide-all\") {\n      var _$multipleItems = $items.filter(function () {\n        return $CSD(this).closest(\".csd-accordion\").hasClass(\"multiple\");\n      });\n      if (_$multipleItems.length === 0) {\n        throw new ReferenceError(\"hide-all is not allowed for single-accordion\");\n      }\n      _$multipleItems.removeClass(\"open\");\n      // Trigger event for hide-all\n      _triggerAccordionEvent(_$multipleItems.first(), \"hide-all\", true);\n      return;\n    }\n\n    // Handle individual item toggle\n    var $item = $CSD(\".csd-accordion-item\").filter(\"[value=\\\"\".concat(normalizedParam, \"\\\"]\"));\n    if ($item.length === 0) {\n      throw new ReferenceError(\"No accordion item found with value \\\"\".concat(normalizedParam, \"\\\"\"));\n    }\n\n    // Get accordion type and handle toggle\n    var isMultiple = $item.closest(\".csd-accordion\").hasClass(\"multiple\");\n    if (!isMultiple) {\n      $items.not($item).removeClass(\"open\");\n    }\n\n    // Toggle the item and trigger event\n    var wasOpen = $item.hasClass(\"open\");\n    $item.toggleClass(\"open\");\n    _triggerAccordionEvent($item, wasOpen ? \"hide\" : \"show\", true);\n  } catch (error) {\n    if (error instanceof TypeError || error instanceof ReferenceError || error instanceof SyntaxError) {\n      throw error;\n    }\n    throw new Error(\"Accordion error: \".concat(error.message));\n  }\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-accordion.js?");

/***/ }),

/***/ "./component/csd-button.js":
/*!*********************************!*\
  !*** ./component/csd-button.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   destroyBtn: () => (/* binding */ destroyBtn),\n/* harmony export */   initializeBtn: () => (/* binding */ initializeBtn)\n/* harmony export */ });\n/* harmony import */ var _csd_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../csd-lib */ \"./csd-lib.js\");\n/* harmony import */ var _csd_lib__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_csd_lib__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/**\n * Destroys a button instance, removing all event handlers and restoring original state\n * @param {HTMLElement} buttonElement - The button element to destroy\n */\nfunction destroyBtn(buttonElement) {\n  if (!buttonElement) return null;\n  var $btn = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_0__.$CSD)(buttonElement);\n\n  // Check if the element is already initialized\n  if (!$btn.attr('data-csd-btn-initialized')) {\n    return buttonElement; // Not initialized, return original element\n  }\n\n  // Ripristina il testo originale se salvato\n  var originalText = $btn.attr('data-original-text');\n  if (originalText) {\n    $btn.text(originalText);\n  }\n\n  // Remove event listeners by cloning the element\n  var $newBtn = $btn.clone(false, true);\n  $btn.replaceWith($newBtn);\n\n  // Disconnetti l'osservatore se presente\n  if (buttonElement._csdBtnObserver) {\n    buttonElement._csdBtnObserver.disconnect();\n    delete buttonElement._csdBtnObserver;\n  }\n\n  // Remove the initialized flag and other data attributes\n  $newBtn.removeAttr('data-csd-btn-initialized');\n  $newBtn.removeAttr('data-original-text');\n  $newBtn.removeAttr('data-current-icon');\n  $newBtn.removeAttr('data-current-badge');\n  $newBtn.removeAttr('data-current-place-icon');\n\n  // Return the new element\n  return $newBtn.elements[0];\n}\n\n/**\n * Triggers a custom button event with detailed state information\n * @param $btn - The button item that triggered the event\n * @private\n */\nfunction _triggerButtonEvent($btn) {\n  // Create event object with all details\n  var eventData = {\n    type: \"csd_click\",\n    // - type: \"csd_btn_click\"\n    action: \"click\",\n    // - action: \"click\", \"hide\", \"show-all\", o \"hide-all\"\n    item: $btn // - item triggered\n  };\n\n  // Trigger the event using CSD library on the button element\n  $btn.trigger(eventData);\n}\nfunction initializeBtn(btnElement) {\n  // Check if element exists, otherwise terminate\n  if (!btnElement) return;\n  var $btn = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_0__.$CSD)(btnElement);\n\n  // Check if the element is already initialized\n  if ($btn.attr('data-csd-btn-initialized')) {\n    // If already initialized, destroy it first and get the new element\n    var newElement = destroyBtn(btnElement);\n    if (!newElement) return; // Destroy failed\n    btnElement = newElement;\n    $btn = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_0__.$CSD)(btnElement);\n  }\n  var originalText = $btn.text();\n\n  // Salva il testo originale per il destroy\n  if (!$btn.attr('data-original-text')) {\n    $btn.attr('data-original-text', originalText);\n  }\n  if ($btn.attr('icon')) {\n    var attrIcon = $btn.attr('icon');\n    var type = attrIcon.split('-', 1)[0];\n    var newContentBTN;\n    switch (type) {\n      case 'ion':\n        var ionIconData = attrIcon.split('-');\n        var ionIcon = attrIcon.slice(type.length + 1);\n        newContentBTN = \"<ion-icon name=\\\"\".concat(ionIcon, \"\\\"></ion-icon>\");\n        if ($btn.attr('place-icon') == \"left\") {\n          $btn.html(newContentBTN).append(originalText);\n        } else {\n          $btn.append(newContentBTN);\n        }\n        break;\n      case 'fa':\n        var faIconData = attrIcon.split('-');\n        var faIcon = attrIcon.slice(type.length + 1 + faIconData[1].length + 1);\n        newContentBTN = \"<i class=\\\"fa-\".concat(faIconData[1], \" fa-\").concat(faIcon, \"\\\"></i>\");\n        if ($btn.attr('place-icon') == \"left\") {\n          $btn.html(newContentBTN).append(originalText);\n        } else {\n          $btn.append(newContentBTN);\n        }\n        break;\n    }\n  }\n  if ($btn.attr('badge')) {\n    var badgeValue = $btn.attr('badge');\n    var badgeItem = \"<span class=\\\"csd-badge\\\">\".concat(badgeValue, \"</span>\");\n    $btn.append(badgeItem);\n  }\n  $btn.on('click', function () {\n    _triggerButtonEvent($btn);\n  });\n\n  // Salva i valori correnti degli attributi per il confronto\n  var currentIcon = $btn.attr('icon') || '';\n  var currentBadge = $btn.attr('badge') || '';\n  var currentPlaceIcon = $btn.attr('place-icon') || '';\n  $btn.attr('data-current-icon', currentIcon);\n  $btn.attr('data-current-badge', currentBadge);\n  $btn.attr('data-current-place-icon', currentPlaceIcon);\n\n  // Configura l'osservatore di attributi per reinizializzazione automatica\n  if (typeof MutationObserver !== 'undefined') {\n    var observer = new MutationObserver(function (mutations) {\n      mutations.forEach(function (mutation) {\n        if (mutation.type === 'attributes') {\n          var attrName = mutation.attributeName;\n\n          // Controlla se sono cambiati gli attributi che ci interessano\n          if (['icon', 'badge', 'place-icon'].includes(attrName)) {\n            var currentValue = $btn.attr(attrName) || '';\n            var savedValue = $btn.attr(\"data-current-\".concat(attrName)) || '';\n\n            // Se il valore è cambiato, reinizializza\n            if (currentValue !== savedValue) {\n              // Usa setTimeout per evitare loop infiniti durante l'aggiornamento\n              setTimeout(function () {\n                initializeBtn(btnElement);\n              }, 0);\n            }\n          }\n        }\n      });\n    });\n\n    // Osserva i cambiamenti agli attributi\n    observer.observe(btnElement, {\n      attributes: true,\n      attributeFilter: ['icon', 'badge', 'place-icon']\n    });\n\n    // Salva l'observer per poterlo disconnettere durante il destroy\n    btnElement._csdBtnObserver = observer;\n  }\n\n  // Mark the element as initialized\n  $btn.attr('data-csd-btn-initialized', 'true');\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-button.js?");

/***/ }),

/***/ "./component/csd-checkbox.js":
/*!***********************************!*\
  !*** ./component/csd-checkbox.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCheckboxValues: () => (/* binding */ getCheckboxValues),\n/* harmony export */   initializeCheckbox: () => (/* binding */ initializeCheckbox)\n/* harmony export */ });\n/**\n * Triggers a custom checkbox event with detailed state information\n * @param $checkbox - The checkbox item that triggered the event\n * @private\n */\nfunction _triggerCheckboxEvent($checkbox) {\n  // Create event object with all details\n  var $wrapper = $checkbox.closest(\".csd-field\");\n  var $allItems = $wrapper.find(\".csd-checkbox-input\");\n  var $checkedItems = $allItems.find(\".csd-checkbox-input:checked\");\n  var eventData = {\n    type: \"csd_change\",\n    // - type: \"change\"\n    action: \"change\",\n    // - action: \"change\"\n    item: $checkbox,\n    // - item triggered\n    targetValue: $checkbox.attr(\"value\"),\n    // - targetValue: value of the target element\n    totalItems: $allItems.length,\n    // - totalItems: total number of items\n    checkedItems: $checkedItems.length,\n    // - checkedItems: number of checked items\n    allChecked: $allItems.length === $checkedItems.length,\n    // - allChecked: true if all items are checked\n    allUnchecked: $checkedItems.length === 0,\n    // - allUnchecked: true if all items are unchecked\n    checkedValues: function () {\n      // - checkedValues: array of checked item values\n      var array = [];\n      $checkedItems.each(function () {\n        array.push($CSD(this).attr(\"value\"));\n      });\n      return array;\n    }()\n  };\n\n  // Trigger the event using CSD library on the button element\n  $checkbox.trigger(eventData);\n}\nfunction initializeCheckbox(checkboxElement) {\n  var $originalCheckbox = $CSD(checkboxElement);\n  var label = $originalCheckbox.attr(\"label\") || \"\";\n  var id = $originalCheckbox.attr(\"id\") || \"checkbox-\" + Math.random().toString(36).substr(2, 9);\n  var $wrapper = $CSD('<div class=\"csd-checkbox-wrapper\"></div>');\n  var $checkbox = $CSD('<div class=\"csd-checkbox\"></div>');\n  var $input = $CSD('<input type=\"checkbox\" class=\"csd-checkbox-input\">').attr(\"id\", id);\n  var $box = $CSD('<div class=\"csd-checkbox-box\"><ion-icon name=\"checkmark-sharp\"></ion-icon></div>');\n\n  // Copia le proprietà dall'originale\n  if ($originalCheckbox.elements[0].checked) $input.elements[0].checked = true;\n  if ($originalCheckbox.elements[0].disabled) $input.elements[0].disabled = true;\n  if ($originalCheckbox.attr(\"name\")) $input.attr(\"name\", $originalCheckbox.attr(\"name\"));\n  if ($originalCheckbox.attr(\"value\")) $input.attr(\"value\", $originalCheckbox.attr(\"value\"));\n\n  // Copia le classi, escludendo csd-checkbox\n  var originalClass = $originalCheckbox.attr(\"class\");\n  if (originalClass) {\n    var newClass = originalClass.split(\" \").filter(function (cls) {\n      return cls !== \"csd-checkbox\";\n    }).join(\" \");\n    if (newClass) $input.addClass(newClass);\n  }\n\n  // Copia altri attributi\n  var originalElement = $originalCheckbox.elements[0];\n  for (var i = 0; i < originalElement.attributes.length; i++) {\n    var attr = originalElement.attributes[i];\n    if (![\"type\", \"class\", \"id\"].includes(attr.name)) {\n      $input.attr(attr.name, attr.value);\n    }\n  }\n  $checkbox.append($input);\n  $checkbox.append($box);\n  $wrapper.append($checkbox);\n  if (label) {\n    var $label = $CSD('<label class=\"csd-checkbox-label\"></label>').text(label).attr(\"for\", id);\n    $wrapper.append($label);\n  }\n  $originalCheckbox.replaceWith($wrapper);\n  $wrapper.find('.csd-checkbox-label').on(\"click\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!$wrapper.find('.csd-checkbox-input').prop(\"disabled\")) {\n      var checked = $wrapper.find('.csd-checkbox-input').prop(\"checked\");\n      $wrapper.find('.csd-checkbox-input').prop(\"checked\", !checked);\n      _triggerCheckboxEvent($wrapper.find('.csd-checkbox-input'));\n    }\n  });\n  $wrapper.find('.csd-checkbox-box').on(\"click\", function (e) {\n    e.preventDefault();\n    if (!$wrapper.find('.csd-checkbox-input').prop(\"disabled\")) {\n      var checked = $wrapper.find('.csd-checkbox-input').prop(\"checked\");\n      $wrapper.find('.csd-checkbox-input').prop(\"checked\", !checked);\n      _triggerCheckboxEvent($wrapper.find('.csd-checkbox-input'));\n    }\n  });\n}\n\n// Funzione per ottenere i valori dei checkbox\nfunction getCheckboxValues(name) {\n  var values = [];\n  var $checkboxes = $CSD(\".csd-checkbox-wrapper input[name=\\\"\".concat(name, \"\\\"]\"));\n  $checkboxes.each(function () {\n    var $input = $CSD(this);\n    values.push({\n      value: $input.val() || \"on\",\n      checked: $input.elements[0].checked,\n      disabled: $input.elements[0].disabled,\n      label: $input.closest(\".csd-checkbox-wrapper\").find(\".csd-checkbox-label\").text()\n    });\n  });\n  return values;\n}\n;\n\n// Esponi globalmente solo se window è disponibile\nif (typeof window !== 'undefined') {\n  window.getCheckboxValues = getCheckboxValues;\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-checkbox.js?");

/***/ }),

/***/ "./component/csd-datepicker.js":
/*!*************************************!*\
  !*** ./component/csd-datepicker.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeDatepickers: () => (/* binding */ initializeDatepickers)\n/* harmony export */ });\n/* harmony import */ var _csd_mask_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csd-mask.js */ \"./component/csd-mask.js\");\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n// Funzione per formattare la data per i preset\nfunction formatPresetDate(date) {\n  return date.toLocaleDateString('it-IT', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric'\n  }).split('/').join('/');\n}\n\n// Funzione per posizionare il calendario\nfunction positionCalendar($input, $dropdown) {\n  var inputRect = $input[0].getBoundingClientRect();\n  var windowHeight = typeof window !== 'undefined' ? window.innerHeight : 800; // Default fallback\n  var spaceBelow = windowHeight - inputRect.bottom;\n  var calendarHeight = $dropdown[0].offsetHeight;\n\n  // Check if there's enough space below for the calendar plus margin\n  if (spaceBelow >= calendarHeight + 4) {\n    // 4px for margin\n    $dropdown.removeClass(\"position-above\").addClass(\"position-below\");\n  } else {\n    $dropdown.removeClass(\"position-below\").addClass(\"position-above\");\n  }\n}\nfunction initializeDatepickers() {\n  console.log(\"Initializing datepickers...\");\n\n  // Inizializza il date range preset\n  $CSD(\".csd-datepicker-range-preset\").each(function () {\n    var $input = $CSD(this);\n\n    // Crea il wrapper per il dropdown\n    var $wrapper = $CSD('<div class=\"csd-select-container position-relative\"></div>');\n    $input.wrap($wrapper);\n    $input.prop(\"readonly\", true);\n\n    // Crea il dropdown\n    var $dropdown = $CSD('<div class=\"csd-select-options\"></div>');\n    var options = [{\n      label: \"Ultima settimana\",\n      value: \"week\"\n    }, {\n      label: \"Ultimo mese\",\n      value: \"month\"\n    }, {\n      label: \"Ultimi 3 mesi\",\n      value: \"threeMonths\"\n    }, {\n      label: \"Ultimo anno\",\n      value: \"year\"\n    }, {\n      label: \"Da inizio anno\",\n      value: \"ytd\"\n    }, {\n      label: \"Personalizzato\",\n      value: \"custom\"\n    }];\n    options.forEach(function (option) {\n      var $option = $CSD(\"<div class=\\\"csd-select-option\\\" data-value=\\\"\".concat(option.value, \"\\\">\").concat(option.label, \"</div>\"));\n      $dropdown.append($option);\n    });\n    $input.after($dropdown);\n\n    // Gestisci il click sull'input\n    $input.on(\"click\", function (e) {\n      e.stopPropagation();\n      $CSD(\".csd-select-options\").not($dropdown).hide();\n      if (!$dropdown.hasClass(\"visible\")) {\n        $dropdown.addClass(\"visible\");\n        positionCalendar($input, $dropdown);\n      }\n    });\n\n    // Gestisci la selezione delle opzioni\n    $dropdown.on(\"click\", \".csd-select-option\", function (e) {\n      e.stopPropagation();\n      var value = $CSD(this).data(\"value\");\n      $CSD(this).addClass(\"selected\");\n      var today = new Date();\n      var startDate, endDate;\n      switch (value) {\n        case \"week\":\n          endDate = new Date(today);\n          startDate = new Date(today);\n          startDate.setDate(startDate.getDate() - 7);\n          break;\n        case \"month\":\n          endDate = new Date(today);\n          startDate = new Date(today);\n          startDate.setMonth(startDate.getMonth() - 1);\n          break;\n        case \"threeMonths\":\n          endDate = new Date(today);\n          startDate = new Date(today);\n          startDate.setMonth(startDate.getMonth() - 3);\n          break;\n        case \"year\":\n          endDate = new Date(today);\n          startDate = new Date(today);\n          startDate.setFullYear(startDate.getFullYear() - 1);\n          break;\n        case \"ytd\":\n          endDate = new Date(today);\n          startDate = new Date(today.getFullYear(), 0, 1);\n          break;\n        case \"custom\":\n          // Per l'opzione custom, aggiungiamo le classi necessarie\n          $input.removeClass(\"csd-datepicker-range-preset\").addClass(\"csd-datepicker\").addClass(\"multi-months\").attr(\"data-range\", \"true\").attr(\"data-from-preset\", \"true\");\n\n          // Rimuovi l'evento click esistente per evitare loop\n          $input.off(\"click\");\n\n          // Reinizializza i datepicker per applicare le nuove classi\n          initializeDatepickers();\n\n          // Nascondi il dropdown e triggera il click per aprire il calendario\n          $dropdown.hide();\n          $input.trigger(\"click\");\n          return;\n      }\n      if (startDate && endDate) {\n        var formattedStart = formatPresetDate(startDate);\n        var formattedEnd = formatPresetDate(endDate);\n        $input.val(\"\".concat(formattedStart, \" - \").concat(formattedEnd));\n      }\n      $dropdown.removeClass(\"visible\");\n    });\n\n    // Chiudi il dropdown quando si clicca fuori\n    $CSD(document).on(\"click\", function (e) {\n      if (!$CSD(e.target).closest(\".csd-select-container\").length) {\n        $dropdown.removeClass(\"visible\");\n      }\n    });\n  });\n\n  // Inizializza i datepicker standard\n  var $datepickers = $CSD(\".csd-datepicker:not(.csd-datepicker-range-preset), .csd-datetimepicker\");\n  $datepickers.each(function () {\n    var $input = $CSD(this);\n    var isRange = $input.attr(\"data-range\") === \"true\";\n    var isDateTimePicker = $input.hasClass(\"csd-datetimepicker\");\n    var format = $input.attr(\"data-format\") || (isDateTimePicker ? \"DD/MM/YYYY HH:mm\" : \"DD/MM/YYYY\");\n    var isManualInput = $input.attr(\"data-manual-input\") === \"true\";\n    var multiple = $input.attr(\"data-multiple\") === \"true\";\n    var showClearBtn = $input.attr(\"btn-clear\");\n    var showTodayBtn = $input.attr(\"btn-today\");\n    var minDate = $input.attr(\"min-date\") ? new Date($input.attr(\"min-date\")) : null;\n    var maxDate = $input.attr(\"max-date\") ? new Date($input.attr(\"max-date\")) : null;\n    var isPresetRange = $input.hasClass(\"csd-datepicker-range-preset\");\n    var isFromPreset = $input.attr(\"data-from-preset\") === \"true\";\n\n    // Rendi l'input readonly solo se non è manuale\n    $input.prop(\"readonly\", !isManualInput);\n\n    // Array per date multiple\n    var selectedDates = [];\n\n    // Funzione per aggiornare il valore dell'input con date multiple\n    function updateMultipleInput() {\n      if (multiple) {\n        var formattedDates = selectedDates.sort(function (a, b) {\n          return a - b;\n        }).map(function (date) {\n          return formatDate(date, format);\n        });\n        $input.val(formattedDates.join(\", \"));\n        $input.trigger(\"change\");\n      }\n    }\n\n    // Se è abilitato l'input manuale, aggiungi la validazione della maschera\n    if (isManualInput) {\n      var singleDateMask = format.replace(/YYYY/g, \"9999\").replace(/MM/g, \"19\").replace(/DD/g, \"39\").replace(/HH/g, \"29\").replace(/mm/g, \"59\");\n      var dateMask = isRange ? \"\".concat(singleDateMask, \" - \").concat(singleDateMask) : singleDateMask;\n      $input.attr(\"data-mask\", dateMask);\n      (0,_csd_mask_js__WEBPACK_IMPORTED_MODULE_0__.initializeMask)($input.elements[0]);\n\n      // Gestione dell'input manuale\n      $input.on(\"change\", function () {\n        var value = $input.val();\n        if (isRange) {\n          var _value$split$map = value.split(\"-\").map(function (s) {\n              return s.trim();\n            }),\n            _value$split$map2 = _slicedToArray(_value$split$map, 2),\n            startStr = _value$split$map2[0],\n            endStr = _value$split$map2[1];\n          var startDate = parseDate(startStr, format);\n          var endDate = parseDate(endStr, format);\n          if (startDate && endDate) {\n            selectedDate = startDate;\n            selectedEndDate = endDate;\n            currentDate = new Date(startDate);\n            renderCalendar();\n          }\n        } else if (multiple) {\n          var dateStrings = value.split(\",\").map(function (s) {\n            return s.trim();\n          });\n          selectedDates = dateStrings.map(function (dateStr) {\n            return parseDate(dateStr, format);\n          }).filter(function (date) {\n            return date !== null;\n          });\n          if (selectedDates.length > 0) {\n            currentDate = new Date(selectedDates[0]);\n          }\n          renderCalendar();\n        } else {\n          var date = parseDate(value, format);\n          if (date) {\n            selectedDate = date;\n            currentDate = new Date(date);\n            if (isDateTimePicker) {\n              selectedHours = date.getHours();\n              selectedMinutes = date.getMinutes();\n            }\n            renderCalendar();\n          }\n        }\n      });\n    }\n\n    // Funzione helper per il parsing delle date\n    function parseDate(dateStr, format) {\n      if (!dateStr) return null;\n      var formatParts = format.match(/[A-Za-z]+/g);\n      var valueParts = dateStr.match(/\\d+/g);\n      if (!valueParts || valueParts.length !== formatParts.length) return null;\n      var year,\n        month,\n        day,\n        hours = 0,\n        minutes = 0;\n      formatParts.forEach(function (part, index) {\n        var value = parseInt(valueParts[index]);\n        switch (part) {\n          case \"YYYY\":\n            year = value;\n            break;\n          case \"MM\":\n            month = value - 1;\n            break;\n          case \"DD\":\n            day = value;\n            break;\n          case \"HH\":\n            hours = value;\n            break;\n          case \"mm\":\n            minutes = value;\n            break;\n        }\n      });\n      var date = new Date(year, month, day, hours, minutes);\n      return isNaN(date.getTime()) ? null : date;\n    }\n\n    // Crea il wrapper del calendario\n    var $wrapper = multiple ? $CSD('<div class=\"csd-datepicker-wrapper csd-datepicker-wrapper-multiple\" style=\"display: none;\"></div>') : $CSD('<div class=\"csd-datepicker-wrapper\" style=\"display: none;\"></div>');\n    $input.after($wrapper);\n\n    // Stato del calendario\n    var currentDate = new Date();\n    var selectedDate = null;\n    var selectedEndDate = null;\n    var selecting = false;\n    var showMonthSelect = false;\n    var showYearSelect = false;\n    var selectedHours = currentDate.getHours();\n    var selectedMinutes = currentDate.getMinutes();\n\n    // Se c'è un valore iniziale, usalo\n    if ($input.val()) {\n      var initialDate = new Date($input.val());\n      if (!isNaN(initialDate.getTime())) {\n        selectedDate = initialDate;\n        selectedHours = initialDate.getHours();\n        selectedMinutes = initialDate.getMinutes();\n      }\n    }\n\n    // Array per i mesi e giorni abbreviati in inglese\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var weekdays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\n    // Funzione per formattare la data\n    function formatDate(date) {\n      var customFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : format;\n      if (!date) return \"\";\n      var year = date.getFullYear();\n      var month = String(date.getMonth() + 1).padStart(2, \"0\");\n      var day = String(date.getDate()).padStart(2, \"0\");\n      var hours = String(selectedHours).padStart(2, \"0\");\n      var minutes = String(selectedMinutes).padStart(2, \"0\");\n      return customFormat.replace(\"YYYY\", year).replace(\"MM\", month).replace(\"DD\", day).replace(\"HH\", hours).replace(\"mm\", minutes);\n    }\n\n    // Funzione per aggiornare l'input\n    function updateInput() {\n      if (isRange && selectedDate && selectedEndDate) {\n        $input.val(\"\".concat(formatDate(selectedDate), \" - \").concat(formatDate(selectedEndDate)));\n        currentDate = new Date(selectedDate);\n      } else if (selectedDate) {\n        $input.val(formatDate(selectedDate));\n        currentDate = new Date(selectedDate);\n      } else {\n        $input.val(\"\");\n      }\n    }\n\n    // Funzione per verificare se una data è selezionabile\n    function isDateSelectable(date) {\n      if (minDate && date < minDate) return false;\n      if (maxDate && date > maxDate) return false;\n      return true;\n    }\n\n    // Funzione per verificare se una data è nel range\n    function isInRange(date) {\n      if (!isRange || !selectedDate || !selectedEndDate) return false;\n      return date > selectedDate && date < selectedEndDate;\n    }\n\n    // Funzione per ottenere il primo giorno del mese\n    function getFirstDayOfMonth(date) {\n      return new Date(date.getFullYear(), date.getMonth(), 1);\n    }\n\n    // Funzione per ottenere l'ultimo giorno del mese\n    function getLastDayOfMonth(date) {\n      return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    }\n\n    // Funzione per ottenere i giorni del mese precedente\n    function getPrevMonthDays(firstDay) {\n      var prevMonth = new Date(firstDay);\n      prevMonth.setMonth(prevMonth.getMonth() - 1);\n      var lastDayPrevMonth = getLastDayOfMonth(prevMonth);\n      var startingDay = firstDay.getDay() || 7; // Converte 0 (domenica) in 7\n      var days = [];\n      for (var i = startingDay - 1; i > 0; i--) {\n        var day = new Date(lastDayPrevMonth);\n        day.setDate(lastDayPrevMonth.getDate() - i + 1);\n        days.push(day);\n      }\n      return days;\n    }\n\n    // Funzione per ottenere i giorni del mese successivo\n    function getNextMonthDays(lastDay, totalCells) {\n      var nextMonth = new Date(lastDay);\n      nextMonth.setMonth(nextMonth.getMonth() + 1);\n      var days = [];\n      var dayCount = 1;\n      while (days.length + totalCells < 42) {\n        var day = new Date(nextMonth);\n        day.setDate(dayCount);\n        days.push(day);\n        dayCount++;\n      }\n      return days;\n    }\n\n    // Funzione per confrontare le date (solo giorno/mese/anno)\n    function isSameDay(date1, date2) {\n      return date1 && date2 && date1.getDate() === date2.getDate() && date1.getMonth() === date2.getMonth() && date1.getFullYear() === date2.getFullYear();\n    }\n\n    // Funzione per renderizzare il selettore dei mesi\n    function renderMonthSelect() {\n      var html = '<div class=\"month-select\">';\n      months.forEach(function (month, index) {\n        var isSelected = index === currentDate.getMonth() ? \"\" : \"\";\n        html += \"<button type=\\\"button\\\" class=\\\"month-option \".concat(isSelected, \"\\\" data-month=\\\"\").concat(index, \"\\\">\").concat(month, \"</button>\");\n      });\n      html += \"</div>\";\n      return html;\n    }\n\n    // Funzione per renderizzare il selettore degli anni\n    function renderYearSelect() {\n      var currentYear = currentDate.getFullYear();\n      var startYear = currentYear - 10;\n      var endYear = currentYear + 10;\n      var html = '<div class=\"year-select\">';\n      for (var year = startYear; year <= endYear; year++) {\n        var isSelected = year === currentYear ? \"\" : \"\";\n        html += \"<button type=\\\"button\\\" class=\\\"year-option \".concat(isSelected, \"\\\" data-year=\\\"\").concat(year, \"\\\">\").concat(year, \"</button>\");\n      }\n      html += \"</div>\";\n      return html;\n    }\n\n    // Funzione per renderizzare il selettore dell'ora\n    function renderTimeSelect() {\n      if (!isDateTimePicker) return \"\";\n      return \"\\n          <div class=\\\"time-select\\\">\\n            <div class=\\\"time-field\\\">\\n              <div class=\\\"time-spinner\\\">\\n                <button type=\\\"button\\\" class=\\\"time-btn hour-up\\\">&and;</button>\\n                <input type=\\\"text\\\" class=\\\"time-input hour-input\\\" value=\\\"\".concat(String(selectedHours).padStart(2, \"0\"), \"\\\" readonly>\\n                <button type=\\\"button\\\" class=\\\"time-btn hour-down\\\">&or;</button>\\n              </div>\\n            </div>\\n            <div class=\\\"time-separator\\\">:</div>\\n            <div class=\\\"time-field\\\">\\n              <div class=\\\"time-spinner\\\">\\n                <button type=\\\"button\\\" class=\\\"time-btn minute-up\\\">&and;</button>\\n                <input type=\\\"text\\\" class=\\\"time-input minute-input\\\" value=\\\"\").concat(String(selectedMinutes).padStart(2, \"0\"), \"\\\" readonly>\\n                <button type=\\\"button\\\" class=\\\"time-btn minute-down\\\">&or;</button>\\n              </div>\\n            </div>\\n          </div>\\n        \");\n    }\n\n    // Funzione per renderizzare il calendario\n    function renderCalendar() {\n      var firstDay = getFirstDayOfMonth(currentDate);\n      var lastDay = getLastDayOfMonth(currentDate);\n      var daysInMonth = lastDay.getDate();\n      var isMultiMonths = $input.hasClass(\"multi-months\");\n      var html = \"\";\n\n      // Se è multi-months, renderizza due calendari\n      if (isMultiMonths) {\n        html += '<div class=\"datepicker-multi-months\">';\n\n        // Primo calendario (mese corrente)\n        html += '<div class=\"datepicker-month\">';\n        html += renderSingleMonth(currentDate, true, false);\n        html += \"</div>\";\n\n        // Secondo calendario (mese successivo)\n        var nextMonth = new Date(currentDate);\n        nextMonth.setMonth(nextMonth.getMonth() + 1);\n        html += '<div class=\"datepicker-month\">';\n        html += renderSingleMonth(nextMonth, false, true);\n        html += \"</div>\";\n        html += \"</div>\";\n      } else {\n        html += renderSingleMonth(currentDate, true, true);\n      }\n\n      // Aggiungi il selettore dell'ora se è un datetime picker\n      html += renderTimeSelect();\n      if (showClearBtn || showTodayBtn) {\n        // Aggiungi i pulsanti Today e Clear\n        html += \"\\n            <div class=\\\"datepicker-footer\\\">\\n              \".concat(showClearBtn && showClearBtn != \"false\" ? '<button type=\"button\" class=\"action-btn clear-btn\">' + (showClearBtn && showClearBtn != \"true\" ? showClearBtn : \"Clear\") + \"</button>\" : \"\", \"\\n              \").concat(showTodayBtn && showTodayBtn != \"false\" ? '<button type=\"button\" class=\"action-btn today-btn\">' + (showTodayBtn && showTodayBtn != \"true\" ? showTodayBtn : \"Today\") + \"</button>\" : \"\", \"\\n            </div>\\n          \");\n      }\n\n      // Aggiungi il pulsante \"Indietro\" se il calendario viene da un preset\n      if (isFromPreset) {\n        html += \"\\n            <div class=\\\"datepicker-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"action-btn back-btn\\\">Indietro</button>\\n            </div>\\n          \";\n      }\n      $wrapper.html(html);\n    }\n\n    // Funzione per renderizzare un singolo mese\n    function renderSingleMonth(date) {\n      var showPrevButton = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var showNextButton = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var firstDay = getFirstDayOfMonth(date);\n      var lastDay = getLastDayOfMonth(date);\n      var daysInMonth = lastDay.getDate();\n      var html = \"\\n          <div class=\\\"datepicker-header\\\">\\n            \".concat(showPrevButton ? '<button type=\"button\" class=\"nav-btn prev-month\">&lt;</button>' : \"\", \"\\n            <div class=\\\"month-year-select\\\">\\n              <button type=\\\"button\\\" class=\\\"month-btn\\\">\").concat(months[date.getMonth()], \"</button>\\n              <button type=\\\"button\\\" class=\\\"year-btn\\\">\").concat(date.getFullYear(), \"</button>\\n            </div>\\n            \").concat(showNextButton ? '<button type=\"button\" class=\"nav-btn next-month\">&gt;</button>' : \"\", \"\\n          </div>\");\n\n      // Aggiungi i selettori se sono visibili\n      if (showMonthSelect) {\n        html += renderMonthSelect();\n        return html;\n      }\n      if (showYearSelect) {\n        html += renderYearSelect();\n        return html;\n      }\n      html += '<div class=\"datepicker-grid\">';\n\n      // Giorni della settimana\n      weekdays.forEach(function (day) {\n        html += \"<div class=\\\"weekday\\\">\".concat(day, \"</div>\");\n      });\n\n      // Giorni del mese precedente\n      var prevMonthDays = getPrevMonthDays(firstDay);\n      prevMonthDays.forEach(function (date) {\n        html += \"<div class=\\\"day other-month\\\" data-date=\\\"\".concat(formatDate(date, \"YYYY-MM-DD\"), \"\\\">\").concat(date.getDate(), \"</div>\");\n      });\n\n      // Giorni del mese corrente\n      var _loop = function _loop() {\n        var currentDate = new Date(date.getFullYear(), date.getMonth(), day);\n        var isToday = isSameDay(currentDate, new Date());\n        var isSelected = isSameDay(currentDate, selectedDate);\n        var isEndDate = isSameDay(currentDate, selectedEndDate);\n        var inRange = isInRange(currentDate);\n        var selectable = isDateSelectable(currentDate);\n        var isMultipleSelected = multiple && selectedDates.some(function (d) {\n          return isSameDay(d, currentDate);\n        });\n        var classes = [\"day\", isToday ? \"today\" : \"\", isSelected ? isRange ? \"selected start\" : \"selected\" : \"\", isEndDate ? \"selected end\" : \"\", inRange ? \"in-range\" : \"\", isMultipleSelected ? \"selected\" : \"\", !selectable ? \"disabled\" : \"\"].filter(Boolean).join(\" \");\n        html += \"<div class=\\\"\".concat(classes, \"\\\" data-date=\\\"\").concat(formatDate(currentDate, \"YYYY-MM-DD\"), \"\\\">\").concat(day, \"</div>\");\n      };\n      for (var day = 1; day <= daysInMonth; day++) {\n        _loop();\n      }\n\n      // Giorni del mese successivo\n      var totalCells = prevMonthDays.length + daysInMonth;\n      var nextMonthDays = getNextMonthDays(lastDay, totalCells);\n      nextMonthDays.forEach(function (date) {\n        html += \"<div class=\\\"day other-month\\\" data-date=\\\"\".concat(formatDate(date, \"YYYY-MM-DD\"), \"\\\">\").concat(date.getDate(), \"</div>\");\n      });\n      html += \"</div>\";\n      return html;\n    }\n    if (isManualInput) {\n      // Togliere l'attributo readonly\n      $input.prop(\"readonly\", false);\n      $input.on(\"input\", function () {\n        var inputValue = this.value.trim();\n        var isValidFormat = inputValue.length === format.length && inputValue.split(\"\").every(function (_char, index) {\n          if (format[index] === \"D\" || format[index] === \"M\" || format[index] === \"Y\") {\n            return /\\d/.test(_char);\n          }\n          return _char === format[index];\n        });\n        if (isValidFormat) {\n          var _inputValue$split$map = inputValue.split(\"/\").map(Number),\n            _inputValue$split$map2 = _slicedToArray(_inputValue$split$map, 3),\n            day = _inputValue$split$map2[0],\n            month = _inputValue$split$map2[1],\n            year = _inputValue$split$map2[2];\n          var inputDate = new Date(year, month - 1, day);\n          if (inputDate.getDate() === day && inputDate.getMonth() === month - 1 && inputDate.getFullYear() === year && isDateSelectable(inputDate)) {\n            currentDate = inputDate;\n            selectedDate = inputDate;\n            updateInput();\n            renderCalendar();\n          } else {\n            $input.addClass(\"error\");\n          }\n        } else {\n          $input.addClass(\"error\");\n        }\n      });\n    }\n\n    // Event handlers\n    $input.on(\"click\", function (e) {\n      e.stopPropagation();\n      $CSD(\".csd-datepicker-wrapper\").not($wrapper).hide();\n      $wrapper.toggle();\n      if ($wrapper.is(\":visible\")) {\n        showMonthSelect = false;\n        showYearSelect = false;\n        renderCalendar();\n        positionCalendar($input, $wrapper);\n      } else {}\n    });\n\n    // Aggiorna la posizione quando la finestra viene ridimensionata\n    $CSD(window).on(\"resize\", function () {\n      if ($wrapper.is(\":visible\")) {\n        positionCalendar($input, $wrapper);\n      }\n    });\n\n    // Aggiorna la posizione quando si fa scroll\n    $CSD(window).on(\"scroll\", function () {\n      if ($wrapper.is(\":visible\")) {\n        positionCalendar($input, $wrapper);\n      }\n    });\n    $wrapper.on(\"click\", \".prev-month\", function (e) {\n      e.stopPropagation();\n      currentDate.setMonth(currentDate.getMonth() - 1);\n      renderCalendar();\n    });\n    $wrapper.on(\"click\", \".next-month\", function (e) {\n      e.stopPropagation();\n      currentDate.setMonth(currentDate.getMonth() + 1);\n      renderCalendar();\n    });\n    $wrapper.on(\"click\", \".month-btn\", function (e) {\n      e.stopPropagation();\n      showMonthSelect = !showMonthSelect;\n      showYearSelect = false;\n      renderCalendar();\n    });\n    $wrapper.on(\"click\", \".year-btn\", function (e) {\n      e.stopPropagation();\n      showYearSelect = !showYearSelect;\n      showMonthSelect = false;\n      renderCalendar();\n    });\n    $wrapper.on(\"click\", \".month-option\", function (e) {\n      e.stopPropagation();\n      var month = parseInt($CSD(this).data(\"month\"));\n      currentDate.setMonth(month);\n      showMonthSelect = false;\n      renderCalendar();\n    });\n    $wrapper.on(\"click\", \".year-option\", function (e) {\n      e.stopPropagation();\n      var year = parseInt($CSD(this).data(\"year\"));\n      currentDate.setFullYear(year);\n      showYearSelect = false;\n      renderCalendar();\n    });\n    $wrapper.on(\"click\", \".day:not(.disabled)\", function (e) {\n      e.stopPropagation();\n      var dateStr = $CSD(this).data(\"date\");\n      var _dateStr$split$map = dateStr.split(\"-\").map(Number),\n        _dateStr$split$map2 = _slicedToArray(_dateStr$split$map, 3),\n        year = _dateStr$split$map2[0],\n        month = _dateStr$split$map2[1],\n        day = _dateStr$split$map2[2];\n      var date = new Date(year, month - 1, day);\n      if (multiple) {\n        var existingIndex = selectedDates.findIndex(function (d) {\n          return d.getFullYear() === date.getFullYear() && d.getMonth() === date.getMonth() && d.getDate() === date.getDate();\n        });\n        if (existingIndex >= 0) {\n          // Rimuovi la data se già selezionata\n          selectedDates.splice(existingIndex, 1);\n        } else {\n          // Aggiungi la nuova data\n          selectedDates.push(new Date(date));\n        }\n        updateMultipleInput();\n        renderCalendar();\n        return;\n      }\n      if (isRange) {\n        if (!selecting || selecting && date < selectedDate) {\n          selectedDate = date;\n          selectedEndDate = null;\n          selecting = true;\n        } else {\n          if (date > selectedDate) {\n            selectedEndDate = date;\n          } else {\n            selectedEndDate = selectedDate;\n            selectedDate = date;\n          }\n          selecting = false;\n          if (!showClearBtn && !showTodayBtn) {\n            $wrapper.hide();\n          }\n        }\n        updateInput();\n      } else {\n        selectedDate = date;\n        if (!showClearBtn && !showTodayBtn) {\n          $wrapper.hide();\n        }\n        updateInput();\n      }\n      renderCalendar();\n      $input.trigger(\"change\");\n    });\n\n    // Time spinner handlers\n    $wrapper.on(\"click\", \".hour-up\", function (e) {\n      e.stopPropagation();\n      selectedHours = (selectedHours + 1) % 24;\n      $wrapper.find(\".hour-input\").val(String(selectedHours).padStart(2, \"0\"));\n      updateInput();\n    });\n    $wrapper.on(\"click\", \".hour-down\", function (e) {\n      e.stopPropagation();\n      selectedHours = (selectedHours - 1 + 24) % 24;\n      $wrapper.find(\".hour-input\").val(String(selectedHours).padStart(2, \"0\"));\n      updateInput();\n    });\n    $wrapper.on(\"click\", \".minute-up\", function (e) {\n      e.stopPropagation();\n      selectedMinutes = (selectedMinutes + 1) % 60;\n      $wrapper.find(\".minute-input\").val(String(selectedMinutes).padStart(2, \"0\"));\n      updateInput();\n    });\n    $wrapper.on(\"click\", \".minute-down\", function (e) {\n      e.stopPropagation();\n      selectedMinutes = (selectedMinutes - 1 + 60) % 60;\n      $wrapper.find(\".minute-input\").val(String(selectedMinutes).padStart(2, \"0\"));\n      updateInput();\n    });\n\n    // Event handler per Today\n    $wrapper.on(\"click\", \".today-btn\", function (e) {\n      e.stopPropagation();\n      var today = new Date();\n      if (isRange) {\n        selectedDate = today;\n        selectedEndDate = null;\n        selecting = true;\n      } else {\n        selectedDate = today;\n      }\n      if (isDateTimePicker) {\n        selectedHours = today.getHours();\n        selectedMinutes = today.getMinutes();\n      }\n      currentDate = new Date(today);\n      updateInput();\n      renderCalendar();\n    });\n\n    // Event handler per Clear\n    $wrapper.on(\"click\", \".clear-btn\", function (e) {\n      e.stopPropagation();\n      if (multiple) {\n        selectedDates = [];\n        updateMultipleInput();\n      } else if (isRange) {\n        selectedDate = null;\n        selectedEndDate = null;\n        $input.val(\"\");\n      } else {\n        selectedDate = null;\n        $input.val(\"\");\n      }\n      renderCalendar();\n    });\n\n    // Event handler per Indietro\n    $wrapper.on(\"click\", \".back-btn\", function (e) {\n      e.stopPropagation();\n\n      // Rimuovi le classi del datepicker custom\n      $input.removeClass(\"multi-months\").removeClass(\"csd-datepicker\").removeAttr(\"data-range\").removeAttr(\"data-from-preset\").addClass(\"csd-datepicker-range-preset\").val(\"\"); // Pulisci il valore\n\n      // Rimuovi il calendario\n      $wrapper.remove();\n\n      // Reinizializza come preset e mostra subito il dropdown\n      initializeDatepickers();\n      $input.trigger(\"click\");\n    });\n\n    // Chiudi il calendario quando si clicca fuori\n    $CSD(document).on(\"click\", function (e) {\n      if (!$CSD(e.target).closest(\".csd-datepicker-wrapper\").length && !$CSD(e.target).hasClass(\"csd-datepicker\")) {\n        showMonthSelect = false;\n        showYearSelect = false;\n        $wrapper.hide();\n      }\n    });\n\n    // Funzione per aggiornare l'ora\n    function updateTimeDisplay() {\n      var timeInputs = $wrapper.find(\".time-select\");\n      if (timeInputs.length) {\n        timeInputs.find(\".hour-input\").val(String(selectedHours).padStart(2, \"0\"));\n        timeInputs.find(\".minute-input\").val(String(selectedMinutes).padStart(2, \"0\"));\n      }\n    }\n\n    // Aggiorna l'ora iniziale\n    updateTimeDisplay();\n  });\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-datepicker.js?");

/***/ }),

/***/ "./component/csd-dropdown.js":
/*!***********************************!*\
  !*** ./component/csd-dropdown.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeDropdown: () => (/* binding */ initializeDropdown)\n/* harmony export */ });\nfunction initializeDropdown(element) {\n  if (!element) return;\n  var $element = $CSD(element);\n  var $toggle = $element.find(\".csd-dropdown-toggle\");\n  var $menu = $element.find(\".csd-dropdown-menu, .csd-mega-menu\");\n  if (!$toggle.length || !$menu.length) return;\n  var isMegaMenu = $menu.hasClass(\"csd-mega-menu\");\n  $toggle.on(\"click\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    var $openMenus = $CSD(\".csd-dropdown-menu.show, .csd-mega-menu.show\");\n    $openMenus.each(function () {\n      var $openMenu = $CSD(this);\n      if (!$openMenu.is($menu)) {\n        $openMenu.removeClass(\"show\").closest(\".csd-dropdown\").find(\".csd-dropdown-toggle\").removeClass(\"active\");\n      }\n    });\n    $menu.toggleClass(\"show\");\n    $toggle.toggleClass(\"active\");\n    if (isMegaMenu) {\n      var $menuBar = $element.closest(\".csd-menubar\");\n      if ($menuBar.length) {\n        var dropdownRect = element.getBoundingClientRect();\n        var menuRect = $menu[0].getBoundingClientRect();\n        var viewportWidth = typeof window !== 'undefined' ? window.innerWidth : 1024; // Default fallback\n\n        var leftOffset = Math.max(0, dropdownRect.left - (menuRect.width - dropdownRect.width) / 2);\n        var rightEdge = leftOffset + menuRect.width;\n        var finalLeftOffset = rightEdge > viewportWidth ? viewportWidth - menuRect.width : leftOffset;\n        $menu.css(\"left\", \"\".concat(-finalLeftOffset, \"px\"));\n      }\n    }\n  });\n  $menu.on(\"click\", function (e) {\n    e.stopPropagation();\n  });\n}\n\n// Close dropdowns when clicking outside\n$CSD(document).on(\"click\", function (e) {\n  var $target = $CSD(e.target);\n  if (!$target.closest(\".csd-dropdown\").length) {\n    var $openMenus = $CSD(\".csd-dropdown-menu.show, .csd-mega-menu.show\");\n    $openMenus.each(function () {\n      $CSD(this).removeClass(\"show\").closest(\".csd-dropdown\").find(\".csd-dropdown-toggle\").removeClass(\"active\");\n    });\n  }\n});\nfunction closeAllDropdowns() {\n  $CSD(\".csd-dropdown-menu.show, .csd-mega-menu.show\").each(function () {\n    $CSD(this).removeClass(\"show\").closest(\".csd-dropdown\").find(\".csd-dropdown-toggle\").removeClass(\"active\");\n  });\n}\n\n// Gestione click globale\n$CSD(document).on(\"click\", function (e) {\n  var $target = $CSD(e.target);\n  var $dropdownToggle = $target.closest(\".csd-dropdown-toggle\");\n  if ($dropdownToggle.length) {\n    e.preventDefault();\n    var $dropdown = $dropdownToggle.closest(\".csd-dropdown\");\n    var $menu = $dropdown.find(\".csd-dropdown-menu\");\n    if ($menu.hasClass(\"show\")) {\n      $menu.removeClass(\"show\");\n      $dropdownToggle.removeClass(\"active\");\n    } else {\n      closeAllDropdowns();\n      $menu.addClass(\"show\");\n      $dropdownToggle.addClass(\"active\");\n    }\n    return;\n  }\n  var $submenuToggle = $target.closest(\".has-submenu > a\");\n  if ($submenuToggle.length) {\n    e.preventDefault();\n    var $submenuItem = $submenuToggle.parent();\n    if ($submenuItem.hasClass(\"open\")) {\n      $submenuItem.removeClass(\"open\");\n    } else {\n      var $siblings = $submenuItem.parent().children();\n      $siblings.each(function (index, sibling) {\n        var $sibling = $CSD(sibling);\n        if (!$sibling.is($submenuItem) && $sibling.hasClass(\"has-submenu\")) {\n          $sibling.removeClass(\"open\");\n        }\n      });\n      $submenuItem.addClass(\"open\");\n    }\n    return;\n  }\n  if (!$target.closest(\".csd-dropdown\").length) {\n    closeAllDropdowns();\n  }\n});\n\n\n//# sourceURL=webpack://$CSD/./component/csd-dropdown.js?");

/***/ }),

/***/ "./component/csd-editor.js":
/*!*********************************!*\
  !*** ./component/csd-editor.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeEditor: () => (/* binding */ initializeEditor)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction handleVirtualKeyboard($editor) {\n  var $container = $editor.closest(\".csd-editor-container\");\n  var $mobileToolbar = $container.find(\".csd-editor-toolbar-mobile\");\n  var $bottomToolbar = $mobileToolbar.find(\".csd-editor-toolbar-mobile-bottom\");\n  var $topToolbar = $container.find(\".csd-editor-toolbar-mobile-top\");\n  var scrollTimeout;\n  var isToolbarAction = false;\n  function updateKeyboardHeight() {\n    // Verifica compatibilità SSR\n    if (typeof window !== 'undefined') {\n      var visualViewport = window.visualViewport;\n      if (!visualViewport) return;\n\n      // Calculate keyboard height considering the viewport offset\n      var keyboardHeight = Math.max(0, window.innerHeight - visualViewport.height);\n      var viewportOffset = window.visualViewport.offsetTop || 0;\n\n      // Update the CSS variable for keyboard height\n      document.documentElement.style.setProperty(\"--keyboard-height\", \"\".concat(keyboardHeight, \"px\"));\n\n      // Update classes based on keyboard state\n      if (keyboardHeight > 0) {\n        $container.addClass(\"keyboard-open\");\n        $bottomToolbar.addClass(\"keyboard-open\");\n\n        // Get the top toolbar\n        var _$topToolbar = $container.find(\".csd-editor-toolbar-mobile-top\");\n\n        // When keyboard is open, position both toolbars relative to viewport\n        $bottomToolbar.css({\n          position: \"fixed\",\n          bottom: \"\".concat(keyboardHeight, \"px\"),\n          transform: \"translateY(\".concat(viewportOffset, \"px)\"),\n          zIndex: 1050\n        });\n        _$topToolbar.css({\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          right: 0,\n          transform: \"translateY(\".concat(viewportOffset, \"px)\"),\n          zIndex: 1050\n        });\n      } else if (!isToolbarAction) {\n        // Only hide keyboard if it's not a toolbar action\n        $container.removeClass(\"keyboard-open\");\n        $bottomToolbar.removeClass(\"keyboard-open\");\n\n        // Reset position when keyboard is closed\n        $bottomToolbar.css({\n          position: \"fixed\",\n          bottom: 0,\n          transform: \"none\",\n          zIndex: 1050\n        });\n        $topToolbar.css({\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          right: 0,\n          transform: \"none\",\n          zIndex: 1050\n        });\n      }\n    }\n  }\n  function handleScroll() {\n    // Hide toolbar immediately when scrolling starts\n    $topToolbar.css(\"opacity\", \"0\");\n    $topToolbar.css(\"pointer-events\", \"none\");\n    $bottomToolbar.css(\"opacity\", \"0\");\n    $bottomToolbar.css(\"pointer-events\", \"none\");\n\n    // Clear any existing timeout\n    if (scrollTimeout) {\n      clearTimeout(scrollTimeout);\n    }\n\n    // Set new timeout to show toolbar after scrolling stops\n    scrollTimeout = setTimeout(function () {\n      $topToolbar.css(\"opacity\", \"1\");\n      $topToolbar.css(\"pointer-events\", \"auto\");\n      $bottomToolbar.css(\"opacity\", \"1\");\n      $bottomToolbar.css(\"pointer-events\", \"auto\");\n      updateKeyboardHeight();\n    }, 150);\n  }\n\n  // Listen for viewport changes\n  if (typeof window !== 'undefined' && window.visualViewport) {\n    window.visualViewport.addEventListener(\"resize\", updateKeyboardHeight);\n    window.visualViewport.addEventListener(\"scroll\", handleScroll);\n  }\n\n  // Handle toolbar button clicks\n  $bottomToolbar.on(\"mousedown touchstart\", \".csd-editor-tool\", function (e) {\n    isToolbarAction = true;\n    // Prevent default to avoid losing focus\n    e.preventDefault();\n  });\n  $bottomToolbar.on(\"mouseup touchend\", \".csd-editor-tool\", function () {\n    // Reset after a short delay to allow the action to complete\n    setTimeout(function () {\n      isToolbarAction = false;\n      // Refocus the editor\n      $editor.focus();\n    }, 100);\n  });\n\n  // Focus/blur events with improved positioning\n  $editor.on(\"focus\", function () {\n    updateKeyboardHeight();\n    // Scroll the editor into view if needed\n    var editorRect = $editor[0].getBoundingClientRect();\n    // Verifica compatibilità SSR\n    if (typeof window !== 'undefined') {\n      var viewportHeight = window.visualViewport ? window.visualViewport.height : window.innerHeight;\n      if (editorRect.bottom > viewportHeight) {\n        window.scrollTo({\n          top: window.pageYOffset + (editorRect.bottom - viewportHeight) + 100,\n          behavior: \"smooth\"\n        });\n      }\n    }\n  });\n  $editor.on(\"blur\", function (e) {\n    // Don't hide keyboard if we're clicking a toolbar button\n    if (isToolbarAction || $CSD(e.target).closest(\".csd-color-picker\").length) {\n      e.preventDefault();\n      return;\n    }\n    document.documentElement.style.setProperty(\"--keyboard-height\", \"0px\");\n    $container.removeClass(\"keyboard-open\");\n    $bottomToolbar.removeClass(\"keyboard-open\");\n    $bottomToolbar.css({\n      position: \"fixed\",\n      bottom: 0,\n      transform: \"none\",\n      opacity: \"1\",\n      pointerEvents: \"auto\"\n    });\n  });\n\n  // Initial position\n  updateKeyboardHeight();\n}\nfunction initializeEditor(element) {\n  if (!element || element.initialized) return;\n  var $textarea = $CSD(element);\n  var $container = $CSD('<div class=\"csd-editor-container\"></div>');\n  $textarea.wrap($container);\n\n  // Create menu bar\n  var $menuBar = createMenuBar();\n\n  // Create toolbar\n  var $toolbar = createToolbar($textarea);\n\n  // Create content area\n  var $editor = $CSD('<div class=\"csd-editor-content\" contenteditable=\"true\"></div>');\n  $editor.attr(\"placeholder\", $textarea.attr(\"placeholder\") || \"\");\n\n  // Create status bar\n  var $statusBar = createStatusBar();\n\n  // Insert components\n  $textarea.before($menuBar);\n  $textarea.before($toolbar);\n  $textarea.before($editor);\n  $textarea.after($statusBar);\n  $textarea.hide();\n\n  // Set initial content\n  $editor.html($textarea.val());\n\n  // Handle virtual keyboard\n  handleVirtualKeyboard($editor);\n\n  // Event handlers\n  initializeEventHandlers($editor, $textarea);\n\n  // Add click handlers for dropdowns\n  $toolbar.find(\".csd-editor-toolbar-dropdown > button\").on(\"touchend\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    var $dropdown = $CSD(this).closest(\".csd-editor-toolbar-dropdown\");\n    $dropdown.toggleClass(\"active\");\n\n    // Close other dropdowns\n    $toolbar.find(\".csd-editor-toolbar-dropdown.active\").not($dropdown).removeClass(\"active\");\n  });\n\n  // Close dropdowns when clicking outside\n  $CSD(document).on(\"touchend\", function (e) {\n    if (!$CSD(e.target).closest(\".csd-editor-toolbar-dropdown\").length) {\n      $toolbar.find(\".csd-editor-toolbar-dropdown.active\").removeClass(\"active\");\n    }\n  });\n  function clickToolBtn(el) {\n    var command = $CSD(el).data(\"command\");\n    var value = $CSD(el).data(\"value\");\n    if (command) {\n      // Mantieni il focus prima dell'esecuzione del comando\n      $textarea[0].focus({\n        preventScroll: true\n      });\n      executeCommand(el, $editor);\n\n      // Toggle active state for formatting buttons\n      if ([\"bold\", \"italic\", \"underline\"].includes(command)) {\n        $CSD(el).toggleClass(\"active\");\n      }\n    }\n  }\n\n  // Add click handlers for dropdown menu items\n  $toolbar.find(\".csd-editor-toolbar-dropdown-menu button\").on(\"touchend\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    var command = $CSD(this).data(\"command\");\n    var value = $CSD(this).data(\"value\");\n    if (command) {\n      executeCommand({\n        command: command,\n        value: value\n      }, $editor);\n\n      // Close the dropdown\n      $CSD(this).closest(\".csd-editor-toolbar-dropdown\").removeClass(\"active\");\n\n      // Update dropdown button icon for alignment\n      if (command.startsWith(\"justify\")) {\n        var $dropdownButton = $CSD(this).closest(\".csd-editor-toolbar-dropdown\").find(\"button i\");\n        $dropdownButton.attr(\"class\", $CSD(this).find(\"i\").attr(\"class\"));\n      }\n    }\n  });\n  $toolbar.find(\".csd-editor-tool\").on(\"touchend\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // Esegui l'azione e mantieni il focus\n    clickToolBtn(e.target);\n  });\n\n  // Previeni la perdita del focus durante lo scroll o altri eventi\n  // $toolbar.on(\"scroll touchmove\", function(e) {\n  //   if ($CSD(e.target).closest(\".csd-editor-tool\").length) {\n  //     e.preventDefault();\n  //     $textarea[0].focus({preventScroll: true});\n  //   }\n  // });\n\n  // Update button states based on current selection\n  $editor.on(\"selectionchange\", function () {\n    updateToolbarState($toolbar);\n  });\n\n  // Initialize autoformatting\n  initializeAutoformatting($editor);\n\n  // Mark as initialized\n  element.initialized = true;\n}\nfunction initializeEventHandlers($editor, $textarea) {\n  var $container = $editor.closest(\".csd-editor-container\");\n\n  // Content changes\n  $editor.on(\"input\", function () {\n    $textarea.val($editor.html());\n    $textarea.trigger(\"change\");\n    updateWordCount($container);\n  });\n\n  // Toolbar actions\n  $container.on(\"click\", \".csd-editor-tool\", function (e) {\n    e.preventDefault();\n    var tool = $CSD(this).data(\"tool\");\n    executeCommand(this, $editor);\n  });\n\n  // Menu actions\n  $container.on(\"click\", \".csd-editor-menu-item button\", function (e) {\n    e.preventDefault();\n    var action = $CSD(this).data(\"action\");\n    executeMenuAction(action, $editor);\n  });\n\n  // Initialize word count\n  updateWordCount($container);\n\n  // Paste handling\n  $editor.on(\"paste\", function (e) {\n    e.preventDefault();\n\n    // Prendi il contenuto dagli appunti\n    var clipboardData = e.originalEvent.clipboardData || (typeof window !== 'undefined' ? window.clipboardData : null);\n    var pastedData = clipboardData ? clipboardData.getData(\"text/html\") || clipboardData.getData(\"text\") : '';\n\n    // Crea un elemento temporaneo per pulire il contenuto\n    var div = document.createElement(\"div\");\n    div.innerHTML = pastedData;\n\n    // Rimuovi stili indesiderati\n    var elements = div.getElementsByTagName(\"*\");\n    var _iterator = _createForOfIteratorHelper(elements),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var el = _step.value;\n        // Mantieni solo gli stili di base\n        var allowedStyles = [\"font-weight\", \"font-style\", \"text-decoration\", \"text-align\"];\n        var style = el.style;\n        for (var i = style.length - 1; i >= 0; i--) {\n          var prop = style[i];\n          if (!allowedStyles.includes(prop)) {\n            style.removeProperty(prop);\n          }\n        }\n\n        // Rimuovi classi e ID\n        el.removeAttribute(\"class\");\n        el.removeAttribute(\"id\");\n      }\n\n      // Inserisci il contenuto pulito\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    document.execCommand(\"insertHTML\", false, div.innerHTML);\n  });\n}\nfunction executeCommand(tool, $editor) {\n  if (!tool) return; // Guard against undefined tool\n\n  $editor.focus();\n\n  // Handle both string commands and button elements\n  var command = typeof tool === \"string\" ? tool : tool && _typeof(tool) === \"object\" && tool.dataset ? tool.dataset.command : tool && _typeof(tool) === \"object\" ? tool.command : null;\n  var value = typeof tool === \"string\" ? null : tool && _typeof(tool) === \"object\" && tool.dataset ? tool.dataset.value : tool && _typeof(tool) === \"object\" ? tool.value : null;\n  if (!command) return; // Guard against missing command\n\n  switch (command) {\n    // Basic formatting\n    case \"undo\":\n    case \"redo\":\n    case \"bold\":\n    case \"italic\":\n    case \"underline\":\n    case \"strikethrough\":\n      document.execCommand(command, false);\n      break;\n\n    // Headings\n    case \"heading\":\n      showDropdown($editor, [{\n        text: \"Heading 1\",\n        command: \"formatBlock\",\n        value: \"h1\"\n      }, {\n        text: \"Heading 2\",\n        command: \"formatBlock\",\n        value: \"h2\"\n      }, {\n        text: \"Heading 3\",\n        command: \"formatBlock\",\n        value: \"h3\"\n      }, {\n        text: \"Paragraph\",\n        command: \"formatBlock\",\n        value: \"p\"\n      }]);\n      break;\n    case \"formatBlock\":\n      // Verifica compatibilità SSR\n      if (typeof window !== 'undefined') {\n        var selection = window.getSelection();\n        var range = selection.getRangeAt(0);\n        document.execCommand(command, false, value);\n      }\n      break;\n\n    // Font styling\n    case \"font\":\n      showDropdown($editor, [{\n        text: \"Arial\",\n        command: \"fontName\",\n        value: \"Arial\"\n      }, {\n        text: \"Times New Roman\",\n        command: \"fontName\",\n        value: \"Times New Roman\"\n      }, {\n        text: \"Courier New\",\n        command: \"fontName\",\n        value: \"Courier New\"\n      }, {\n        text: \"Georgia\",\n        command: \"fontName\",\n        value: \"Georgia\"\n      }]);\n      break;\n    case \"fontName\":\n      document.execCommand(command, false, value);\n      break;\n    case \"fontSize\":\n      if (value === null) {\n        showDropdown($editor, [{\n          text: \"Small\",\n          command: \"fontSize\",\n          value: \"1\"\n        }, {\n          text: \"Normal\",\n          command: \"fontSize\",\n          value: \"3\"\n        }, {\n          text: \"Large\",\n          command: \"fontSize\",\n          value: \"5\"\n        }, {\n          text: \"Huge\",\n          command: \"fontSize\",\n          value: \"7\"\n        }]);\n      } else {\n        document.execCommand(command, false, value);\n      }\n      break;\n\n    // Colors\n    case \"textColor\":\n      showColorPicker(\"color\", tool);\n      break;\n    case \"backgroundColor\":\n      showColorPicker(\"backgroundColor\", tool);\n      break;\n\n    // Alignment\n    case \"alignment\":\n      showDropdown($editor, [{\n        text: \"Left\",\n        icon: \"fa-solid fa-align-left\",\n        command: \"justifyLeft\"\n      }, {\n        text: \"Center\",\n        icon: \"fa-solid fa-align-center\",\n        command: \"justifyCenter\"\n      }, {\n        text: \"Right\",\n        icon: \"fa-solid fa-align-right\",\n        command: \"justifyRight\"\n      }, {\n        text: \"Justify\",\n        icon: \"fa-solid fa-align-justify\",\n        command: \"justifyFull\"\n      }]);\n      break;\n    case \"justifyLeft\":\n    case \"justifyCenter\":\n    case \"justifyRight\":\n    case \"justifyFull\":\n      document.execCommand(command, false);\n      break;\n\n    // Lists\n    case \"numberedList\":\n      document.execCommand(\"insertOrderedList\", false);\n      break;\n    case \"bulletedList\":\n      document.execCommand(\"insertUnorderedList\", false);\n      break;\n\n    // Indentation\n    case \"indent\":\n      document.execCommand(\"indent\", false);\n      break;\n    case \"outdent\":\n      document.execCommand(\"outdent\", false);\n      break;\n\n    // Insert elements\n    case \"link\":\n      showLinkPopover($editor);\n      break;\n    case \"image\":\n      showImagePicker($editor);\n      break;\n    case \"table\":\n      showTablePicker($editor);\n      break;\n    case \"specialCharacters\":\n      showSpecialCharacters($editor);\n      break;\n    case \"pageBreak\":\n      document.execCommand(\"insertHTML\", false, '<hr class=\"page-break\">');\n      break;\n    case \"sourceEditing\":\n      toggleSourceMode($editor);\n      break;\n    case \"paste\":\n      // Gestisci l'evento paste direttamente nell'editor\n      var handlePaste = function handlePaste(e) {\n        e.preventDefault();\n\n        // Verifica compatibilità SSR\n        if (typeof window === 'undefined') return;\n\n        // Ottieni il contenuto dagli appunti\n        var clipboardData = e.clipboardData || window.clipboardData;\n        var content;\n\n        // Prova prima a ottenere HTML, altrimenti usa testo semplice\n        if (clipboardData.types.includes(\"text/html\")) {\n          content = clipboardData.getData(\"text/html\");\n\n          // Crea un elemento temporaneo per pulire l'HTML\n          var tempDiv = document.createElement(\"div\");\n          tempDiv.innerHTML = content;\n\n          // Rimuovi tutti gli stili inline e attributi indesiderati\n          var _cleanNode = function cleanNode(node) {\n            if (node.nodeType === 1) {\n              // Element node\n              // Rimuovi tutti gli attributi tranne quelli permessi\n              var allowedAttrs = [\"href\", \"src\", \"alt\"];\n              var attrs = Array.from(node.attributes);\n              attrs.forEach(function (attr) {\n                if (!allowedAttrs.includes(attr.name)) {\n                  node.removeAttribute(attr.name);\n                }\n              });\n\n              // Gestisci stili inline\n              if (node.style.length > 0) {\n                var allowedStyles = [\"font-weight\", \"font-style\", \"text-decoration\", \"text-align\"];\n                var styles = Array.from(node.style);\n                styles.forEach(function (style) {\n                  if (!allowedStyles.includes(style)) {\n                    node.style.removeProperty(style);\n                  }\n                });\n              }\n\n              // Pulisci ricorsivamente i nodi figli\n              Array.from(node.children).forEach(_cleanNode);\n            }\n          };\n          _cleanNode(tempDiv);\n          content = tempDiv.innerHTML;\n        } else {\n          // Se non c'è HTML, usa il testo semplice\n          content = clipboardData.getData(\"text/plain\");\n          content = content.replace(/\\n/g, \"<br>\");\n        }\n\n        // Inserisci il contenuto pulito\n        // Verifica compatibilità SSR\n        if (typeof window !== 'undefined') {\n          var _selection = window.getSelection();\n          if (_selection.rangeCount) {\n            var _range = _selection.getRangeAt(0);\n            _range.deleteContents();\n\n            // Crea un frammento con il contenuto pulito\n            var fragment = document.createDocumentFragment();\n            var temp = document.createElement(\"div\");\n            temp.innerHTML = content;\n            while (temp.firstChild) {\n              fragment.appendChild(temp.firstChild);\n            }\n            _range.insertNode(fragment);\n            _range.collapse(false);\n            _selection.removeAllRanges();\n            _selection.addRange(_range);\n          }\n        }\n      };\n\n      // Aggiungi il gestore dell'evento paste all'editor\n      $editor.elements[0].addEventListener(\"paste\", handlePaste);\n      break;\n    default:\n      if (command) {\n        document.execCommand(command, false, value || null);\n      }\n      break;\n  }\n}\nfunction executeMenuAction(action, $editor) {\n  switch (action) {\n    case \"new\":\n      if (confirm(\"Create new document? All changes will be lost.\")) {\n        $editor.html(\"\");\n      }\n      break;\n    case \"open\":\n      var input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.accept = \".txt,.html,.md\";\n      input.onchange = function (e) {\n        var file = e.target.files[0];\n        if (file) {\n          var reader = new FileReader();\n          reader.onload = function (e) {\n            $editor.html(e.target.result);\n          };\n          reader.readAsText(file);\n        }\n      };\n      input.click();\n      break;\n    case \"save\":\n      var content = $editor.html();\n      // Verifica compatibilità SSR\n      if (typeof window !== 'undefined') {\n        var blob = new Blob([content], {\n          type: \"text/html\"\n        });\n        var url = window.URL.createObjectURL(blob);\n        var a = document.createElement(\"a\");\n        a.href = url;\n        a.download = \"document.html\";\n        a.click();\n        window.URL.revokeObjectURL(url);\n      }\n      break;\n    case \"export-pdf\":\n      alert(\"PDF export functionality requires a PDF generation library. Please implement based on your needs.\");\n      break;\n    case \"export-word\":\n      var wordContent = $editor.html();\n      // Verifica compatibilità SSR\n      if (typeof window !== 'undefined') {\n        var wordBlob = new Blob([wordContent], {\n          type: \"application/msword\"\n        });\n        var wordUrl = window.URL.createObjectURL(wordBlob);\n        var wordLink = document.createElement(\"a\");\n        wordLink.href = wordUrl;\n        wordLink.download = \"document.doc\";\n        wordLink.click();\n        window.URL.revokeObjectURL(wordUrl);\n      }\n      break;\n  }\n}\nfunction showDropdown($editor, items) {\n  var $dropdown = $CSD('<div class=\"csd-editor-dropdown\"></div>');\n  items.forEach(function (item) {\n    var $item = $CSD(\"\\n                <button type=\\\"button\\\" class=\\\"csd-editor-dropdown-item csd-editor-tool\\\" data-command=\\\"\".concat(item.command || \"\", \"\\\" data-value=\\\"\").concat(item.value || \"\", \"\\\">\\n                    \").concat(item.icon ? \"<i class=\\\"\".concat(item.icon, \"\\\"></i>\") : \"\", \"\\n                    <span>\").concat(item.text, \"</span>\\n                </button>\\n            \"));\n    $dropdown.append($item);\n  });\n  var $button = $CSD(event.target).closest(\".csd-editor-tool\");\n  var buttonRect = $button[0].getBoundingClientRect();\n  var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n  $dropdown.css({\n    position: \"absolute\",\n    top: buttonRect.bottom + scrollTop + \"px\",\n    left: buttonRect.left + scrollLeft + \"px\"\n  });\n  $CSD(\"body\").append($dropdown);\n\n  // Gestisci il click sugli item del dropdown\n  $dropdown.on(\"click\", \".csd-editor-dropdown-item\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    var command = this.dataset.command;\n    var value = this.dataset.value;\n    executeCommand(this, $editor);\n    $dropdown.remove();\n  });\n\n  // Previeni la chiusura quando si clicca dentro il dropdown\n  $dropdown.on(\"mousedown\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n  });\n  setTimeout(function () {\n    $CSD(document).on(\"mousedown\", function (e) {\n      if (!$dropdown[0].contains(e.target)) {\n        $dropdown.remove();\n        $CSD(document).off(\"mousedown\");\n      }\n    });\n  }, 0);\n}\nfunction showColorPicker(type, btnTool) {\n  if ($CSD(btnTool).attr(\"data-color-picker\")) {\n    $CSD(btnTool).removeAttr(\"data-color-picker\");\n    $CSD(\".csd-editor-container\").css(\"padding-bottom\", \"0\");\n    return;\n  }\n  event.preventDefault();\n  event.stopPropagation();\n  var elemManipolato;\n  var isElementoManipolatoCreato = false;\n  var $button = $CSD(event.target).closest(\".csd-editor-tool\");\n  var $mobileToolbar = $button.closest(\".csd-editor-toolbar-mobile-bottom\");\n  if ($mobileToolbar.length) {\n    var updateColor = function updateColor() {\n      var h = currentHue;\n      var s = currentSat;\n      var l = currentLit;\n      var c = (1 - Math.abs(2 * l / 100 - 1)) * s / 100;\n      var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n      var m = l / 100 - c / 2;\n      var r, g, b;\n      if (h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n      } else if (h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n      } else if (h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n      } else if (h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n      } else if (h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n      } else {\n        r = c;\n        g = 0;\n        b = x;\n      }\n      var toHex = function toHex(n) {\n        var hex = Math.round((n + m) * 255).toString(16);\n        return hex.length === 1 ? \"0\" + hex : hex;\n      };\n      var color = \"#\" + toHex(r) + toHex(g) + toHex(b);\n      $picker.find(\".color-area\").css(\"background\", \"linear-gradient(to right, #fff, hsl(\".concat(currentHue, \", 100%, 50%))\"));\n      return color;\n    };\n    var $picker = $CSD(\"\\n          <div class=\\\"csd-color-picker\\\" style=\\\"position: absolute; bottom: 100%; left: 0; right: 0; background: #fff; padding: 4px 8px 0; box-shadow: 0 -2px 5px rgba(0,0,0,0.1); z-index: 1000;\\\">\\n            <div class=\\\"color-area\\\" style=\\\"width: 100%; height: 150px; position: relative; background: linear-gradient(to right, #fff, #f00);\\\">\\n              <div style=\\\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(to bottom, transparent, #000);\\\"></div>\\n              <div class=\\\"color-pointer\\\" style=\\\"position: absolute; width: 10px; height: 10px; border: 2px solid #fff; border-radius: 50%; transform: translate(-50%, -50%);\\\"></div>\\n            </div>\\n            <div class=\\\"hue-slider\\\" style=\\\"width: 100%; height: 20px; margin: 6px 0 2px; background: linear-gradient(to right, #f00, #ff0, #0f0, #0ff, #00f, #f0f, #f00); position: relative;\\\">\\n              <div class=\\\"hue-handle\\\" style=\\\"position: absolute; top: 0; width: 5px; height: 100%; background: #fff; border: 1px solid #000; transform: translateX(-50%);\\\"></div>\\n            </div>\\n          </div>\\n        \");\n    var currentHue = 0;\n    var currentSat = 100;\n    var currentLit = 50;\n    $CSD(\".csd-editor-container\").css(\"padding-bottom\", \"var(--keyboard-height)\");\n    var id = \"color-picker-\" + Math.random().toString(36).substring(2, 9);\n    $picker.attr(\"data-id\", id);\n    $CSD(btnTool).attr(\"data-color-picker\", id);\n    $mobileToolbar.append($picker);\n\n    // Verifica compatibilità SSR\n    if (typeof window !== 'undefined') {\n      window.scrollBy({\n        top: scrollNeeded,\n        behavior: \"smooth\"\n      });\n    }\n\n    // Eventi per l'area colore\n    var $colorArea = $picker.find(\".color-area\");\n    var $colorPointer = $picker.find(\".color-pointer\");\n    $colorArea.on(\"touchstart\", function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var rect = this.getBoundingClientRect();\n      function handleMove(e) {\n        e.stopPropagation();\n        var touch = e.touches[0];\n        var x = Math.max(0, Math.min(touch.clientX - rect.left, rect.width));\n        var y = Math.max(0, Math.min(touch.clientY - rect.top, rect.height));\n        currentSat = x / rect.width * 100;\n        currentLit = 100 - y / rect.height * 100;\n        $colorPointer.css({\n          left: x + \"px\",\n          top: y + \"px\"\n        });\n        var color = updateColor();\n        var selection = window.getSelection();\n        var range = selection.getRangeAt(0);\n        if (range.collapsed) {\n          // Se non c'è selezione, crea uno span colorato\n          if (!elemManipolato) {\n            elemManipolato = document.createElement(\"span\");\n          }\n          if (type == \"color\") {\n            elemManipolato.style.color = color;\n          } else if (type == \"background\") {\n            elemManipolato.style.backgroundColor = color;\n          }\n          elemManipolato.innerHTML = \"\\u200B\"; // Zero-width space\n          range.insertNode(elemManipolato);\n          range.setStartAfter(elemManipolato);\n        } else {\n          // Se c'è selezione, applica il colore al testo selezionato\n          if (!elemManipolato) {\n            elemManipolato = document.createElement(\"span\");\n          }\n          if (type == \"color\") {\n            elemManipolato.style.color = color;\n          } else if (type == \"background\") {\n            elemManipolato.style.backgroundColor = color;\n          }\n          if (!isElementoManipolatoCreato) {\n            range.surroundContents(elemManipolato);\n            isElementoManipolatoCreato = true;\n          }\n        }\n      }\n      $CSD(document).on(\"touchmove\", handleMove);\n      $CSD(document).on(\"touchend touchcancel\", function cleanup() {\n        $CSD(document).off(\"touchmove\", handleMove);\n        $CSD(document).off(\"touchend touchcancel\", cleanup);\n      });\n      handleMove(e);\n    });\n\n    // Eventi per lo slider della tonalità\n    var $hueSlider = $picker.find(\".hue-slider\");\n    var $hueHandle = $picker.find(\".hue-handle\");\n    $hueSlider.on(\"touchstart\", function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var rect = this.getBoundingClientRect();\n      function handleMove(e) {\n        e.stopPropagation();\n        var touch = e.touches[0];\n        var x = Math.max(0, Math.min(touch.clientX - rect.left, rect.width));\n        currentHue = x / rect.width * 360;\n        $hueHandle.css(\"left\", x + \"px\");\n        var color = updateColor();\n        var selection = window.getSelection();\n        var range = selection.getRangeAt(0);\n        if (range.collapsed) {\n          // Se non c'è selezione, crea uno span colorato\n          if (!elemManipolato) {\n            elemManipolato = document.createElement(\"span\");\n          }\n          if (type == \"color\") {\n            elemManipolato.style.color = color;\n          } else if (type == \"background\") {\n            elemManipolato.style.backgroundColor = color;\n          }\n          elemManipolato.innerHTML = \"\\u200B\"; // Zero-width space\n          range.insertNode(elemManipolato);\n          range.setStartAfter(elemManipolato);\n        } else {\n          // Se c'è selezione, applica il colore al testo selezionato\n          if (!elemManipolato) {\n            elemManipolato = document.createElement(\"span\");\n          }\n          if (type == \"color\") {\n            elemManipolato.style.color = color;\n          } else if (type == \"background\") {\n            elemManipolato.style.backgroundColor = color;\n          }\n          if (!isElementoManipolatoCreato) {\n            range.surroundContents(elemManipolato);\n            isElementoManipolatoCreato = true;\n          }\n        }\n      }\n      $CSD(document).on(\"touchmove\", handleMove);\n      $CSD(document).on(\"touchend touchcancel\", function cleanup() {\n        $CSD(document).off(\"touchmove\", handleMove);\n        $CSD(document).off(\"touchend touchcancel\", cleanup);\n      });\n      handleMove(e);\n    });\n    updateColor();\n\n    // Imposta posizione iniziale\n    $colorPointer.css({\n      left: \"100%\",\n      top: \"0%\"\n    });\n    $hueHandle.css(\"left\", \"0\");\n\n    // Chiudi quando si clicca fuori\n    setTimeout(function () {\n      $CSD(document).one(\"touchstart\", function (e) {\n        if (!$picker[0].contains(e.target)) {\n          $CSD(\".csd-editor-container\").css(\"padding-bottom\", \"0\");\n          $picker.remove();\n        }\n      });\n    }, 0);\n  } else {\n    // Per desktop, mostra la griglia di colori\n    var _$picker = $CSD(\"\\n          <div class=\\\"csd-editor-color-picker\\\">\\n            <div class=\\\"color-grid\\\">\\n              \".concat([\"#000000\", \"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#FFFFFF\", \"#808080\", \"#800000\", \"#008000\", \"#000080\", \"#808000\", \"#800080\", \"#008080\", \"#C0C0C0\"].map(function (color) {\n      return \"\\n                <button type=\\\"button\\\" class=\\\"color-item\\\" style=\\\"background-color: \".concat(color, \"\\\" data-color=\\\"\").concat(color, \"\\\"></button>\\n              \");\n    }).join(\"\"), \"\\n            </div>\\n          </div>\\n        \"));\n    var buttonRect = $button[0].getBoundingClientRect();\n    var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    _$picker.css({\n      position: \"absolute\",\n      top: buttonRect.bottom + scrollTop + \"px\",\n      left: buttonRect.left + scrollLeft + \"px\"\n    });\n    $CSD(\"body\").append(_$picker);\n    _$picker.on(\"click\", \".color-item\", function () {\n      var color = $CSD(this).data(\"color\");\n      var selection = window.getSelection();\n      var range = selection.getRangeAt(0);\n      if (range.collapsed) {\n        // Se non c'è selezione, crea uno span colorato\n        if (!elemManipolato) {\n          elemManipolato = document.createElement(\"span\");\n        }\n        if (type == \"color\") {\n          elemManipolato.style.color = color;\n        } else if (type == \"background\") {\n          elemManipolato.style.backgroundColor = color;\n        }\n        elemManipolato.innerHTML = \"\\u200B\"; // Zero-width space\n        range.insertNode(elemManipolato);\n        range.setStartAfter(elemManipolato);\n      } else {\n        // Se c'è selezione, applica il colore al testo selezionato\n        if (!elemManipolato) {\n          elemManipolato = document.createElement(\"span\");\n        }\n        if (type == \"color\") {\n          elemManipolato.style.color = color;\n        } else if (type == \"background\") {\n          elemManipolato.style.backgroundColor = color;\n        }\n        if (!isElementoManipolatoCreato) {\n          range.surroundContents(elemManipolato);\n          isElementoManipolatoCreato = true;\n        }\n      }\n    });\n    setTimeout(function () {\n      $CSD(document).on(\"click\", function (e) {\n        var $target = $CSD(e.target);\n        if (!$target.closest(\".csd-editor-color-picker\").length || !$target.closest(\".csd-color-picker\").length) {\n          _$picker.remove();\n        }\n      });\n    }, 0);\n  }\n}\nfunction showSpecialCharacters($editor) {\n  var specialChars = [\"€\", \"£\", \"$\", \"¥\", \"¢\", \"₽\", \"₹\", \"±\", \"×\", \"÷\", \"≠\", \"≈\", \"≤\", \"≥\", \"∞\", \"∑\", \"∏\", \"√\", \"∫\", \"∂\", \"∆\", \"¼\", \"½\", \"¾\", \"⅓\", \"⅔\", \"⅕\", \"⅖\", \"⅗\", \"⅘\", \"←\", \"→\", \"↑\", \"↓\", \"↔\", \"↕\", \"⇐\", \"⇒\", \"⇑\", \"⇓\", \"©\", \"®\", \"™\", \"§\", \"¶\", \"†\", \"‡\", \"•\", \"·\", \"…\", \"‰\", \"′\", \"″\", \"À\", \"Á\", \"È\", \"É\", \"Ì\", \"Í\", \"Ò\", \"Ó\", \"Ù\", \"Ú\", \"à\", \"á\", \"è\", \"é\", \"ì\", \"í\", \"ò\", \"ó\", \"ù\", \"ú\"];\n  var $picker = $CSD('<div class=\"csd-editor-special-chars\"></div>');\n  var $grid = $CSD(\"\\n            <div class=\\\"special-chars-grid\\\">\\n                \".concat(specialChars.map(function (_char) {\n    return \"\\n                    <button type=\\\"button\\\" class=\\\"special-char-item\\\" title=\\\"\".concat(_char, \"\\\">\").concat(_char, \"</button>\\n                \");\n  }).join(\"\"), \"\\n            </div>\\n        \"));\n  $picker.append($grid);\n\n  // Stili inline per il picker\n  $picker.css({\n    position: \"absolute\",\n    background: \"#fff\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    padding: \"10px\",\n    boxShadow: \"0 2px 8px rgba(0,0,0,0.15)\",\n    zIndex: 1000,\n    maxHeight: \"400px\",\n    overflowY: \"auto\",\n    width: \"400px\"\n  });\n  $picker.find(\".special-chars-grid\").css({\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(10, 1fr)\",\n    gap: \"5px\"\n  });\n\n  // Stili per i bottoni\n  $picker.find(\".special-char-item\").css({\n    width: \"30px\",\n    height: \"30px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    background: \"#fff\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"16px\",\n    transition: \"all 0.2s\"\n  });\n\n  // Posizionamento\n  var $button = $CSD(event.target).closest(\".csd-editor-tool\");\n  var buttonRect = $button[0].getBoundingClientRect();\n  var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n  $picker.css({\n    top: buttonRect.bottom + scrollTop + 5 + \"px\",\n    left: buttonRect.left + scrollLeft + \"px\"\n  });\n  $CSD(\"body\").append($picker);\n\n  // Hover effect per i bottoni\n  $picker.find(\".special-char-item\").hover(function () {\n    $(this).css({\n      background: \"#f5f5f5\",\n      borderColor: \"#999\"\n    });\n  }, function () {\n    $(this).css({\n      background: \"#fff\",\n      borderColor: \"#ddd\"\n    });\n  });\n\n  // Click handler\n  $picker.on(\"click\", \".special-char-item\", function (e) {\n    e.stopPropagation();\n    var _char2 = $CSD(this).text().trim();\n    document.execCommand(\"insertText\", false, _char2);\n    $picker.remove();\n  });\n\n  // Chiudi il picker quando si clicca fuori\n  setTimeout(function () {\n    $CSD(document).one(\"mousedown\", function (e) {\n      if (!$picker[0].contains(e.target)) {\n        $picker.remove();\n      }\n    });\n  }, 0);\n}\nfunction insertTable($editor, rows, cols) {\n  var tableHtml = \"<table><tbody>\";\n  for (var i = 0; i < rows; i++) {\n    tableHtml += \"<tr>\";\n    for (var j = 0; j < cols; j++) {\n      tableHtml += \"<td><br></td>\";\n    }\n    tableHtml += \"</tr>\";\n  }\n  tableHtml += \"</tbody></table>\";\n  var editorElement = $editor.elements[0];\n  // Verifica compatibilità SSR\n  if (typeof window === 'undefined') return;\n  var selection = window.getSelection();\n  var range;\n\n  // Se c'è una selezione usa quella, altrimenti crea un nuovo range alla fine\n  if (selection.rangeCount > 0) {\n    range = selection.getRangeAt(0);\n    // Verifica che il range sia all'interno dell'editor\n    if (!editorElement.contains(range.commonAncestorContainer)) {\n      range = null;\n    }\n  }\n\n  // Se non abbiamo un range valido, troviamo il punto di inserimento corretto\n  if (!range) {\n    range = document.createRange();\n\n    // Se c'è un nodo di testo attivo, usa quello\n    if (document.activeElement === editorElement && selection.focusNode) {\n      if (selection.focusNode.nodeType === Node.TEXT_NODE) {\n        range.setStart(selection.focusNode, selection.focusOffset);\n        range.setEnd(selection.focusNode, selection.focusOffset);\n      } else {\n        // Se il nodo focus non è un nodo di testo, cerca il punto di inserimento più vicino\n        var walker = document.createTreeWalker(editorElement, NodeFilter.SHOW_TEXT, null, false);\n        var node;\n        var closestNode = null;\n        var minDistance = Infinity;\n        while (node = walker.nextNode()) {\n          var _range2 = document.createRange();\n          _range2.selectNode(node);\n          var rect = _range2.getBoundingClientRect();\n          var distance = Math.abs(rect.top - selection.focusNode.getBoundingClientRect().top);\n          if (distance < minDistance) {\n            minDistance = distance;\n            closestNode = node;\n          }\n        }\n        if (closestNode) {\n          range.setStart(closestNode, closestNode.length);\n          range.setEnd(closestNode, closestNode.length);\n        } else {\n          // Se non troviamo nessun nodo di testo, crea uno nuovo\n          var textNode = document.createTextNode(\"\");\n          editorElement.appendChild(textNode);\n          range.setStart(textNode, 0);\n          range.setEnd(textNode, 0);\n        }\n      }\n    } else {\n      // Se l'editor non è attivo, inserisci alla fine\n      var lastNode = editorElement.lastChild;\n\n      // Se l'ultimo nodo è un BR, crea un nuovo nodo di testo\n      if (!lastNode || lastNode.nodeName === \"BR\") {\n        var _textNode = document.createTextNode(\"\");\n        editorElement.appendChild(_textNode);\n        lastNode = _textNode;\n      }\n      range.selectNode(lastNode);\n      range.collapse(false);\n    }\n\n    // Aggiorna la selezione\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n  var table = document.createElement(\"table\");\n  table.innerHTML = tableHtml;\n\n  // Inserisci la tabella\n  range.deleteContents();\n  range.insertNode(table);\n\n  // Aggiungi uno spazio dopo la tabella per facilitare l'editing\n  var space = document.createElement(\"p\");\n  space.innerHTML = \"<br>\";\n  table.parentNode.insertBefore(space, table.nextSibling);\n\n  // Sposta il cursore dopo la tabella\n  var newRange = document.createRange();\n  newRange.setStartAfter(space);\n  newRange.collapse(true);\n  selection.removeAllRanges();\n  selection.addRange(newRange);\n}\nfunction toggleSourceMode($editor) {\n  var $container = $editor.closest(\".csd-editor-container\");\n  var isSourceMode = $container.hasClass(\"source-mode\");\n  if (isSourceMode) {\n    var sourceCode = $editor.text();\n    $editor.html(sourceCode);\n    $container.removeClass(\"source-mode\");\n  } else {\n    var htmlContent = $editor.html();\n    $editor.text(htmlContent);\n    $container.addClass(\"source-mode\");\n  }\n}\nfunction updateWordCount($container) {\n  var text = $container.find(\".csd-editor-content\").text();\n  var words = text.trim().split(/\\s+/).length;\n  var chars = text.length;\n  $container.find(\".csd-editor-wordcount\").text(\"Words: \".concat(words));\n  $container.find(\".csd-editor-charcount\").text(\"Characters: \".concat(chars));\n}\n\n// Markdown-style autoformatting\nfunction initializeAutoformatting($editor) {\n  // Formatta il contenuto iniziale\n  function formatInitialContent() {\n    var content = $editor.html();\n    if (!content) return;\n\n    // Dividi il contenuto in linee\n    var lines = content.split(/\\n|<br\\/?>/);\n    var formattedLines = lines.map(function (line) {\n      line = line.trim();\n\n      // Headings\n      if (line.match(/^#\\s/)) {\n        return \"<h1>\".concat(line.replace(/^#\\s/, \"\"), \"</h1>\");\n      } else if (line.match(/^##\\s/)) {\n        return \"<h2>\".concat(line.replace(/^##\\s/, \"\"), \"</h2>\");\n      } else if (line.match(/^###\\s/)) {\n        return \"<h3>\".concat(line.replace(/^###\\s/, \"\"), \"</h3>\");\n      }\n      // Lists\n      else if (line.match(/^[\\*\\-]\\s/)) {\n        return \"<ul><li>\".concat(line.replace(/^[\\*\\-]\\s/, \"\"), \"</li></ul>\");\n      } else if (line.match(/^1\\.\\s/)) {\n        return \"<ol><li>\".concat(line.replace(/^1\\.\\s/, \"\"), \"</li></ol>\");\n      }\n      // Blockquote\n      else if (line.match(/^>\\s/)) {\n        return \"<blockquote>\".concat(line.replace(/^>\\s/, \"\"), \"</blockquote>\");\n      }\n      // Code block\n      else if (line.match(/^```/)) {\n        return \"<pre><code>\";\n      }\n      // Inline formatting\n      else {\n        // Bold\n        line = line.replace(/\\*\\*([^\\*]+)\\*\\*/g, \"<strong>$1</strong>\");\n        // Italic\n        line = line.replace(/\\*([^\\*]+)\\*/g, \"<em>$1</em>\");\n        // Code\n        line = line.replace(/`([^`]+)`/g, \"<code>$1</code>\");\n        // Links\n        line = line.replace(/\\[([^\\]]+)\\]\\(([^\\)]+)\\)/g, '<a href=\"$2\">$1</a>');\n        return line ? \"<p>\".concat(line, \"</p>\") : \"<p><br></p>\";\n      }\n    });\n    $editor.html(formattedLines.join(\"\"));\n  }\n\n  // Formatta il contenuto iniziale\n  formatInitialContent();\n\n  // Gestisci gli eventi di formattazione durante l'editing\n  $editor.on(\"keydown\", function (e) {\n    if (e.key === \"Enter\") {\n      // Verifica compatibilità SSR\n      if (typeof window === 'undefined') return;\n\n      // Verifica compatibilità SSR\n      if (typeof window === 'undefined') return;\n      var selection = window.getSelection();\n      if (!selection || !selection.rangeCount) return;\n      var _line = selection.anchorNode.textContent;\n\n      // Headings\n      if (_line && _line.match(/^#\\s/)) {\n        e.preventDefault();\n        document.execCommand(\"formatBlock\", false, \"h1\");\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n      } else if (_line.match(/^##\\s/)) {\n        e.preventDefault();\n        document.execCommand(\"formatBlock\", false, \"h2\");\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n      } else if (_line.match(/^###\\s/)) {\n        e.preventDefault();\n        document.execCommand(\"formatBlock\", false, \"h3\");\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n      }\n      // Lists\n      else if (_line.match(/^[\\*\\-]\\s/)) {\n        e.preventDefault();\n        document.execCommand(\"insertUnorderedList\", false);\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n      } else if (_line.match(/^1\\.\\s/)) {\n        e.preventDefault();\n        document.execCommand(\"insertOrderedList\", false);\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n      }\n      // Blockquote\n      else if (_line.match(/^>\\s/)) {\n        e.preventDefault();\n        document.execCommand(\"formatBlock\", false, \"blockquote\");\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n      }\n      // Code block\n      else if (_line.match(/^```/)) {\n        e.preventDefault();\n        document.execCommand(\"formatBlock\", false, \"pre\");\n        var pre = selection.anchorNode.parentElement;\n        if (pre.tagName === \"PRE\") {\n          var code = document.createElement(\"code\");\n          pre.appendChild(code);\n          var range = document.createRange();\n          range.setStart(code, 0);\n          selection.removeAllRanges();\n          selection.addRange(range);\n        }\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n        document.execCommand(\"delete\", false);\n      }\n    }\n    // Keyboard shortcuts\n    else if (e.ctrlKey) {\n      switch (e.key.toLowerCase()) {\n        case \"b\":\n          e.preventDefault();\n          document.execCommand(\"bold\", false);\n          break;\n        case \"i\":\n          e.preventDefault();\n          document.execCommand(\"italic\", false);\n          break;\n        case \"u\":\n          e.preventDefault();\n          document.execCommand(\"underline\", false);\n          break;\n      }\n    }\n    // Tab handling\n    else if (e.key === \"Tab\") {\n      e.preventDefault();\n      document.execCommand(e.shiftKey ? \"outdent\" : \"indent\", false);\n    }\n    // Inline formatting\n    else if (e.key === \" \") {\n      // Verifica compatibilità SSR\n      if (typeof window === 'undefined') return;\n      var _selection2 = window.getSelection();\n      if (!_selection2) return;\n      var anchorNode = _selection2.anchorNode;\n      var position = _selection2.anchorOffset;\n\n      // Bold with **text**\n      if (anchorNode && anchorNode.textContent && anchorNode.textContent.match(/\\*\\*([^\\*]+)\\*\\*$/)) {\n        e.preventDefault();\n        var text = anchorNode.textContent.match(/\\*\\*([^\\*]+)\\*\\*$/)[1];\n        replaceText(_selection2, text, position, \"**\", document.execCommand.bind(document, \"bold\", false));\n      }\n      // Italic with *text*\n      else if (line.match(/\\*([^\\*]+)\\*$/)) {\n        e.preventDefault();\n        var _text = line.match(/\\*([^\\*]+)\\*$/)[1];\n        replaceText(_selection2, _text, position, \"*\", document.execCommand.bind(document, \"italic\", false));\n      }\n      // Code with `code`\n      else if (line.match(/`([^`]+)`$/)) {\n        e.preventDefault();\n        var _text2 = line.match(/`([^`]+)`$/)[1];\n        replaceText(_selection2, _text2, position, \"`\", function () {\n          document.execCommand(\"fontName\", false, \"monospace\");\n        });\n      }\n      // Links with [text](url)\n      else if (line.match(/\\[([^\\]]+)\\]\\(([^\\)]+)\\)$/)) {\n        e.preventDefault();\n        var matches = line.match(/\\[([^\\]]+)\\]\\(([^\\)]+)\\)$/);\n        var _text3 = matches[1];\n        var url = matches[2];\n        var _range3 = document.createRange();\n        _range3.setStart(_selection2.anchorNode, position - matches[0].length);\n        _range3.setEnd(_selection2.anchorNode, position);\n        _selection2.removeAllRanges();\n        _selection2.addRange(_range3);\n        document.execCommand(\"createLink\", false, url);\n        document.execCommand(\"insertText\", false, \" \");\n      }\n    }\n  });\n}\n\n// Helper function to replace markdown text with formatted text\nfunction replaceText(selection, text, position, marker, formatCommand) {\n  var range = document.createRange();\n  range.setStart(selection.anchorNode, position - (text.length + 2 * marker.length));\n  range.setEnd(selection.anchorNode, position);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  formatCommand();\n  document.execCommand(\"insertText\", false, text + \" \");\n}\n\n// Editor Configuration\nvar EDITOR_MENU_ITEMS = {\n  file: [{\n    label: \"New Document\",\n    icon: \"fa-regular fa-file\",\n    action: \"new\"\n  }, {\n    label: \"Open...\",\n    icon: \"fa-regular fa-folder-open\",\n    action: \"open\"\n  }, {\n    label: \"Save\",\n    icon: \"fa-regular fa-floppy-disk\",\n    action: \"save\"\n  }, {\n    label: \"Export as PDF\",\n    icon: \"fa-regular fa-file-pdf\",\n    action: \"export-pdf\"\n  }, {\n    label: \"Export as Word\",\n    icon: \"fa-regular fa-file-word\",\n    action: \"export-word\"\n  }],\n  edit: [{\n    label: \"Undo\",\n    icon: \"fa-solid fa-rotate-left\",\n    action: \"undo\"\n  }, {\n    label: \"Redo\",\n    icon: \"fa-solid fa-rotate-right\",\n    action: \"redo\"\n  }, {\n    label: \"Cut\",\n    icon: \"fa-regular fa-scissors\",\n    action: \"cut\"\n  }, {\n    label: \"Copy\",\n    icon: \"fa-regular fa-copy\",\n    action: \"copy\"\n  }, {\n    label: \"Paste\",\n    icon: \"fa-regular fa-clipboard\",\n    action: \"paste\"\n  }],\n  insert: [{\n    label: \"Image\",\n    icon: \"fa-regular fa-image\",\n    action: \"image\"\n  }, {\n    label: \"Table\",\n    icon: \"fa-solid fa-table\",\n    action: \"table\"\n  }, {\n    label: \"Link\",\n    icon: \"fa-solid fa-link\",\n    action: \"link\"\n  }, {\n    label: \"Special Character\",\n    icon: \"fa-solid fa-s\",\n    action: \"special-char\"\n  }, {\n    label: \"Page Break\",\n    icon: \"fa-solid fa-grip-lines\",\n    action: \"page-break\"\n  }],\n  format: [{\n    label: \"Bold\",\n    icon: \"fa-solid fa-bold\",\n    action: \"bold\"\n  }, {\n    label: \"Italic\",\n    icon: \"fa-solid fa-italic\",\n    action: \"italic\"\n  }, {\n    label: \"Underline\",\n    icon: \"fa-solid fa-underline\",\n    action: \"underline\"\n  }, {\n    label: \"Strikethrough\",\n    icon: \"fa-solid fa-strikethrough\",\n    action: \"strikethrough\"\n  }]\n};\nvar EDITOR_TOOLBAR_ITEMS = [[\"undo\", \"redo\"], [\"cut\", \"copy\", \"paste\"], [\"heading\"], [\"bold\", \"italic\", \"underline\", \"strikethrough\"], [\"font\", \"fontSize\"], [\"textColor\", \"backgroundColor\"], [\"alignment\"], [\"numberedList\", \"bulletedList\"], [\"indent\", \"outdent\"], [\"link\", \"image\", \"table\"], [\"specialCharacters\", \"pageBreak\"], [\"sourceEditing\"]];\nfunction createMobileToolbar($editor) {\n  var $mobileToolbar = $CSD('<div class=\"csd-editor-toolbar-mobile\"></div>');\n\n  // Top toolbar (fixed at top)\n  var $topToolbar = $CSD('<div class=\"csd-editor-toolbar-mobile-top\"></div>');\n\n  // Navigation group (undo, redo)\n  var $navGroup = $CSD('<div class=\"csd-editor-toolbar-group\"></div>');\n  $navGroup.append(\"\\n            <button class=\\\"csd-editor-tool\\\" data-command=\\\"undo\\\">\\n                <i class=\\\"fa-solid fa-rotate-left\\\"></i>\\n            </button>\\n            <button class=\\\"csd-editor-tool\\\" data-command=\\\"redo\\\">\\n                <i class=\\\"fa-solid fa-rotate-right\\\"></i>\\n            </button>\\n            <button class=\\\"csd-editor-tool\\\" data-command=\\\"copy\\\">\\n                <i class=\\\"fa-solid fa-copy\\\"></i>\\n            </button>\\n            <button class=\\\"csd-editor-tool\\\" data-command=\\\"paste\\\">\\n                <i class=\\\"fa-solid fa-paste\\\"></i>\\n            </button>\\n        \");\n\n  // Insert dropdown\n  var $insertButton = $CSD(\"\\n            <div class=\\\"csd-editor-toolbar-dropdown\\\">\\n                <button class=\\\"csd-editor-tool\\\">\\n                    <i class=\\\"fa-solid fa-plus\\\"></i>\\n                </button>\\n                <div class=\\\"csd-editor-toolbar-dropdown-menu\\\">\\n                    <button data-command=\\\"image\\\"><i class=\\\"fa-regular fa-image\\\"></i> Image</button>\\n                    <button data-command=\\\"link\\\"><i class=\\\"fa-solid fa-link\\\"></i> Link</button>\\n                </div>\\n            </div>\\n        \");\n  $topToolbar.append($navGroup);\n  $topToolbar.append($insertButton);\n\n  // Bottom toolbar (above keyboard)\n  var $bottomToolbar = $CSD('<div class=\"csd-editor-toolbar-mobile-bottom\"></div>');\n\n  // Format group\n  var $formatGroup = $CSD('<div class=\"csd-editor-toolbar-group\"></div>');\n  $formatGroup.append(\"\\n            <button class=\\\"csd-editor-tool\\\" data-command=\\\"bold\\\" style=\\\"width: 100%; height: 100%;\\\">\\n                <i class=\\\"fa-solid fa-bold\\\" style=\\\"pointer-events: none;\\\"></i>\\n            </button>\\n            <button class=\\\"csd-editor-tool\\\" data-command=\\\"italic\\\" style=\\\"width: 100%; height: 100%;\\\">\\n                <i class=\\\"fa-solid fa-italic\\\" style=\\\"pointer-events: none;\\\"></i>\\n            </button>\\n            <button class=\\\"csd-editor-tool\\\" data-command=\\\"underline\\\" style=\\\"width: 100%; height: 100%;\\\">\\n                <i class=\\\"fa-solid fa-underline\\\" style=\\\"pointer-events: none;\\\"></i>\\n            </button>\\n            <button class=\\\"csd-editor-tool\\\" data-command=\\\"textColor\\\" style=\\\"width: 100%; height: 100%;\\\">\\n                <i class=\\\"fa-solid fa-palette\\\" style=\\\"pointer-events: none;\\\"></i>\\n            </button>\\n        \");\n\n  // Align dropdown\n  var $alignButton = $CSD(\"\\n            <div class=\\\"csd-editor-toolbar-dropdown\\\">\\n                <button class=\\\"csd-editor-tool\\\" style=\\\"width: 100%; height: 100%;\\\">\\n                    <i class=\\\"fa-solid fa-align-left\\\" style=\\\"pointer-events: none;\\\"></i>\\n                </button>\\n                <div class=\\\"csd-editor-toolbar-dropdown-menu\\\">\\n                    <button data-command=\\\"justifyLeft\\\" style=\\\"width: 100%;\\\"><i class=\\\"fa-solid fa-align-left\\\" style=\\\"pointer-events: none;\\\"></i></button>\\n                    <button data-command=\\\"justifyCenter\\\" style=\\\"width: 100%;\\\"><i class=\\\"fa-solid fa-align-center\\\" style=\\\"pointer-events: none;\\\"></i></button>\\n                    <button data-command=\\\"justifyRight\\\" style=\\\"width: 100%;\\\"><i class=\\\"fa-solid fa-align-right\\\" style=\\\"pointer-events: none;\\\"></i></button>\\n                </div>\\n            </div>\\n        \");\n\n  // Font size button (Aa)\n  var $fontSizeButton = $CSD(\"\\n            <div class=\\\"csd-editor-toolbar-dropdown\\\">\\n                <button class=\\\"csd-editor-tool\\\" style=\\\"width: 100%; height: 100%;\\\">\\n                    <i class=\\\"fa-solid fa-text-height\\\" style=\\\"pointer-events: none;\\\"></i>\\n                </button>\\n                <div class=\\\"csd-editor-toolbar-dropdown-menu\\\">\\n                    <button data-command=\\\"fontSize\\\" data-value=\\\"1\\\" style=\\\"width: 100%;\\\">Small</button>\\n                    <button data-command=\\\"fontSize\\\" data-value=\\\"3\\\" style=\\\"width: 100%;\\\">Normal</button>\\n                    <button data-command=\\\"fontSize\\\" data-value=\\\"5\\\" style=\\\"width: 100%;\\\">Large</button>\\n                    <button data-command=\\\"fontSize\\\" data-value=\\\"7\\\" style=\\\"width: 100%;\\\">Huge</button>\\n                </div>\\n            </div>\\n        \");\n\n  // More options dropdown\n  var $moreButton = $CSD(\"\\n            <div class=\\\"csd-editor-toolbar-dropdown\\\">\\n                <button class=\\\"csd-editor-tool\\\" style=\\\"width: 100%; height: 100%;\\\">\\n                    <i class=\\\"fa-solid fa-ellipsis\\\" style=\\\"pointer-events: none;\\\"></i>\\n                </button>\\n                <div class=\\\"csd-editor-toolbar-dropdown-menu\\\">\\n                    <button data-command=\\\"strikethrough\\\" style=\\\"width: 100%;\\\"><i class=\\\"fa-solid fa-strikethrough\\\" style=\\\"pointer-events: none;\\\"></i> Strikethrough</button>\\n                    <button data-command=\\\"subscript\\\" style=\\\"width: 100%;\\\"><i class=\\\"fa-solid fa-subscript\\\" style=\\\"pointer-events: none;\\\"></i> Subscript</button>\\n                    <button data-command=\\\"superscript\\\" style=\\\"width: 100%;\\\"><i class=\\\"fa-solid fa-superscript\\\" style=\\\"pointer-events: none;\\\"></i> Superscript</button>\\n                    <button data-command=\\\"indent\\\" style=\\\"width: 100%;\\\"><i class=\\\"fa-solid fa-indent\\\" style=\\\"pointer-events: none;\\\"></i> Indent</button>\\n                    <button data-command=\\\"outdent\\\" style=\\\"width: 100%;\\\"><i class=\\\"fa-solid fa-outdent\\\" style=\\\"pointer-events: none;\\\"></i> Outdent</button>\\n                </div>\\n            </div>\\n        \");\n  $bottomToolbar.append($formatGroup);\n  $bottomToolbar.append($alignButton);\n  $bottomToolbar.append($fontSizeButton);\n  $bottomToolbar.append($moreButton);\n  $mobileToolbar.append($topToolbar);\n  $mobileToolbar.append($bottomToolbar);\n  return $mobileToolbar;\n}\n\n// Helper function to update toolbar button states\nfunction updateToolbarState($toolbar) {\n  var commands = [\"bold\", \"italic\", \"underline\"];\n  commands.forEach(function (cmd) {\n    var isActive = document.queryCommandState(cmd);\n    $toolbar.find(\"[data-command=\\\"\".concat(cmd, \"\\\"]\")).toggleClass(\"active\", isActive);\n  });\n}\n\n// Update createToolbar to pass $editor\nfunction createToolbar($editor) {\n  // Create desktop toolbar\n  var $desktopToolbar = $CSD('<div class=\"csd-editor-toolbar\"></div>');\n\n  // Add toolbar groups\n  EDITOR_TOOLBAR_ITEMS.forEach(function (group) {\n    var $group = $CSD('<div class=\"csd-editor-toolbar-group\"></div>');\n    group.forEach(function (item) {\n      var $button = createToolbarButton(item);\n      $group.append($button);\n    });\n    $desktopToolbar.append($group);\n  });\n\n  // Create mobile toolbar\n  var $mobileToolbar = createMobileToolbar($editor);\n\n  // Return both toolbars wrapped in a container\n  var $toolbars = $CSD('<div class=\"csd-editor-toolbars\"></div>').append($desktopToolbar).append($mobileToolbar);\n  return $toolbars;\n}\nfunction createMenuBar() {\n  var $menuBar = $CSD('<div class=\"csd-editor-menubar\"></div>');\n\n  // Add menu items\n  Object.keys(EDITOR_MENU_ITEMS).forEach(function (menu) {\n    var $menuItem = $CSD(\"<div class=\\\"csd-editor-menu-item\\\">\\n                <span>\".concat(menu.charAt(0).toUpperCase() + menu.slice(1), \"</span>\\n                <div class=\\\"csd-editor-menu-dropdown\\\">\\n                    \").concat(EDITOR_MENU_ITEMS[menu].map(function (item) {\n      return \"\\n                        <button type=\\\"button\\\" data-action=\\\"\".concat(item.action, \"\\\">\\n                            <i class=\\\"\").concat(item.icon, \"\\\"></i>\\n                            \").concat(item.label, \"\\n                        </button>\\n                    \");\n    }).join(\"\"), \"\\n                </div>\\n            </div>\"));\n    $menuBar.append($menuItem);\n  });\n  return $menuBar;\n}\nfunction createToolbarButton(tool) {\n  var buttonConfig = {\n    undo: {\n      icon: \"fa-solid fa-rotate-left\",\n      title: \"Undo (Ctrl+Z)\",\n      shortcut: \"Ctrl+Z\"\n    },\n    redo: {\n      icon: \"fa-solid fa-rotate-right\",\n      title: \"Redo (Ctrl+Y)\",\n      shortcut: \"Ctrl+Y\"\n    },\n    cut: {\n      icon: \"fa-regular fa-scissors\",\n      title: \"Cut (Ctrl+X)\",\n      shortcut: \"Ctrl+X\"\n    },\n    copy: {\n      icon: \"fa-regular fa-copy\",\n      title: \"Copy (Ctrl+C)\",\n      shortcut: \"Ctrl+C\"\n    },\n    paste: {\n      icon: \"fa-regular fa-clipboard\",\n      title: \"Paste (Ctrl+V)\",\n      shortcut: \"Ctrl+V\"\n    },\n    heading: {\n      icon: \"fa-solid fa-heading\",\n      title: \"Heading\",\n      dropdown: true\n    },\n    bold: {\n      icon: \"fa-solid fa-bold\",\n      title: \"Bold (Ctrl+B)\",\n      shortcut: \"Ctrl+B\"\n    },\n    italic: {\n      icon: \"fa-solid fa-italic\",\n      title: \"Italic (Ctrl+I)\",\n      shortcut: \"Ctrl+I\"\n    },\n    underline: {\n      icon: \"fa-solid fa-underline\",\n      title: \"Underline (Ctrl+U)\",\n      shortcut: \"Ctrl+U\"\n    },\n    strikethrough: {\n      icon: \"fa-solid fa-strikethrough\",\n      title: \"Strikethrough\"\n    },\n    font: {\n      icon: \"fa-solid fa-font\",\n      title: \"Font Family\",\n      dropdown: true\n    },\n    fontSize: {\n      icon: \"fa-solid fa-text-height\",\n      title: \"Font Size\",\n      dropdown: true\n    },\n    textColor: {\n      icon: \"fa-solid fa-palette\",\n      title: \"Text Color\",\n      dropdown: true\n    },\n    backgroundColor: {\n      icon: \"fa-solid fa-fill\",\n      title: \"Background Color\",\n      dropdown: true\n    },\n    alignment: {\n      icon: \"fa-solid fa-align-justify\",\n      title: \"Text Alignment\",\n      dropdown: true\n    },\n    numberedList: {\n      icon: \"fa-solid fa-list-ol\",\n      title: \"Numbered List (Ctrl+Shift+7)\"\n    },\n    bulletedList: {\n      icon: \"fa-solid fa-list-ul\",\n      title: \"Bulleted List (Ctrl+Shift+8)\"\n    },\n    indent: {\n      icon: \"fa-solid fa-indent\",\n      title: \"Increase Indent (Tab)\"\n    },\n    outdent: {\n      icon: \"fa-solid fa-outdent\",\n      title: \"Decrease Indent (Shift+Tab)\"\n    },\n    link: {\n      icon: \"fa-solid fa-link\",\n      title: \"Insert Link (Ctrl+K)\",\n      shortcut: \"Ctrl+K\"\n    },\n    image: {\n      icon: \"fa-regular fa-image\",\n      title: \"Insert Image\"\n    },\n    table: {\n      icon: \"fa-solid fa-table\",\n      title: \"Insert Table\"\n    },\n    specialCharacters: {\n      icon: \"fa-solid fa-s\",\n      title: \"Special Characters\"\n    },\n    pageBreak: {\n      icon: \"fa-solid fa-grip-lines\",\n      title: \"Insert Page Break\"\n    },\n    sourceEditing: {\n      icon: \"fa-solid fa-code\",\n      title: \"Source Editing\"\n    }\n  };\n  var config = buttonConfig[tool];\n  if (!config) return \"\";\n  var tooltipText = config.title;\n  var $button = $CSD(\"\\n            <button type=\\\"button\\\" class=\\\"csd-editor-tool\\\" data-command=\\\"\".concat(tool, \"\\\">\\n                <i class=\\\"\").concat(config.icon, \"\\\"></i>\\n                \").concat(config.dropdown ? '<i class=\"fa-solid fa-chevron-down\"></i>' : \"\", \"\\n                <span class=\\\"csd-editor-tooltip\\\">\").concat(tooltipText, \"</span>\\n            </button>\\n        \"));\n  return $button;\n}\nfunction createStatusBar() {\n  return $CSD(\"\\n            <div class=\\\"csd-editor-statusbar\\\">\\n                <div class=\\\"csd-editor-wordcount\\\">Words: 0</div>\\n                <div class=\\\"csd-editor-charcount\\\">Characters: 0</div>\\n            </div>\\n        \");\n}\nfunction handleSpecialCommands(command, $editor) {\n  var $textarea = $editor.find(\"[contenteditable]\");\n  switch (command) {\n    case \"insertImage\":\n      var imageUrl = prompt(\"Enter image URL:\");\n      if (imageUrl) {\n        $textarea[0].focus();\n        document.execCommand(\"insertImage\", false, imageUrl);\n      }\n      break;\n    case \"insertLink\":\n      var url = prompt(\"Enter URL:\");\n      if (url) {\n        var text = prompt(\"Enter link text:\", url);\n        $textarea[0].focus();\n        if (text) {\n          document.execCommand(\"insertHTML\", false, \"<a href=\\\"\".concat(url, \"\\\">\").concat(text, \"</a>\"));\n        } else {\n          document.execCommand(\"createLink\", false, url);\n        }\n      }\n      break;\n    case \"insertTable\":\n      var rows = prompt(\"Number of rows:\", \"2\");\n      var cols = prompt(\"Number of columns:\", \"2\");\n      if (rows && cols) {\n        var tableHtml = '<table style=\"width:100%;border-collapse:collapse;\">';\n        for (var i = 0; i < rows; i++) {\n          tableHtml += \"<tr>\";\n          for (var j = 0; j < cols; j++) {\n            tableHtml += '<td style=\"border:1px solid #ccc;padding:8px;\">&nbsp;</td>';\n          }\n          tableHtml += \"</tr>\";\n        }\n        tableHtml += \"</table>\";\n        $textarea[0].focus();\n        document.execCommand(\"insertHTML\", false, tableHtml);\n      }\n      break;\n    case \"insertSpecialChar\":\n      var specialChars = [\"©\", \"®\", \"™\", \"€\", \"£\", \"¥\", \"¢\", \"§\", \"°\", \"±\"];\n      var _char3 = prompt(\"Choose a special character:\\n\" + specialChars.join(\" \"));\n      if (_char3) {\n        $textarea[0].focus();\n        document.execCommand(\"insertText\", false, _char3);\n      }\n      break;\n  }\n}\nfunction showLinkPopover($editor) {\n  var selection = window.getSelection();\n  var editorElement = $editor.elements[0];\n  var range;\n  var selectedText = \"\";\n  if (selection.rangeCount > 0) {\n    range = selection.getRangeAt(0);\n    selectedText = range.toString();\n\n    // Verifica che il range sia all'interno dell'editor\n    if (!editorElement.contains(range.commonAncestorContainer)) {\n      range = null;\n    }\n  }\n\n  // Se non abbiamo un range valido, troviamo il punto di inserimento corretto\n  if (!range) {\n    range = document.createRange();\n\n    // Se c'è un nodo di testo attivo, usa quello\n    if (document.activeElement === editorElement && selection.focusNode) {\n      if (selection.focusNode.nodeType === Node.TEXT_NODE) {\n        range.setStart(selection.focusNode, selection.focusOffset);\n        range.setEnd(selection.focusNode, selection.focusOffset);\n      } else {\n        // Se il nodo focus non è un nodo di testo, cerca il punto di inserimento più vicino\n        var walker = document.createTreeWalker(editorElement, NodeFilter.SHOW_TEXT, null, false);\n        var node;\n        var closestNode = null;\n        var minDistance = Infinity;\n        while (node = walker.nextNode()) {\n          var _range4 = document.createRange();\n          _range4.selectNode(node);\n          var _rect = _range4.getBoundingClientRect();\n          var distance = Math.abs(_rect.top - selection.focusNode.getBoundingClientRect().top);\n          if (distance < minDistance) {\n            minDistance = distance;\n            closestNode = node;\n          }\n        }\n        if (closestNode) {\n          range.setStart(closestNode, closestNode.length);\n          range.setEnd(closestNode, closestNode.length);\n        } else {\n          // Se non troviamo nessun nodo di testo, crea uno nuovo\n          var textNode = document.createTextNode(\"\");\n          editorElement.appendChild(textNode);\n          range.setStart(textNode, 0);\n          range.setEnd(textNode, 0);\n        }\n      }\n    } else {\n      // Se l'editor non è attivo, inserisci alla fine\n      var lastNode = editorElement.lastChild;\n\n      // Se l'ultimo nodo è un BR, crea un nuovo nodo di testo\n      if (!lastNode || lastNode.nodeName === \"BR\") {\n        var _textNode2 = document.createTextNode(\"\");\n        editorElement.appendChild(_textNode2);\n        lastNode = _textNode2;\n      }\n      range.selectNode(lastNode);\n      range.collapse(false);\n    }\n\n    // Aggiorna la selezione\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n  var $popover = $CSD(\"\\n          <div class=\\\"csd-editor-link-popover\\\">\\n              <div class=\\\"link-form\\\">\\n                  <div class=\\\"csd-field\\\">\\n                      <label class=\\\"csd-label\\\">URL:</label>\\n                      <input type=\\\"text\\\" class=\\\"csd-input link-url\\\" placeholder=\\\"https://\\\" value=\\\"\\\">\\n                  </div>\\n                  <div class=\\\"csd-field\\\">\\n                      <label class=\\\"csd-label\\\">Testo:</label>\\n                      <input type=\\\"text\\\" class=\\\"csd-input link-text\\\" value=\\\"\".concat(selectedText, \"\\\">\\n                  </div>\\n                  <div class=\\\"form-buttons\\\">\\n                      <button type=\\\"button\\\" class=\\\"csd-btn btn-insert\\\">Inserisci</button>\\n                      <button type=\\\"button\\\" class=\\\"csd-btn btn-cancel\\\">Annulla</button>\\n                  </div>\\n              </div>\\n          </div>\\n      \"));\n\n  // Prima prova con getBoundingClientRect\n  var rect = range.getBoundingClientRect();\n\n  // Se il rect è vuoto, prova con getClientRects\n  if (rect.top === 0 && rect.left === 0 && rect.width === 0 && rect.height === 0) {\n    var rects = range.getClientRects();\n    if (rects.length > 0) {\n      rect = rects[0];\n    } else {\n      rect = editorElement.getBoundingClientRect();\n    }\n  }\n  var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n  $popover.css({\n    position: \"absolute\",\n    top: rect.bottom + scrollTop + \"px\",\n    left: rect.left + scrollLeft + \"px\"\n  });\n  $CSD(\"body\").append($popover);\n\n  // Previeni la chiusura quando si clicca dentro il popover\n  $popover.on(\"mousedown\", function (e) {\n    if (![\"INPUT\", \"TEXTAREA\"].includes(e.target.tagName)) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n  });\n\n  // Gestisci la cancellazione\n  $popover.find(\".btn-cancel\").on(\"click\", function () {\n    $popover.remove();\n  });\n\n  // Gestisci l'inserimento del link\n  $popover.find(\".btn-insert\").on(\"click\", function () {\n    var url = $popover.find(\".link-url\").val();\n    var text = $popover.find(\".link-text\").val();\n    if (url) {\n      var link = document.createElement(\"a\");\n      link.href = url;\n      link.textContent = text || url;\n      link.title = url;\n      link.style.cursor = \"pointer\";\n      link.addEventListener(\"dblclick\", function (e) {\n        e.preventDefault();\n        if (typeof window !== 'undefined') {\n          window.open(this.href, \"_blank\");\n        }\n      });\n      range.deleteContents();\n      range.insertNode(link);\n\n      // Inserisci uno spazio dopo il link\n      var space = document.createTextNode(\" \");\n      if (link.nextSibling) {\n        link.parentNode.insertBefore(space, link.nextSibling);\n      } else {\n        link.parentNode.appendChild(space);\n      }\n\n      // Sposta il cursore dopo il link\n      var newRange = document.createRange();\n      newRange.setStartAfter(space);\n      newRange.collapse(true);\n      selection.removeAllRanges();\n      selection.addRange(newRange);\n    }\n    $popover.remove();\n  });\n\n  // Focus sull'URL all'apertura\n  $popover.find(\".link-url\").focus();\n  var _handleClickOutside = function handleClickOutside(e) {\n    if (!$popover.elements[0].contains(e.target)) {\n      $popover.remove();\n      $CSD(document).off(\"mousedown\", _handleClickOutside);\n    }\n  };\n\n  // Aggiungi l'event listener dopo un breve delay\n  setTimeout(function () {\n    $CSD(document).on(\"mousedown\", _handleClickOutside);\n  }, 100);\n}\nfunction showImagePicker($editor) {\n  // Crea un input file nascosto\n  var input = document.createElement(\"input\");\n  input.type = \"file\";\n  input.accept = \"image/*\";\n  input.onchange = function () {\n    var file = this.files[0];\n    if (file) {\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        var img = document.createElement(\"img\");\n        img.src = e.target.result;\n        img.style.maxWidth = \"100%\";\n        img.style.position = \"relative\";\n        img.style.cursor = \"default\";\n        img.className = \"csd-resizable-image\";\n\n        // Wrapper per l'immagine\n        var corners = [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"];\n        var wrapper = document.createElement(\"div\");\n        wrapper.style.cssText = \"\\n      position: relative;\\n      display: inline-block;\\n      margin: 5px;\\n    \";\n\n        // Aggiungi i cerchi di resize agli angoli\n        corners.forEach(function (position) {\n          var corner = document.createElement(\"div\");\n          corner.className = \"resize-corner \".concat(position);\n          corner.style.cssText = \"\\n        position: absolute;\\n        width: 12px;\\n        height: 12px;\\n        background: white;\\n        border: 2px solid #007bff;\\n        border-radius: 50%;\\n        cursor: ew-resize;\\n        opacity: 0;\\n        transition: opacity 0.2s ease;\\n        z-index: 1000;\\n      \";\n\n          // Posiziona i cerchi agli angoli\n          switch (position) {\n            case \"top-left\":\n              corner.style.top = \"-6px\";\n              corner.style.left = \"-6px\";\n              break;\n            case \"top-right\":\n              corner.style.top = \"-6px\";\n              corner.style.right = \"-6px\";\n              break;\n            case \"bottom-left\":\n              corner.style.bottom = \"-6px\";\n              corner.style.left = \"-6px\";\n              break;\n            case \"bottom-right\":\n              corner.style.bottom = \"-6px\";\n              corner.style.right = \"-6px\";\n              break;\n          }\n          wrapper.appendChild(corner);\n        });\n\n        // Mostra/nascondi i cerchi al hover\n        wrapper.addEventListener(\"mouseenter\", function () {\n          wrapper.querySelectorAll(\".resize-corner\").forEach(function (corner) {\n            corner.style.opacity = \"1\";\n          });\n        });\n        wrapper.addEventListener(\"mouseleave\", function () {\n          if (!isResizing) {\n            wrapper.querySelectorAll(\".resize-corner\").forEach(function (corner) {\n              corner.style.opacity = \"0\";\n            });\n          }\n        });\n\n        // Durante il resize, mantieni i cerchi visibili\n        wrapper.addEventListener(\"mousedown\", function () {\n          wrapper.querySelectorAll(\".resize-corner\").forEach(function (corner) {\n            corner.style.opacity = \"1\";\n          });\n        });\n        wrapper.appendChild(img);\n        function stopResize() {\n          isResizing = false;\n          activeCorner = null;\n          document.body.style.userSelect = \"\";\n          wrapper.classList.remove(\"resizing\");\n        }\n\n        // Eventi mouse per i cerchi\n        wrapper.querySelectorAll(\".resize-corner\").forEach(function (corner) {\n          corner.addEventListener(\"mousedown\", initResize);\n          corner.addEventListener(\"touchstart\", initResize);\n        });\n\n        // Eventi mouse per l'immagine\n        img.addEventListener(\"mousedown\", initResize);\n\n        // Inserisci nel documento\n        var selection = window.getSelection();\n        var range = selection.getRangeAt(0);\n        range.deleteContents();\n        range.insertNode(wrapper);\n\n        // Inserisci uno spazio dopo l'immagine\n        var space = document.createTextNode(\" \");\n        wrapper.parentNode.insertBefore(space, wrapper.nextSibling);\n\n        // Rendi l'immagine resizable\n        var isResizing = false;\n        var startX, startWidth;\n        var activeCorner = null;\n        function initResize(e) {\n          isResizing = true;\n          startX = e.type.includes(\"mouse\") ? e.pageX : e.touches[0].pageX;\n          startWidth = img.offsetWidth;\n          e.preventDefault();\n          document.body.style.userSelect = \"none\";\n          wrapper.classList.add(\"resizing\");\n        }\n        function resize(e) {\n          if (!isResizing) return;\n          var currentX = e.type.includes(\"mouse\") ? e.pageX : e.touches[0].pageX;\n          var diff = currentX - startX;\n\n          // Calcola la nuova larghezza mantenendo i limiti\n          var newWidth;\n          if (activeCorner) {\n            // Se stiamo usando un angolo sinistro, invertiamo la direzione\n            if (activeCorner.classList.contains(\"top-left\") || activeCorner.classList.contains(\"bottom-left\")) {\n              newWidth = startWidth - diff;\n            } else {\n              newWidth = startWidth + diff;\n            }\n          } else {\n            newWidth = startWidth + diff;\n          }\n          newWidth = Math.max(50, Math.min(newWidth, wrapper.parentNode.offsetWidth));\n          img.style.width = newWidth + \"px\";\n          e.preventDefault();\n        }\n        function stopResize() {\n          isResizing = false;\n          activeCorner = null;\n          document.body.style.userSelect = \"\";\n          wrapper.classList.remove(\"resizing\");\n        }\n\n        // Eventi mouse\n        img.addEventListener(\"mousedown\", initResize);\n        document.addEventListener(\"mousemove\", resize);\n        document.addEventListener(\"mouseup\", stopResize);\n\n        // Eventi touch\n        img.addEventListener(\"touchstart\", initResize);\n        document.addEventListener(\"touchmove\", resize);\n        document.addEventListener(\"touchend\", stopResize);\n\n        // Cleanup degli event listener quando l'immagine viene rimossa\n        var cleanup = function cleanup() {\n          document.removeEventListener(\"mousemove\", resize);\n          document.removeEventListener(\"mouseup\", stopResize);\n          document.removeEventListener(\"touchmove\", resize);\n          document.removeEventListener(\"touchend\", stopResize);\n        };\n\n        // Osserva se l'immagine viene rimossa dal DOM\n        var observer = new MutationObserver(function (mutations) {\n          mutations.forEach(function (mutation) {\n            mutation.removedNodes.forEach(function (node) {\n              if (node === wrapper) {\n                cleanup();\n                observer.disconnect();\n              }\n            });\n          });\n        });\n        observer.observe(wrapper.parentNode, {\n          childList: true\n        });\n\n        // Sposta il cursore dopo l'immagine\n        var newRange = document.createRange();\n        newRange.setStartAfter(space);\n        newRange.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(newRange);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  input.click();\n}\nfunction showTablePicker($editor) {\n  var maxRows = 8;\n  var maxCols = 8;\n  var selectedRows = 0;\n  var selectedCols = 0;\n\n  // Crea la griglia\n  var gridHtml = '<div class=\"table-grid\">';\n  for (var i = 0; i < maxRows; i++) {\n    gridHtml += '<div class=\"table-row\">';\n    for (var j = 0; j < maxCols; j++) {\n      gridHtml += \"<div class=\\\"table-cell\\\" data-row=\\\"\".concat(i, \"\\\" data-col=\\\"\").concat(j, \"\\\"></div>\");\n    }\n    gridHtml += \"</div>\";\n  }\n  gridHtml += \"</div>\";\n  gridHtml += '<div class=\"table-size\">0 x 0</div>';\n  var $picker = $CSD(\"\\n          <div class=\\\"csd-editor-table-picker\\\">\\n              \".concat(gridHtml, \"\\n          </div>\\n      \"));\n  function updateSelection(row, col) {\n    selectedRows = row + 1;\n    selectedCols = col + 1;\n\n    // Aggiorna il testo delle dimensioni\n    $picker.find(\".table-size\").text(\"\".concat(selectedRows, \" x \").concat(selectedCols));\n\n    // Aggiorna la selezione visiva\n    $picker.find(\".table-cell\").each(function () {\n      var $cell = $CSD(this);\n      var cellRow = parseInt($cell.data(\"row\"));\n      var cellCol = parseInt($cell.data(\"col\"));\n      if (cellRow <= row && cellCol <= col) {\n        $cell.addClass(\"selected\");\n      } else {\n        $cell.removeClass(\"selected\");\n      }\n    });\n  }\n\n  // Posiziona il picker\n  var $button = $CSD(event.target).closest(\".csd-editor-tool\");\n  var buttonRect = $button.elements[0].getBoundingClientRect();\n  var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n  $picker.css({\n    position: \"absolute\",\n    top: buttonRect.bottom + scrollTop + \"px\",\n    left: buttonRect.left + scrollLeft + \"px\"\n  });\n  $CSD(\"body\").append($picker);\n\n  // Gestisci l'hover sulle celle\n  $picker.on(\"mouseover\", \".table-cell\", function (e) {\n    var row = parseInt($CSD(this).data(\"row\"));\n    var col = parseInt($CSD(this).data(\"col\"));\n    updateSelection(row, col);\n  });\n\n  // Mantieni la selezione quando il mouse esce dalla griglia\n  $picker.find(\".table-grid\").on(\"mouseleave\", function () {\n    if (selectedRows > 0 && selectedCols > 0) {\n      updateSelection(selectedRows - 1, selectedCols - 1);\n    }\n  });\n\n  // Gestisci il click per inserire la tabella\n  $picker.on(\"click\", \".table-cell\", function () {\n    if (selectedRows > 0 && selectedCols > 0) {\n      insertTable($editor, selectedRows, selectedCols);\n      $picker.remove();\n    }\n  });\n\n  // Previeni la chiusura quando si clicca dentro il picker\n  $picker.on(\"mousedown\", function (e) {\n    e.stopPropagation();\n  });\n  var _handleClickOutside2 = function handleClickOutside(e) {\n    if (!$picker.elements[0].contains(e.target)) {\n      $picker.remove();\n      $CSD(document).off(\"mousedown\", _handleClickOutside2);\n    }\n  };\n\n  // Aggiungi l'event listener dopo un breve delay\n  setTimeout(function () {\n    $CSD(document).on(\"mousedown\", _handleClickOutside2);\n  }, 100);\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-editor.js?");

/***/ }),

/***/ "./component/csd-fab.js":
/*!******************************!*\
  !*** ./component/csd-fab.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   destroyFab: () => (/* binding */ destroyFab),\n/* harmony export */   initializeFab: () => (/* binding */ initializeFab)\n/* harmony export */ });\n// Tiene traccia di tutti i FAB attivi\nvar activeFabs = new Set();\n\n/**\n * Destroys a FAB instance, removing all event handlers and cleaning up state\n * @param {HTMLElement} fabElement - The FAB element to destroy\n */\nfunction destroyFab(fabElement) {\n  if (!fabElement) return;\n  var $fab = $CSD(fabElement);\n\n  // Check if the element is already initialized\n  if (!$fab.attr('data-csd-fab-initialized')) {\n    return; // Not initialized, nothing to destroy\n  }\n\n  // Use the existing destroy method if available\n  if (fabElement.csdFab && fabElement.csdFab.destroy) {\n    fabElement.csdFab.destroy();\n  }\n\n  // Remove from active FABs\n  activeFabs[\"delete\"](fabElement);\n\n  // Remove event listeners by cloning elements\n  var $mainButton = $fab.find('.csd-fab-button').first();\n  var $lists = $fab.find('.csd-fab-list');\n  if ($mainButton.length) {\n    var $newMainButton = $mainButton.clone(false, true);\n    $mainButton.replaceWith($newMainButton);\n  }\n  $lists.find('.csd-fab-button').each(function () {\n    var $button = $CSD(this);\n    var $newButton = $button.clone(false, true);\n    $button.replaceWith($newButton);\n  });\n\n  // Reset styles and classes\n  $fab.removeClass('open');\n  $lists.find('.csd-fab-button').css({\n    'transform': '',\n    'transition': '',\n    'transition-delay': '',\n    'cursor': ''\n  });\n\n  // Remove initialization properties\n  delete fabElement.csdFab;\n  delete fabElement.initialized;\n\n  // Remove the initialized flag\n  $fab.removeAttr('data-csd-fab-initialized');\n}\nfunction initializeFab(element) {\n  // Check if element exists, otherwise terminate\n  if (!element) return;\n  var $fab = $CSD(element);\n\n  // Check if the element is already initialized\n  if ($fab.attr('data-csd-fab-initialized')) {\n    // If already initialized, destroy it first\n    destroyFab(element);\n  }\n\n  // Check legacy initialization flag\n  if (element.initialized) return;\n  var $mainButton = $fab.find('.csd-fab-button').first();\n  var $lists = $fab.find('.csd-fab-list');\n  var hasLists = $lists.length > 0;\n  var isOpen = false;\n  function calculateButtonPositions($list) {\n    var type = $list.data('type') || 'linear';\n    var direction = $list.data('direction') || 'top';\n    var $buttons = $list.find('.csd-fab-button');\n    var buttonCount = $buttons.length;\n    var spacing = 14 * 2.5 + 7; // Aumentato lo spacing per maggiore distanza\n    var radius = 14 * 5; // Aumentato il radius per maggiore distanza\n\n    $buttons.each(function (btn, index) {\n      var x = 0,\n        y = 0;\n      switch (type) {\n        case 'linear':\n          switch (direction) {\n            case 'top':\n              y = -spacing * (index + 1);\n              break;\n            case 'bottom':\n              y = spacing * (index + 1);\n              break;\n            case 'left':\n              x = -spacing * (index + 1);\n              break;\n            case 'right':\n              x = spacing * (index + 1);\n              break;\n          }\n          break;\n        case 'circle':\n          var angle = (360 / buttonCount * index - 90) * (Math.PI / 180);\n          x = Math.cos(angle) * radius;\n          y = Math.sin(angle) * radius;\n          break;\n        case 'semi-circle':\n          var semiAngle = (180 / (buttonCount - 1) * index - 180) * (Math.PI / 180);\n          x = Math.cos(semiAngle) * radius;\n          y = Math.sin(semiAngle) * radius;\n          break;\n        case 'quarter-circle':\n          var quarterAngle = 90 / (buttonCount - 1) * index * (Math.PI / 180);\n          switch (direction) {\n            case 'top-left':\n              x = -Math.cos(quarterAngle) * radius;\n              y = -Math.sin(quarterAngle) * radius;\n              break;\n            case 'top-right':\n              x = Math.sin(quarterAngle) * radius;\n              y = -Math.cos(quarterAngle) * radius;\n              break;\n            case 'bottom-left':\n              x = -Math.sin(quarterAngle) * radius;\n              y = Math.cos(quarterAngle) * radius;\n              break;\n            case 'bottom-right':\n              x = Math.cos(quarterAngle) * radius;\n              y = Math.sin(quarterAngle) * radius;\n              break;\n          }\n          break;\n      }\n\n      // Imposta la posizione finale e il delay per l'animazione\n      var $button = $CSD(this);\n      $button.css({\n        'transform': \"translate(\".concat(x, \"px, \").concat(y, \"px)\"),\n        'transition-delay': \"\".concat(index * 0.05, \"s\")\n      });\n    });\n  }\n  function openFab() {\n    if (!hasLists || isOpen) return;\n\n    // Chiudi tutti gli altri FAB attivi\n    activeFabs.forEach(function (fab) {\n      if (fab !== element && fab.csdFab) {\n        fab.csdFab.close();\n      }\n    });\n    isOpen = true;\n    $fab.addClass('open');\n    activeFabs.add(element);\n    $lists.each(function () {\n      calculateButtonPositions($CSD(this));\n    });\n  }\n  function closeFab() {\n    if (!hasLists || !isOpen) return;\n    isOpen = false;\n\n    // Resetta i delay quando chiudi\n    $lists.find('.csd-fab-button').css({\n      'transition-delay': '0s',\n      'transform': 'translate(0, 0)'\n    });\n    $fab.removeClass('open');\n    activeFabs[\"delete\"](element);\n  }\n\n  // Click handler for main button\n  $mainButton.on('click', function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // Se non ci sono liste, non fare nulla\n    if (!hasLists) return;\n    if (isOpen) {\n      closeFab();\n    } else {\n      openFab();\n    }\n  });\n  if (hasLists) {\n    // Click handler for child buttons (solo se ci sono liste)\n    $lists.find('.csd-fab-button').on('click', function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      closeFab();\n    });\n\n    // Close on click outside (solo se ci sono liste)\n    var closeHandler = function closeHandler(e) {\n      // Se il click non è su un FAB, chiudi tutti i FAB attivi\n      if (!$CSD(e.target).closest('.csd-fab').length) {\n        activeFabs.forEach(function (fab) {\n          if (fab.csdFab) {\n            fab.csdFab.close();\n          }\n        });\n      }\n    };\n    $CSD(document).on('click', closeHandler);\n\n    // Initialize positions\n    $lists.each(function () {\n      var $list = $CSD(this);\n      $list.find('.csd-fab-button').css({\n        'transform': 'translate(0, 0)',\n        'transition': 'all 0.3s',\n        'transition-delay': '0s'\n      });\n    });\n\n    // Make buttons clickable\n    $fab.find('.csd-fab-button').css('cursor', 'pointer');\n\n    // Cleanup function\n    element.csdFab = {\n      open: openFab,\n      close: closeFab,\n      destroy: function destroy() {\n        $mainButton.off();\n        $lists.find('.csd-fab-button').off();\n        $CSD(document).off('click', closeHandler);\n        activeFabs[\"delete\"](element);\n        element.initialized = false;\n      }\n    };\n  }\n  element.initialized = true;\n\n  // Mark the element as initialized\n  $fab.attr('data-csd-fab-initialized', 'true');\n  return element.csdFab;\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-fab.js?");

/***/ }),

/***/ "./component/csd-list.js":
/*!*******************************!*\
  !*** ./component/csd-list.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeList: () => (/* binding */ initializeList)\n/* harmony export */ });\nfunction initializeList(element) {\n  if (!element || element.initialized) return;\n  var $list = $CSD(element);\n  var $items = $list.find(\".csd-item\");\n\n  // Aggiungi interazione hover e click agli items\n  $items.each(function (_, item) {\n    var $item = $CSD(item);\n    $item.on(\"click\", function (e) {\n      // Emetti un evento custom quando un item viene cliccato\n      var event = new CustomEvent(\"csd-item-click\", {\n        detail: {\n          text: $item.find(\"span\").text(),\n          element: item\n        }\n      });\n      element.dispatchEvent(event);\n    });\n  });\n  element.initialized = true;\n  return element;\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-list.js?");

/***/ }),

/***/ "./component/csd-mask.js":
/*!*******************************!*\
  !*** ./component/csd-mask.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeMask: () => (/* binding */ initializeMask)\n/* harmony export */ });\n/* harmony import */ var _csd_otp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csd-otp.js */ \"./component/csd-otp.js\");\n\nfunction initializeMask(inputElement) {\n  var $input = $CSD(inputElement);\n  var mask = $input.data(\"mask\");\n\n  // Se è un input OTP, inizializza il campo OTP\n  if ($input.hasClass(\"csd-otp\")) {\n    (0,_csd_otp_js__WEBPACK_IMPORTED_MODULE_0__.initializeOTP)($input, mask);\n    return;\n  }\n  $input.on(\"input\", function (e) {\n    var value = e.target.value; // Valore immesso\n    var maskedValue = \"\"; // Valore con maschera applicata\n    var valueIndex = 0; // Indice del carattere immesso\n    var optional = false; // Flag per gestire il facoltativo\n\n    // Itera attraverso la maschera\n    for (var i = 0; i < mask.length; i++) {\n      var maskChar = mask[i]; // Carattere corrente della maschera\n      var inputChar = value[valueIndex]; // Carattere immesso\n\n      if (maskChar === \"?\") {\n        optional = true; // Tutti i caratteri dopo questo sono facoltativi\n        continue;\n      }\n      if (!inputChar && optional) {\n        break; // Se l'input è terminato e siamo in una parte facoltativa, esci\n      }\n      if (!inputChar) {\n        break; // Interrompi se non ci sono più caratteri da verificare\n      }\n      if (/\\d/.test(maskChar)) {\n        // Se il carattere della maschera è un numero (es. 123456)\n        if (/\\d/.test(inputChar)) {\n          maskedValue += inputChar; // Accetta solo numeri\n          valueIndex++;\n        } else {\n          // Ignora i caratteri non validi\n          valueIndex++;\n          i--; // Rimani sulla stessa posizione nella maschera\n        }\n      } else if (/[A-Za-z]/.test(maskChar)) {\n        // Se il carattere della maschera è una lettera (es. abc)\n        if (/[A-Za-z]/.test(inputChar)) {\n          maskedValue += inputChar; // Accetta solo lettere\n          valueIndex++;\n        } else {\n          // Ignora i caratteri non validi\n          valueIndex++;\n          i--; // Rimani sulla stessa posizione nella maschera\n        }\n      } else if (maskChar === \"*\") {\n        // Accetta lettere o numeri\n        if (/[A-Za-z0-9]/.test(inputChar)) {\n          maskedValue += inputChar;\n          valueIndex++;\n        } else {\n          valueIndex++;\n          i--; // Rimani sulla stessa posizione nella maschera\n        }\n      } else if (maskChar === \"#\") {\n        // Accetta qualsiasi carattere\n        maskedValue += inputChar;\n        valueIndex++;\n      } else {\n        // Altri caratteri statici o separatori\n        maskedValue += maskChar;\n        if (inputChar === maskChar) {\n          valueIndex++;\n        }\n      }\n    }\n\n    // Aggiorna il valore dell'input con il risultato mascherato\n    this.value = maskedValue;\n  });\n  $input.on(\"blur\", function () {\n    var value = this.value;\n    var requiredLength = mask.indexOf(\"?\") > -1 ? mask.indexOf(\"?\") : mask.length;\n    var isValid = value.length >= requiredLength;\n\n    // Cambia la validità dell'input\n    this.setCustomValidity(isValid ? \"\" : \"Invalid input, mask not completed\");\n  });\n\n  // Imposta la lunghezza massima in base alla maschera, ignorando `?`\n  var maxLength = mask.replace(/\\?/g, \"\").length;\n  $input.attr(\"maxlength\", maxLength);\n\n  // Imposta un placeholder basato sulla maschera, se non presente\n  if (!$input.attr(\"placeholder\")) {\n    $input.attr(\"placeholder\", mask.replace(/\\?/g, \"\"));\n  }\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-mask.js?");

/***/ }),

/***/ "./component/csd-menu.js":
/*!*******************************!*\
  !*** ./component/csd-menu.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeMenu: () => (/* binding */ initializeMenu)\n/* harmony export */ });\n// Menu Component\nfunction initializeMenu(element) {\n  var $element = $CSD(element);\n  var $menuItems = $element.find(\".csd-menu-item\");\n  var $subMenuItems = $element.find(\".has-submenu\");\n  $menuItems.on(\"click\", function () {\n    var $this = $CSD(this);\n    if (!$this.hasClass(\"has-submenu\")) {\n      $menuItems.removeClass(\"active\");\n      $this.addClass(\"active\");\n    }\n  });\n  $subMenuItems.on(\"click\", function (e) {\n    e.preventDefault();\n    $CSD(this).toggleClass(\"expanded\");\n  });\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-menu.js?");

/***/ }),

/***/ "./component/csd-modal.js":
/*!********************************!*\
  !*** ./component/csd-modal.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeConfirmDialog: () => (/* binding */ initializeConfirmDialog),\n/* harmony export */   initializeModal: () => (/* binding */ initializeModal)\n/* harmony export */ });\n// Layout Components\nfunction initializeModal(element) {\n  if (!element) return;\n  var $modal = $CSD(element);\n  var $closeButtons = $modal.find(\".csd-modal-close\");\n  var $overlay = $modal.find(\".csd-modal-overlay\");\n  function closeModal() {\n    $modal.removeClass(\"show\");\n    setTimeout(function () {\n      $modal.hide();\n    }, 300);\n  }\n  function openModal() {\n    $modal.show();\n    setTimeout(function () {\n      $modal.addClass(\"show\");\n    }, 50);\n  }\n  $closeButtons.on(\"click\", closeModal);\n  $overlay.on(\"click\", closeModal);\n\n  // Store the modal instance on the element\n  element.csdModal = {\n    open: openModal,\n    close: closeModal\n  };\n  return element.csdModal;\n}\nfunction initializeConfirmDialog(element) {\n  if (!element) return;\n  var $dialog = $CSD(element);\n  var $confirmBtn = $dialog.find(\".csd-confirm-btn\");\n  var $cancelBtn = $dialog.find(\".csd-cancel-btn, .csd-modal-close\");\n  var $overlay = $dialog.find(\".csd-modal-overlay\");\n  var resolvePromise;\n  function closeDialog(result) {\n    $dialog.removeClass(\"show\");\n    setTimeout(function () {\n      $dialog.hide();\n      if (resolvePromise) {\n        resolvePromise(result);\n        resolvePromise = null;\n      }\n    }, 300);\n  }\n  function openDialog() {\n    $dialog.show();\n    setTimeout(function () {\n      $dialog.addClass(\"show\");\n    }, 50);\n    return new Promise(function (resolve) {\n      resolvePromise = resolve;\n    });\n  }\n  $confirmBtn.on(\"click\", function () {\n    return closeDialog(true);\n  });\n  $cancelBtn.on(\"click\", function () {\n    return closeDialog(false);\n  });\n  $overlay.on(\"click\", function () {\n    return closeDialog(false);\n  });\n\n  // Store the dialog instance on the element\n  element.csdConfirmDialog = {\n    open: openDialog,\n    close: closeDialog\n  };\n  return element.csdConfirmDialog;\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-modal.js?");

/***/ }),

/***/ "./component/csd-navigation.js":
/*!*************************************!*\
  !*** ./component/csd-navigation.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeNavigation: () => (/* binding */ initializeNavigation)\n/* harmony export */ });\nfunction initializeNavigation(element) {\n  // Initialize navigation\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-navigation.js?");

/***/ }),

/***/ "./component/csd-number.js":
/*!*********************************!*\
  !*** ./component/csd-number.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeNumber: () => (/* binding */ initializeNumber)\n/* harmony export */ });\n// Funzione per inizializzare gli input number\nfunction initializeNumber(inputElement) {\n  var $input = $CSD(inputElement);\n\n  // Store the original val method\n  var originalVal = $input.val.bind($input);\n\n  // Override val method for this specific input\n  $input.val = function (value) {\n    if (arguments.length === 0) {\n      // Getter\n      var rawValue = $input.data(\"rawValue\");\n      if (rawValue) {\n        return stripCurrency(rawValue, $input).replace(\",\", \".\");\n      }\n      var currentValue = originalVal();\n      return stripCurrency(currentValue, $input).replace(\",\", \".\");\n    } else {\n      // Setter\n      if (value !== \"\") {\n        var _rawValue = formatNumber($input, value.toString().replace(\".\", \",\"));\n        $input.data(\"rawValue\", _rawValue);\n        var formattedValue = buildFormattedValue($input, _rawValue);\n        return originalVal(formattedValue);\n      } else {\n        $input.data(\"rawValue\", \"\");\n        return originalVal(\"\");\n      }\n    }\n  };\n\n  // Aggiungi le frecce per incremento e decremento\n  var $arrows = $CSD(\"\\n      <div class=\\\"csd-input-arrows\\\">\\n        <button type=\\\"button\\\" class=\\\"csd-arrow-btn up\\\"><ion-icon name=\\\"chevron-up-outline\\\"></ion-icon></button>\\n        <button type=\\\"button\\\" class=\\\"csd-arrow-btn down\\\"><ion-icon name=\\\"chevron-down-outline\\\"></ion-icon></button>\\n      </div>\\n    \");\n\n  // Imposto il posizionamento relativo per il contenitore delle frecce\n  $input.css(\"position\", \"relative\");\n  $input.after($arrows);\n\n  // Converto l'input in tipo testo per gestire la virgola\n  $input.attr(\"type\", \"text\");\n\n  // Funzioni per recuperare dinamicamente le configurazioni\n  function getCurrencySymbol($el) {\n    return $el.attr(\"currency\") || \"\";\n  }\n  function getFixedDecimals($el) {\n    return $el.attr(\"decimal\") !== undefined ? parseInt($el.attr(\"decimal\")) : 0;\n  }\n  function getStep($el) {\n    return $el.attr(\"step\") ? $el.attr(\"step\") : 1;\n  }\n  function getMinVal($el) {\n    return $el.attr(\"min\") !== undefined ? parseFloat($el.attr(\"min\")) : null;\n  }\n  function getMaxVal($el) {\n    return $el.attr(\"max\") !== undefined ? parseFloat($el.attr(\"max\")) : null;\n  }\n  function getDecimalSeparator($el) {\n    return $el.attr(\"decimal-separator\") || \",\";\n  }\n  function getDecimalSeparatorReplaced($el) {\n    return getDecimalSeparator($el) === \",\" ? \".\" : \",\";\n  }\n  function getPrefix($el) {\n    return $el.attr(\"prefix\") || \"\";\n  }\n  function getSuffix($el) {\n    return $el.attr(\"suffix\") || \"\";\n  }\n\n  // Controllo se il campo è disabilitato o in sola lettura\n  function isDisabled($el) {\n    return $el.prop(\"disabled\") || $el.prop(\"readonly\");\n  }\n  function formatNumber($el, value) {\n    var change = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!value && value !== 0) return buildFormattedValue($el, \"\");\n    var num = typeof value === \"string\" ? parseFloat(stripCurrency(value, $el).replace(\",\", \".\")) : value;\n    if (isNaN(num)) return buildFormattedValue($el, \"\");\n\n    // Applica limiti min e max\n    var minVal = getMinVal($el);\n    var maxVal = getMaxVal($el);\n    if (minVal !== null && num < minVal) return formatNumber($el, minVal, change);\n    if (maxVal !== null && num > maxVal) return formatNumber($el, maxVal, change);\n\n    // Durante la digitazione, non completare i decimali\n    if (!change) {\n      var _formattedNum = value.toString().replace(\".\", \",\");\n      return buildFormattedValue($el, _formattedNum);\n    }\n\n    // Aggiungi decimali solo quando necessario (es. al blur)\n    var fixedDecimals = getFixedDecimals($el);\n    var formattedNum = num.toFixed(fixedDecimals).replace(\".\", \",\");\n    return buildFormattedValue($el, formattedNum);\n  }\n  function buildFormattedValue($el, value) {\n    var prefix = getPrefix($el);\n    var suffix = getSuffix($el);\n    var currency = getCurrencySymbol($el);\n    var formattedValue = \"\";\n    if (prefix) formattedValue += \"\".concat(prefix, \" \");\n    if (currency) formattedValue += \"\".concat(currency, \" \");\n    formattedValue += stripCurrency(value, $el);\n    if (suffix) formattedValue += \" \".concat(suffix);\n    return formattedValue.trim();\n  }\n\n  // Mi occupo di rimuovere il simbolo valuta dal valore\n  function stripCurrency(value, $el) {\n    if (!value) return \"\";\n    var currency = getCurrencySymbol($el);\n    var prefix = getPrefix($el);\n    var suffix = getSuffix($el);\n\n    // Escapa prefissi e suffissi\n    var escapedCurrency = currency.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    var escapedPrefix = prefix.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    var escapedSuffix = suffix.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n\n    // Costruisci il regex per rimuovere prefissi, suffissi e valuta\n    var regexSuffix = new RegExp(\"\\\\s*\".concat(escapedSuffix, \"$\"));\n    var regexPrefix = new RegExp(\"^\".concat(escapedPrefix, \"\\\\s*\"));\n    var regexCurrency = new RegExp(\"^\".concat(escapedCurrency, \"\\\\s*\"));\n    value = value.replace(regexPrefix, \"\").trim();\n    value = value.replace(regexCurrency, \"\").trim();\n    value = value.replace(regexSuffix, \"\").trim();\n    return value;\n  }\n\n  // Mi occupo di gestire l'incremento/decremento del valore\n  function incrementValue(increment, $el) {\n    var _$el$data;\n    if (isDisabled($el)) return;\n    var cursorPos = $el.elements[0].selectionStart;\n    var currentValue = parseFloat(stripCurrency(((_$el$data = $el.data(\"rawValue\")) === null || _$el$data === void 0 ? void 0 : _$el$data.toString().replace(\",\", \".\")) || \"0\", $el)) || 0;\n    currentValue += parseFloat(increment);\n\n    // Applico i vincoli di min/max\n    var minVal = getMinVal($el);\n    var maxVal = getMaxVal($el);\n    if (minVal !== null && currentValue < minVal) currentValue = minVal;\n    if (maxVal !== null && currentValue > maxVal) currentValue = maxVal;\n    var rawValue = currentValue.toFixed(getFixedDecimals($el));\n    $el.data(\"rawValue\", rawValue);\n    $el.val(formatNumber($el, rawValue, true));\n    $el.trigger({\n      type: \"change\",\n      internal: true\n    });\n\n    // Riposiziona il cursore tenendo conto di prefisso e suffisso\n    var totalPrefixSuffixLength = 1;\n    var prefixLength = getPrefix($el) ? getPrefix($el).length + 2 : 0;\n    var currencyLength = getCurrencySymbol($el) ? getCurrencySymbol($el).length + 2 : 0;\n    var suffixLength = getSuffix($el) ? getSuffix($el).length - 2 : 0;\n    if (prefixLength > 0 && currencyLength > 0 && suffixLength > 0) {\n      totalPrefixSuffixLength = prefixLength + currencyLength - 1;\n    } else if (prefixLength > 0 && currencyLength > 0) {\n      totalPrefixSuffixLength = prefixLength + currencyLength;\n    } else if (prefixLength > 0 && suffixLength > 0) {\n      totalPrefixSuffixLength = prefixLength;\n    } else if (currencyLength > 0 && suffixLength > 0) {\n      totalPrefixSuffixLength = currencyLength;\n    } else if (prefixLength > 0) {\n      totalPrefixSuffixLength = prefixLength;\n    } else if (currencyLength > 0) {\n      totalPrefixSuffixLength = currencyLength;\n    }\n    var newPos = Math.max(cursorPos, totalPrefixSuffixLength);\n    $el.elements[0].setSelectionRange(newPos, newPos);\n  }\n  $input.on(\"focus\", function (e) {\n    if (!isDisabled($CSD(e.target)) && !$arrows.is(\":visible\")) {\n      var inputWidth = $CSD(e.target).outerWidth();\n      if (inputWidth < 100) return;\n\n      // $arrows.toggle();\n\n      // var inputHeight = $CSD(e.target).outerHeight();\n      // var arrowsHeight = $arrows.outerHeight();\n      // var topPosition = 0; \n      // var rightPosition = 16;\n\n      // var $label = $CSD(e.target).closest(\".csd-field\").find(\"label\");\n      // var labelHeight = 0;\n      // var labelMargin = 0;\n\n      // if ($label.elements.length > 0) {\n      //   labelMargin = parseFloat($label.css(\"margin-bottom\")) || 0;\n      // }\n\n      // var paddingInput =\n      //   $CSD(e.target).css(\"padding-block\").split(\" \")[0].replace(\"px\", \"\") * 2;\n\n      // // Calcolo l'altezza dell'etichetta se è visibile e non inline\n      // if ($label.is(\":visible\") && $label.closest(\".csd-field-inline\").elements > 0) {\n      //   labelHeight = $label.outerHeight(true);\n      //   topPosition =\n      //     (inputHeight - arrowsHeight) / 2 +\n      //     labelHeight -\n      //     paddingInput +\n      //     labelMargin +\n      //     \"px\";\n      // } else {\n      //   topPosition = paddingInput + labelMargin + \"px\";\n      // }\n\n      // // Posiziono le frecce\n      // $arrows.css({\n      //   display: \"inline-flex\",\n      //   position: \"absolute\",\n      //   top: topPosition,\n      //   right: rightPosition + \"px\",\n      // });\n\n      // Aggiungo padding a destra per evitare sovrapposizioni\n      //$input.css(\"padding-right\", rightPosition + $arrows.outerWidth() + \"px\");\n    }\n  });\n\n  // Mi occupo di validare l'input mentre l'utente digita\n  $input.on(\"input\", function (e) {\n    if (isDisabled($CSD(e.target))) return;\n    var value = e.target.value;\n    var cursorPos = this.selectionStart;\n    var $el = $CSD(e.target);\n\n    // Rimuovi prefissi, suffissi e valuta\n    var cleanValue = stripCurrency(value, $el);\n    cleanValue = cleanValue.replace(/[^\\d,.-]/g, \"\");\n\n    // Controlla se i decimali sono abilitati\n    var allowDecimals = getFixedDecimals($el) > 0;\n    if (!allowDecimals) {\n      cleanValue = cleanValue.replace(/[,\\.]/g, \"\");\n    } else {\n      var lastChar = value.slice(-1);\n      var isComma = lastChar === \",\";\n      if (isComma && !cleanValue.includes(\",\")) {\n        cleanValue += \",\";\n      }\n    }\n\n    // Controlla se ci sono separatori decimali multipli\n    var separatorCount = (cleanValue.match(/[,\\.]/g) || []).length;\n    if (separatorCount > 1) {\n      $el.val(buildFormattedValue($el, \"\"));\n      $el.data(\"rawValue\", \"\");\n      return;\n    }\n\n    // Costruisci il valore formattato\n    var formattedValue = buildFormattedValue($el, cleanValue);\n    $el.val(formattedValue);\n    $el.data(\"rawValue\", cleanValue.replace(\",\", \".\"));\n\n    // Riposiziona il cursore tenendo conto di prefisso e suffisso\n    var totalPrefixSuffixLength = 0;\n    var prefixLength = getPrefix($el) ? getPrefix($el).length + 2 : 0;\n    var currencyLength = getCurrencySymbol($el) ? getCurrencySymbol($el).length + 2 : 0;\n    var suffixLength = getSuffix($el) ? getSuffix($el).length - 2 : 0;\n    if (prefixLength > 0 && currencyLength > 0 && suffixLength > 0) {\n      totalPrefixSuffixLength = prefixLength + currencyLength - 1;\n    } else if (prefixLength > 0 && currencyLength > 0) {\n      totalPrefixSuffixLength = prefixLength + currencyLength;\n    } else if (prefixLength > 0 && suffixLength > 0) {\n      totalPrefixSuffixLength = prefixLength;\n    } else if (currencyLength > 0 && suffixLength > 0) {\n      totalPrefixSuffixLength = currencyLength;\n    } else if (prefixLength > 0) {\n      totalPrefixSuffixLength = prefixLength;\n    } else if (currencyLength > 0) {\n      totalPrefixSuffixLength = currencyLength;\n    }\n    var newPos = Math.max(cursorPos, totalPrefixSuffixLength);\n    this.setSelectionRange(newPos, newPos);\n  });\n  $input.on(\"blur\", function (e) {\n    if (isDisabled($CSD(e.target))) return;\n    var value = stripCurrency($CSD(e.target).val(), $CSD(e.target));\n    if (!value) {\n      $CSD(e.target).val(\"\");\n      $CSD(e.target).data(\"rawValue\", \"\");\n      //$arrows.hide();\n      $input.css(\"padding-right\", \"\");\n      return;\n    }\n\n    // Completa i decimali se necessario\n    var num = parseFloat(value.replace(\",\", \".\"));\n    if (!isNaN(num)) {\n      var fixedDecimals = getFixedDecimals($CSD(e.target));\n      var rawValue = num.toFixed(fixedDecimals);\n      var formattedValue = rawValue.replace(\".\", \",\");\n      $CSD(e.target).data(\"rawValue\", rawValue);\n      $CSD(e.target).val(buildFormattedValue($CSD(e.target), formattedValue));\n    } else {\n      // In caso di valore non valido, resetta il campo\n      $CSD(e.target).val(\"\");\n      $CSD(e.target).data(\"rawValue\", \"\");\n    }\n\n    //$arrows.hide();\n    $input.css(\"padding-right\", \"\");\n  });\n\n  // Mi occupo di gestire gli eventi di cambio valore\n  $input.on(\"change\", function (e) {\n    if (isDisabled($CSD(e.target))) return;\n    var value = stripCurrency($CSD(e.target).val(), $CSD(e.target));\n    if (!value) {\n      $CSD(e.target).val(\"\");\n      $CSD(e.target).data(\"rawValue\", \"\");\n      return;\n    }\n\n    // Completa i decimali se necessario\n    var num = parseFloat(value.replace(\",\", \".\"));\n    if (!isNaN(num)) {\n      var fixedDecimals = getFixedDecimals($CSD(e.target));\n      var rawValue = num.toFixed(fixedDecimals);\n      var formattedValue = rawValue.replace(\".\", \",\");\n      $CSD(e.target).data(\"rawValue\", rawValue);\n      $CSD(e.target).val(buildFormattedValue($CSD(e.target), formattedValue));\n    }\n  });\n\n  // Mi occupo di gestire le frecce da tastiera\n  $input.on(\"keydown\", function (event) {\n    if (isDisabled($CSD(event.target))) return;\n    if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n      event.preventDefault();\n      var increment = event.key === \"ArrowUp\" ? getStep($CSD(event.target)) : -getStep($CSD(event.target));\n      incrementValue(increment, $CSD(event.target));\n    } else if (event.key === \"ArrowLeft\" || event.key === \"ArrowRight\") {\n      var cursorPos = this.selectionStart;\n      var value = $CSD(this).val();\n      var prefix = getPrefix($CSD(this));\n      var suffix = getSuffix($CSD(this));\n      var currency = getCurrencySymbol($CSD(this));\n      var prefixLength = prefix ? prefix.length + 1 : 0;\n      var currencyLength = currency ? currency.length + 2 : 0;\n      var suffixLength = suffix ? suffix.length + 1 : 0;\n      var startPos = prefixLength + currencyLength;\n      var endPos = value.length - suffixLength;\n      var newPos = cursorPos;\n      if (event.key === \"ArrowLeft\" && cursorPos <= startPos) {\n        newPos = startPos;\n      } else if (event.key === \"ArrowRight\" && cursorPos >= endPos) {\n        newPos = endPos;\n      }\n      if (cursorPos < startPos || cursorPos > endPos) {\n        newPos = event.key === \"ArrowLeft\" ? startPos : endPos;\n      }\n      if (newPos !== cursorPos) {\n        event.preventDefault();\n        this.setSelectionRange(newPos, newPos);\n      }\n    }\n  });\n\n  // Inizializzo il valore iniziale del campo\n  var initialValue = $input.val();\n  if (initialValue) {\n    var currencySymbol = getCurrencySymbol($input);\n    var decimalSeparator = getDecimalSeparator($input);\n    var numValue = stripCurrency(initialValue, $input);\n\n    // Converte e formatta il valore iniziale\n    numValue = parseFloat(numValue.replace(decimalSeparator, \".\")).toFixed(getFixedDecimals($input));\n    $input.data(\"rawValue\", numValue);\n    $input.val(formatNumber($input, numValue, true));\n  }\n  $arrows.find(\".csd-arrow-btn\").on(\"click\", function (event) {\n    $CSD(event.target).closest(\".csd-input-group\").find(\".csd-number\").focus(); // Mantengo il focus sull'input\n    if (isDisabled($CSD(event.target))) return;\n    var increment = $CSD(this).hasClass(\"up\") ? getStep($CSD(event.target).closest(\".csd-input-group\").find(\".csd-number\")) : -getStep($CSD(event.target).closest(\".csd-input-group\").find(\".csd-number\"));\n    incrementValue(increment, $CSD(event.target).closest(\".csd-input-group\").find(\".csd-number\"));\n  });\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-number.js?");

/***/ }),

/***/ "./component/csd-otp.js":
/*!******************************!*\
  !*** ./component/csd-otp.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeOTP: () => (/* binding */ initializeOTP)\n/* harmony export */ });\nfunction initializeOTP($input, mask) {\n  // Pulisci la maschera dagli spazi\n  mask = mask.replace(/\\s+/g, \"\");\n\n  // Crea il contenitore per i campi OTP\n  var $container = $CSD('<div class=\"csd-otp-container\"></div>');\n  $input.after($container);\n\n  // Nascondi l'input originale\n  $input.hide();\n\n  // Crea un input per ogni carattere della maschera\n  var inputs = [];\n  var _loop = function _loop() {\n    var maskChar = mask[i];\n    var $digit = $CSD(\"<input>\").addClass(\"csd-otp-digit\").attr(\"type\", \"text\").attr(\"maxlength\", 1).attr(\"inputmode\", \"numeric\").attr(\"data-index\", i).attr(\"pattern\", maskChar === \"1\" ? \"[0-9]\" : null);\n    $container.append($digit);\n    inputs.push($digit);\n\n    // Gestisci l'input\n    $digit.on(\"input\", function () {\n      var value = this.value;\n      var index = $CSD(this).data(\"index\");\n\n      // Valida il carattere in base alla maschera\n      if (maskChar === \"1\" && !/[0-9]/.test(value)) {\n        this.value = \"\";\n        return;\n      }\n\n      // Aggiorna il valore nell'input originale\n      var originalValue = $input.val();\n      originalValue = originalValue.split(\"\");\n      originalValue[index] = value;\n      $input.val(originalValue.join(\"\")).trigger(\"change\");\n\n      // Passa al prossimo input se è stato inserito un carattere valido\n      if (value && index < inputs.length - 1) {\n        inputs[parseInt(index) + 1].elements[0].focus();\n      }\n    });\n\n    // Gestisci il backspace\n    $digit.on(\"keydown\", function (e) {\n      var index = $CSD(this).data(\"index\");\n      if (e.key === \"Backspace\") {\n        // Cancella il valore corrente\n        this.value = \"\";\n        // Aggiorna l'input originale\n        var originalValue = $input.val();\n        originalValue = originalValue.split(\"\");\n        originalValue[index] = \"\";\n        $input.val(originalValue.join(\"\")).trigger(\"change\");\n\n        // Torna indietro se non siamo al primo input\n        if (index > 0) {\n          var prevInput = inputs[index - 1].elements[0];\n          prevInput.focus();\n          // Posiziona il cursore alla fine\n          var len = prevInput.value.length;\n          prevInput.setSelectionRange(len, len);\n          e.preventDefault();\n        }\n      }\n    });\n  };\n  for (var i = 0; i < mask.length; i++) {\n    _loop();\n  }\n\n  // Gestisci l'incolla\n  $container.on(\"paste\", function (e) {\n    e.preventDefault();\n    var clipboardData = e.clipboardData || (typeof window !== 'undefined' ? window.clipboardData : null);\n    var paste = clipboardData ? clipboardData.getData(\"text\") : \"\";\n\n    // Filtra solo i numeri se la maschera è numerica\n    var isNumeric = mask.includes(\"1\");\n    var filtered = isNumeric ? paste.replace(/\\D/g, \"\") : paste.split(\"\").slice(0, mask.length);\n    filtered.forEach(function (_char, i) {\n      if (i < inputs.length) {\n        var maskChar = mask[i];\n        if (maskChar === \"1\" && !/[0-9]/.test(_char)) {\n          return;\n        }\n        inputs[i].val(_char);\n        if (i === filtered.length - 1) {\n          inputs[i].elements[0].focus();\n        }\n      }\n    });\n\n    // Aggiorna l'input originale\n    $input.val(filtered.join(\"\")).trigger(\"change\");\n  });\n\n  // Valida al blur del contenitore\n  $container.on(\"focusout\", function (e) {\n    // Aspetta un momento per vedere se il focus va a un altro input nel contenitore\n    setTimeout(function () {\n      if (!$container.find(\":focus\").length) {\n        var value = $input.val();\n        var isValid = value.length === mask.length;\n        $input.elements[0].setCustomValidity(isValid ? \"\" : \"Please enter all digits\");\n      }\n    }, 100);\n  });\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-otp.js?");

/***/ }),

/***/ "./component/csd-password.js":
/*!***********************************!*\
  !*** ./component/csd-password.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializePassword: () => (/* binding */ initializePassword)\n/* harmony export */ });\nfunction initializePassword(inputElement) {\n  var $input = $CSD(inputElement);\n  var useInputGroup = $input.attr(\"input-group\") === \"true\";\n  if (useInputGroup) {\n    // Wrap input in input group if not already wrapped\n    var $group = $input.closest(\".csd-input-group\");\n    if (!$group.elements.length) {\n      $input.wrap('<div class=\"csd-input-group\"></div>');\n      $group = $input.closest(\".csd-input-group\");\n    }\n\n    // Add the toggle password icon as input group icon\n    var $icon = $CSD('<span class=\"csd-input-group-icon\"><ion-icon name=\"eye-outline\"></ion-icon></span>');\n    $group.append($icon);\n\n    // Toggle password visibility\n    $icon.on(\"click\", function (e) {\n      e.preventDefault();\n      var type = $input.attr(\"type\") === \"password\" ? \"text\" : \"password\";\n      $input.attr(\"type\", type);\n\n      // Toggle icon\n      var iconName = type === \"password\" ? \"eye-outline\" : \"eye-off-outline\";\n      $icon.find(\"ion-icon\").attr(\"name\", iconName);\n    });\n  } else {\n    // Use the simple password style with absolute positioning\n    $input.wrap('<div class=\"csd-password\"></div>');\n\n    // Add the toggle password icon\n    var _$icon = $CSD('<ion-icon class=\"csd-password-toggle\" name=\"eye-outline\"></ion-icon>');\n    $input.after(_$icon);\n\n    // Toggle password visibility\n    _$icon.on(\"click\", function (e) {\n      e.preventDefault();\n      var type = $input.attr(\"type\") === \"password\" ? \"text\" : \"password\";\n      $input.attr(\"type\", type);\n\n      // Toggle icon\n      var iconName = type === \"password\" ? \"eye-outline\" : \"eye-off-outline\";\n      _$icon.attr(\"name\", iconName);\n    });\n  }\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-password.js?");

/***/ }),

/***/ "./component/csd-popover.js":
/*!**********************************!*\
  !*** ./component/csd-popover.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializePopover: () => (/* binding */ initializePopover)\n/* harmony export */ });\nfunction initializePopover(element) {\n  if (!element) return;\n  var $popover = $CSD(element);\n  var $trigger = $CSD($popover.data(\"trigger\"));\n  var placement = $popover.data(\"placement\") || \"bottom\";\n  var trigger = $popover.data(\"trigger-event\") || \"click\";\n  var isConfirm = $popover.hasClass(\"csd-popover-confirm\");\n  var resolvePromise;\n  var $currentPopover = null;\n  function createPopover() {\n    // Remove any existing popover\n    if ($currentPopover) {\n      $currentPopover.remove();\n    }\n\n    // Clone the template\n    $currentPopover = $popover.clone(true);\n\n    // Add to body\n    $CSD(\"body\").append($currentPopover);\n    return $currentPopover;\n  }\n  function positionPopover($p) {\n    if (!$trigger.length || !$p) return;\n    var triggerRect = $trigger[0].getBoundingClientRect();\n    var popoverRect = $p[0].getBoundingClientRect();\n    var spacing = 12;\n    var top, left;\n    switch (placement) {\n      case \"top\":\n        top = triggerRect.top - popoverRect.height - spacing;\n        left = triggerRect.left + triggerRect.width / 2 - popoverRect.width / 2;\n        break;\n      case \"bottom\":\n        top = triggerRect.bottom + 0;\n        left = triggerRect.left + triggerRect.width / 2 - popoverRect.width / 2;\n        break;\n      case \"left\":\n        top = triggerRect.top + triggerRect.height / 2 - popoverRect.height / 2;\n        left = triggerRect.left - popoverRect.width - spacing;\n        break;\n      case \"right\":\n        top = triggerRect.top + triggerRect.height / 2 - popoverRect.height / 2;\n        left = triggerRect.right + spacing;\n        break;\n    }\n\n    // Aggiungere lo scroll solo se siamo in un browser\n    if (typeof window !== 'undefined') {\n      top += window.scrollY;\n      left += window.scrollX;\n    }\n    var viewportWidth = typeof window !== 'undefined' ? window.innerWidth : 1024; // Default fallback\n    var viewportHeight = typeof window !== 'undefined' ? window.innerHeight : 768; // Default fallback\n\n    if (left < spacing) {\n      left = spacing;\n    } else if (left + popoverRect.width > viewportWidth - spacing) {\n      left = viewportWidth - popoverRect.width - spacing;\n    }\n    if (top < spacing) {\n      top = spacing;\n    } else if (top + popoverRect.height > viewportHeight - spacing) {\n      top = viewportHeight - popoverRect.height - spacing;\n    }\n    $p.css({\n      top: \"\".concat(Math.round(top), \"px\"),\n      left: \"\".concat(Math.round(left), \"px\")\n    });\n  }\n  function showPopover() {\n    // Remove any existing popovers\n    $CSD(\".csd-popover.show\").remove();\n\n    // Create new popover\n    var $p = createPopover();\n\n    // Show and position it\n    $p.addClass(\"show\");\n    requestAnimationFrame(function () {\n      return positionPopover($p);\n    });\n\n    // Set focus handlers\n    setupFocusHandlers($p);\n  }\n  function setupFocusHandlers($p) {\n    var isProcessing = false;\n    function handleConfirmAction(isConfirm) {\n      if (isProcessing) return;\n      isProcessing = true;\n      if (resolvePromise) {\n        resolvePromise(isConfirm);\n        resolvePromise = null;\n      }\n      if (typeof window !== 'undefined' && window.toast) {\n        window.toast.show(isConfirm ? \"Operazione confermata\" : \"Operazione annullata\", isConfirm ? \"success\" : \"info\");\n      }\n      hidePopover();\n    }\n\n    // Track focus within popover\n    var checkFocus = function checkFocus(e) {\n      if (isConfirm) {\n        // Check if clicked element is confirm or cancel button\n        var isConfirmBtn = e.target.classList.contains(\"csd-popover-confirm-btn\");\n        var isCancelBtn = e.target.classList.contains(\"csd-popover-cancel-btn\");\n        if (isConfirmBtn) {\n          handleConfirmAction(true);\n          return;\n        }\n        if (isCancelBtn) {\n          handleConfirmAction(false);\n          return;\n        }\n      }\n\n      // For non-confirm popovers, hide when clicking outside\n      if (!$p[0].contains(e.target) && !$trigger[0].contains(e.target)) {\n        hidePopover();\n      }\n    };\n\n    // Add click handlers for confirm/cancel buttons\n    if (isConfirm) {\n      $p.find(\".csd-popover-confirm-btn\").on(\"click\", function () {\n        return handleConfirmAction(true);\n      });\n      $p.find(\".csd-popover-cancel-btn\").on(\"click\", function () {\n        return handleConfirmAction(false);\n      });\n    }\n\n    // Use both mousedown and focusin for better coverage\n    document.addEventListener(\"mousedown\", checkFocus);\n    document.addEventListener(\"focusin\", checkFocus);\n\n    // Cleanup when popover is hidden\n    var _cleanup = function cleanup() {\n      document.removeEventListener(\"mousedown\", checkFocus);\n      document.removeEventListener(\"focusin\", checkFocus);\n      $p.off(\"hidden.csd.popover\", _cleanup);\n      if (isConfirm) {\n        $p.find(\".csd-popover-confirm-btn\").off(\"click\");\n        $p.find(\".csd-popover-cancel-btn\").off(\"click\");\n      }\n    };\n    $p.on(\"hidden.csd.popover\", _cleanup);\n  }\n  function hidePopover() {\n    if ($currentPopover) {\n      // Trigger cleanup event to remove all listeners\n      $currentPopover.trigger(\"hidden.csd.popover\");\n      $currentPopover.removeClass(\"show\");\n      setTimeout(function () {\n        // Remove all event listeners\n        $currentPopover.off();\n        $CSD(document).off(\"mousedown.csd.popover\");\n        $CSD(document).off(\"focusin.csd.popover\");\n        $CSD(window).off(\"resize.csd.popover scroll.csd.popover\");\n        $currentPopover.remove();\n        $currentPopover = null;\n      }, 200); // Match transition duration\n\n      if (resolvePromise) {\n        resolvePromise(false);\n        resolvePromise = null;\n      }\n    }\n  }\n  function confirmAction() {\n    if (resolvePromise) {\n      resolvePromise(true);\n      resolvePromise = null;\n    }\n    hidePopover();\n  }\n\n  // Hide original template\n  $popover.remove();\n\n  // Event Bindings\n  if (trigger === \"hover\") {\n    var hideTimeout;\n    $trigger.on(\"mouseenter\", function () {\n      clearTimeout(hideTimeout);\n      showPopover();\n    });\n    $trigger.on(\"mouseleave\", function (e) {\n      var toElement = e.relatedTarget;\n      if ($currentPopover && !$currentPopover[0].contains(toElement)) {\n        hideTimeout = setTimeout(hidePopover, 100);\n      }\n    });\n\n    // Hover handlers will be set up on the new popover when created\n  } else {\n    $trigger.on(\"click\", function (e) {\n      e.stopPropagation();\n      if (isConfirm) {\n        showPopover();\n        return new Promise(function (resolve) {\n          resolvePromise = resolve;\n        });\n      } else {\n        var isVisible = $currentPopover && $currentPopover.hasClass(\"show\");\n        if (isVisible) {\n          hidePopover();\n        } else {\n          showPopover();\n        }\n      }\n    });\n  }\n\n  // Update position on window resize and scroll\n  $CSD(window).on(\"resize.csd.popover scroll.csd.popover\", function () {\n    if ($currentPopover && $currentPopover.hasClass(\"show\")) {\n      debounce(function () {\n        return positionPopover($currentPopover);\n      }, 100)();\n    }\n  });\n\n  // Store the popover instance on the element\n  element.csdPopover = {\n    show: showPopover,\n    hide: hidePopover,\n    updatePosition: function updatePosition() {\n      return $currentPopover && positionPopover($currentPopover);\n    }\n  };\n  return element.csdPopover;\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-popover.js?");

/***/ }),

/***/ "./component/csd-radio.js":
/*!********************************!*\
  !*** ./component/csd-radio.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRadioValue: () => (/* binding */ getRadioValue),\n/* harmony export */   initializeRadio: () => (/* binding */ initializeRadio)\n/* harmony export */ });\n/**\n * Triggers a custom radio event with detailed state information\n * @param $radio - The radio item that triggered the event\n * @private\n */\nfunction _triggerRadioEvent($radio) {\n  // Create event object with all details\n  var $wrapper = $radio.closest(\".csd-field\");\n  var $allItems = $wrapper.find(\".csd-radio-input\");\n  var $checkedItem = $allItems.find(\".csd-radio-input:checked\");\n  var eventData = {\n    type: \"csd_change\",\n    action: \"change\",\n    item: $radio,\n    targetValue: $radio.attr(\"value\"),\n    totalItems: $allItems.length,\n    selectedValue: $checkedItem.length ? $checkedItem.attr(\"value\") : null,\n    selectedLabel: $checkedItem.length ? $checkedItem.closest(\".csd-radio-wrapper\").find(\".csd-radio-label\").text() : null,\n    hasSelection: $checkedItem.length > 0\n  };\n\n  // Trigger the event using CSD library on the radio element\n  $radio.trigger(eventData);\n}\n\n// Funzione per ottenere il valore del radio selezionato\nfunction getRadioValue(name) {\n  var values = [];\n  var $radios = $CSD(\".csd-radio-wrapper input[name=\\\"\".concat(name, \"\\\"]\"));\n  $radios.each(function () {\n    var $input = $CSD(this);\n    values.push({\n      value: $input.val() || \"on\",\n      checked: $input.elements[0].checked,\n      disabled: $input.elements[0].disabled,\n      label: $input.closest(\".csd-radio-wrapper\").find(\".csd-radio-label\").text()\n    });\n  });\n  return values;\n}\n;\nfunction initializeRadio(radioElement) {\n  var $originalRadio = $CSD(radioElement);\n  var label = $originalRadio.attr(\"label\") || \"\";\n  var id = $originalRadio.attr(\"id\") || \"radio-\" + Math.random().toString(36).substr(2, 9);\n  var $wrapper = $CSD('<div class=\"csd-radio-wrapper\"></div>');\n  var $radio = $CSD('<div class=\"csd-radio\"></div>');\n  var $input = $CSD('<input type=\"radio\" class=\"csd-radio-input\">').attr(\"id\", id);\n  var $box = $CSD('<div class=\"csd-radio-box\"><div class=\"csd-radio-dot\"></div></div>');\n\n  // Copia le proprietà dall'originale\n  if ($originalRadio.elements[0].checked) $input.elements[0].checked = true;\n  if ($originalRadio.elements[0].disabled) $input.elements[0].disabled = true;\n  if ($originalRadio.attr(\"name\")) $input.attr(\"name\", $originalRadio.attr(\"name\"));\n  if ($originalRadio.attr(\"value\")) $input.attr(\"value\", $originalRadio.attr(\"value\"));\n\n  // Copia le classi, escludendo csd-radio\n  var originalClass = $originalRadio.attr(\"class\");\n  if (originalClass) {\n    var newClass = originalClass.split(\" \").filter(function (cls) {\n      return cls !== \"csd-radio\";\n    }).join(\" \");\n    if (newClass) $input.addClass(newClass);\n  }\n\n  // Copia altri attributi\n  var originalElement = $originalRadio.elements[0];\n  for (var i = 0; i < originalElement.attributes.length; i++) {\n    var attr = originalElement.attributes[i];\n    if (![\"type\", \"class\", \"id\"].includes(attr.name)) {\n      $input.attr(attr.name, attr.value);\n    }\n  }\n  $radio.append($input);\n  $radio.append($box);\n  $wrapper.append($radio);\n  if (label) {\n    var $label = $CSD('<label class=\"csd-radio-label\"></label>').text(label).attr(\"for\", id);\n    $wrapper.append($label);\n  }\n  $originalRadio.replaceWith($wrapper);\n  $wrapper.find('.csd-radio-label').on(\"click\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!$wrapper.find('.csd-radio-input').prop(\"disabled\")) {\n      $wrapper.find('.csd-radio-input').prop(\"checked\", true);\n      _triggerRadioEvent($wrapper.find('.csd-radio-input'));\n    }\n  });\n  $wrapper.find('.csd-radio-box').on(\"click\", function (e) {\n    e.preventDefault();\n    if (!$wrapper.find('.csd-radio-input').prop(\"disabled\")) {\n      $wrapper.find('.csd-radio-input').prop(\"checked\", true);\n      _triggerRadioEvent($wrapper.find('.csd-radio-input'));\n    }\n  });\n}\n\n// Aggiungiamo la funzione a window se siamo in ambiente browser\nif (typeof window !== 'undefined') {\n  window.getRadioValue = getRadioValue;\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-radio.js?");

/***/ }),

/***/ "./component/csd-range.js":
/*!********************************!*\
  !*** ./component/csd-range.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeRange: () => (/* binding */ initializeRange)\n/* harmony export */ });\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction initializeRange(rangeElement) {\n  var $originalRange = $CSD(rangeElement);\n  var min = parseFloat($originalRange.attr(\"min\") || 0);\n  var max = parseFloat($originalRange.attr(\"max\") || 100);\n  var step = parseFloat($originalRange.attr(\"step\") || 1);\n  var isDouble = $originalRange.attr(\"range\") === \"true\";\n  var showInput = $originalRange.attr(\"show-input\") === \"true\";\n  var values = isDouble ? $originalRange.val().split(\",\").map(function (v) {\n    return parseFloat(v);\n  }) : [parseFloat($originalRange.val() || 50)];\n\n  // Create wrapper\n  var wrapper = document.createElement(\"div\");\n  wrapper.className = \"csd-range-wrapper\";\n\n  // Add icons if specified\n  var iconDown = rangeElement.getAttribute(\"icon-down\");\n  var iconUp = rangeElement.getAttribute(\"icon-up\");\n  if (iconDown && iconUp && !showInput) {\n    var downIcon = document.createElement(\"ion-icon\");\n    downIcon.className = \"range-icon down\";\n    downIcon.setAttribute(\"name\", iconDown);\n    wrapper.appendChild(downIcon);\n  }\n  var rangeContainer = document.createElement(\"div\");\n  rangeContainer.className = \"csd-range-container\";\n  var track = document.createElement(\"div\");\n  track.className = \"csd-range-track\";\n  var fill = document.createElement(\"div\");\n  fill.className = \"csd-range-fill\";\n  var handles = isDouble ? [document.createElement(\"div\"), document.createElement(\"div\")] : [document.createElement(\"div\")];\n  handles.forEach(function (handle, i) {\n    handle.className = \"csd-range-handle\";\n    handle.setAttribute(\"data-handle\", i);\n  });\n\n  // Build structure\n  rangeContainer.appendChild(track);\n  rangeContainer.appendChild(fill);\n  handles.forEach(function (handle) {\n    return rangeContainer.appendChild(handle);\n  });\n  wrapper.appendChild(rangeContainer);\n\n  // Add input if needed\n  var inputs = [];\n  if (showInput) {\n    if (isDouble) {\n      var inputGroup = document.createElement(\"div\");\n      inputGroup.className = \"csd-range-input-group\";\n      var input1 = document.createElement(\"input\");\n      input1.type = \"number\";\n      input1.className = \"csd-input csd-range-input\";\n      input1.setAttribute(\"data-handle\", \"0\");\n      input1.min = min;\n      input1.max = max;\n      input1.step = step;\n      var input2 = document.createElement(\"input\");\n      input2.type = \"number\";\n      input2.className = \"csd-input csd-range-input\";\n      input2.setAttribute(\"data-handle\", \"1\");\n      input2.min = min;\n      input2.max = max;\n      input2.step = step;\n      var separator = document.createElement(\"span\");\n      separator.className = \"csd-range-input-separator\";\n      separator.textContent = \"-\";\n      inputGroup.appendChild(input1);\n      inputGroup.appendChild(separator);\n      inputGroup.appendChild(input2);\n      wrapper.appendChild(inputGroup);\n      inputs = [input1, input2];\n    } else {\n      var input = document.createElement(\"input\");\n      input.type = \"number\";\n      input.className = \"csd-input csd-range-input\";\n      input.setAttribute(\"data-handle\", \"0\");\n      input.min = min;\n      input.max = max;\n      input.step = step;\n      wrapper.appendChild(input);\n      inputs = [input];\n    }\n  }\n\n  // Move original range into wrapper and hide it\n  var originalElement = $originalRange.elements[0];\n  originalElement.style.display = \"none\";\n  originalElement.parentNode.replaceChild(wrapper, originalElement);\n  wrapper.appendChild(originalElement);\n  if (iconDown && iconUp && !showInput) {\n    var upIcon = document.createElement(\"ion-icon\");\n    upIcon.className = \"range-icon up\";\n    upIcon.setAttribute(\"name\", iconUp);\n    wrapper.appendChild(upIcon);\n  }\n\n  // Get CSD wrappers for DOM elements\n  var $wrapper = $CSD(wrapper);\n  var $rangeContainer = $CSD(rangeContainer);\n  var $track = $CSD(track);\n  var $fill = $CSD(fill);\n  var $handles = handles.map(function (h) {\n    return $CSD(h);\n  });\n  var $inputs = inputs.map(function (i) {\n    return $CSD(i);\n  });\n\n  // Update visual state\n  function _updateUI() {\n    var newValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n    var changeVal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    values = newValues;\n    var range = max - min;\n    if (isDouble) {\n      var leftPercent = (values[0] - min) / range * 100;\n      var rightPercent = (values[1] - min) / range * 100;\n      $fill.css(\"left\", leftPercent + \"%\");\n      $fill.css(\"width\", rightPercent - leftPercent + \"%\");\n      $handles[0].css(\"left\", leftPercent + \"%\");\n      $handles[1].css(\"left\", rightPercent + \"%\");\n      if (showInput) {\n        $inputs[0].val(values[0]);\n        $inputs[1].val(values[1]);\n      }\n    } else {\n      var percent = (values[0] - min) / range * 100;\n      $fill.css(\"width\", percent + \"%\");\n      $handles[0].css(\"left\", percent + \"%\");\n      if (showInput) {\n        $inputs[0].val(values[0]);\n      }\n    }\n\n    // Trigger change event\n    if (changeVal) $originalRange.val(isDouble ? values.join(\",\") : values[0]).trigger(\"change\");\n  }\n\n  // Handle drag functionality\n  var isDragging = false;\n  var activeHandle = null;\n  var $document = $CSD(document);\n  function getValueFromPosition(clientX) {\n    var rect = rangeContainer.getBoundingClientRect();\n    var position = (clientX - rect.left) / rect.width;\n    var value = min + (max - min) * position;\n    value = Math.round(value / step) * step;\n    return Math.max(min, Math.min(max, value));\n  }\n  function moveHandler(e) {\n    if (!isDragging) return;\n    var newValue = getValueFromPosition(e.clientX);\n    var newValues = _toConsumableArray(values);\n    if (isDouble) {\n      if (activeHandle === 0) {\n        if (newValue <= values[1]) newValues[0] = newValue;\n      } else {\n        if (newValue >= values[0]) newValues[1] = newValue;\n      }\n    } else {\n      newValues[0] = newValue;\n    }\n    _updateUI(newValues);\n    e.preventDefault();\n  }\n  function upHandler() {\n    if (!isDragging) return;\n    isDragging = false;\n    activeHandle = null;\n    $document.off(\"mousemove\", moveHandler);\n    $document.off(\"mouseup\", upHandler);\n  }\n  function touchMoveHandler(e) {\n    if (!isDragging) return;\n    e.preventDefault();\n    e.stopPropagation();\n    var touch = e.touches[0];\n    var newValue = getValueFromPosition(touch.clientX);\n    var newValues = _toConsumableArray(values);\n    if (isDouble) {\n      if (activeHandle === 0) {\n        if (newValue <= values[1]) newValues[0] = newValue;\n      } else {\n        if (newValue >= values[0]) newValues[1] = newValue;\n      }\n    } else {\n      newValues[0] = newValue;\n    }\n    _updateUI(newValues);\n  }\n  function touchEndHandler(e) {\n    if (!isDragging) return;\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    isDragging = false;\n    activeHandle = null;\n    document.removeEventListener(\"touchmove\", touchMoveHandler);\n    document.removeEventListener(\"touchend\", touchEndHandler);\n    document.removeEventListener(\"touchcancel\", touchEndHandler);\n  }\n\n  // Track click handler\n  track.addEventListener(\"mousedown\", function (e) {\n    var newValue = getValueFromPosition(e.clientX);\n    if (isDouble) {\n      var handle0Distance = Math.abs(newValue - values[0]);\n      var handle1Distance = Math.abs(newValue - values[1]);\n      activeHandle = handle0Distance < handle1Distance ? 0 : 1;\n    } else {\n      activeHandle = 0;\n    }\n    isDragging = true;\n    _updateUI(isDouble ? activeHandle === 0 ? [newValue, values[1]] : [values[0], newValue] : [newValue]);\n    $document.on(\"mousemove\", moveHandler);\n    $document.on(\"mouseup\", upHandler);\n    e.preventDefault();\n  });\n  track.addEventListener(\"touchstart\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    var touch = e.touches[0];\n    var newValue = getValueFromPosition(touch.clientX);\n    if (isDouble) {\n      var distanceToFirst = Math.abs(newValue - values[0]);\n      var distanceToSecond = Math.abs(newValue - values[1]);\n      activeHandle = distanceToFirst < distanceToSecond ? 0 : 1;\n    } else {\n      activeHandle = 0;\n    }\n    isDragging = true;\n    _updateUI([].concat(_toConsumableArray(values.slice(0, activeHandle)), [newValue], _toConsumableArray(values.slice(activeHandle + 1))));\n    document.addEventListener(\"touchmove\", touchMoveHandler, {\n      passive: false\n    });\n    document.addEventListener(\"touchend\", touchEndHandler, {\n      passive: false\n    });\n    document.addEventListener(\"touchcancel\", touchEndHandler, {\n      passive: false\n    });\n  });\n\n  // Handle drag events\n  handles.forEach(function (handle, index) {\n    handle.addEventListener(\"mousedown\", function (e) {\n      isDragging = true;\n      activeHandle = index;\n      $document.on(\"mousemove\", moveHandler);\n      $document.on(\"mouseup\", upHandler);\n      e.stopPropagation();\n      e.preventDefault();\n    });\n\n    // Touch events\n    handle.addEventListener(\"touchstart\", function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      isDragging = true;\n      activeHandle = index;\n      document.addEventListener(\"touchmove\", touchMoveHandler, {\n        passive: false\n      });\n      document.addEventListener(\"touchend\", touchEndHandler, {\n        passive: false\n      });\n      document.addEventListener(\"touchcancel\", touchEndHandler, {\n        passive: false\n      });\n    });\n  });\n\n  // Handle input changes\n  if (showInput) {\n    inputs.forEach(function (input, index) {\n      input.addEventListener(\"input\", function () {\n        var newValue = parseFloat(this.value);\n        if (isNaN(newValue)) return;\n        var newValues = _toConsumableArray(values);\n        if (isDouble) {\n          if (index === 0 && newValue <= values[1]) {\n            newValues[0] = newValue;\n          } else if (index === 1 && newValue >= values[0]) {\n            newValues[1] = newValue;\n          }\n        } else {\n          newValues[0] = Math.max(min, Math.min(max, newValue));\n        }\n        _updateUI(newValues);\n      });\n    });\n  }\n\n  // Override val method for range input\n  var rangeData = {\n    element: originalElement,\n    isDouble: isDouble,\n    min: min,\n    max: max,\n    step: step,\n    values: values,\n    updateUI: function updateUI(values, changeVal) {\n      return _updateUI(values, changeVal);\n    }\n  };\n  originalElement._rangeData = rangeData;\n\n  // Extend CSD prototype for range inputs\n  if (!_CSD_UTILS.prototype._originalVal) {\n    _CSD_UTILS.prototype._originalVal = _CSD_UTILS.prototype.val;\n    _CSD_UTILS.prototype.val = function (value) {\n      var el = this.elements[0];\n      if (el && el._rangeData) {\n        var roundToStep = function roundToStep(value) {\n          return Math.round(value / _step) * _step;\n        }; // Update UI when value is set\n        if (arguments.length === 0) {\n          return this._originalVal();\n        }\n        var result = this._originalVal(value);\n        var _el$_rangeData = el._rangeData,\n          _isDouble = _el$_rangeData.isDouble,\n          _min = _el$_rangeData.min,\n          _max = _el$_rangeData.max,\n          _step = _el$_rangeData.step,\n          currentValues = _el$_rangeData.values,\n          updateUI = _el$_rangeData.updateUI;\n        if (_isDouble) {\n          var parts = value.toString().split(\",\");\n          var newValues = _toConsumableArray(currentValues);\n          if (parts.length === 1) {\n            // Se viene fornito un solo valore, aggiorna solo il primo handle\n            var val = parseFloat(parts[0]);\n            if (!isNaN(val)) {\n              var roundedVal = roundToStep(Math.max(_min, Math.min(_max, val)));\n              if (roundedVal <= newValues[1]) {\n                newValues[0] = roundedVal;\n              }\n            }\n          } else {\n            // Se vengono forniti entrambi i valori, aggiornali\n            var _parts$map = parts.map(function (v) {\n                var parsed = parseFloat(v);\n                return isNaN(parsed) ? _min : roundToStep(Math.max(_min, Math.min(_max, parsed)));\n              }),\n              _parts$map2 = _slicedToArray(_parts$map, 2),\n              val1 = _parts$map2[0],\n              val2 = _parts$map2[1];\n            if (val1 <= val2) {\n              newValues = [val1, val2];\n            }\n          }\n          updateUI(newValues, false);\n        } else {\n          var _val = parseFloat(value);\n          var newVal = isNaN(_val) ? _min : roundToStep(Math.max(_min, Math.min(_max, _val)));\n          updateUI([newVal], false);\n        }\n        return result;\n      }\n      return this._originalVal.apply(this, arguments);\n    };\n  }\n\n  // Initial UI update\n  _updateUI();\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-range.js?");

/***/ }),

/***/ "./component/csd-reorder.js":
/*!**********************************!*\
  !*** ./component/csd-reorder.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeReorder: () => (/* binding */ initializeReorder)\n/* harmony export */ });\n/* harmony import */ var _csd_lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../csd-lib.js */ \"./csd-lib.js\");\n/* harmony import */ var _csd_lib_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_csd_lib_js__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\nfunction initializeReorder() {\n  // Inizializza i gruppi\n  var reorderGroups = document.querySelectorAll(\".csd-reorder-group\");\n  reorderGroups.forEach(function (group) {\n    // Configura le opzioni di base per Sortable\n    var sortableOptions = {\n      handle: \".handle\",\n      draggable: \".csd-reorder\",\n      ghostClass: \"csd-reorder-ghost\",\n      dragClass: \"csd-reorder-drag\",\n      animation: 150,\n      // Opzioni touch specifiche\n      touchStartThreshold: 0,\n      supportPointer: true,\n      fallbackTolerance: 0,\n      delayOnTouchOnly: true,\n      delay: 100,\n      // Prevenzione scroll durante il drag\n      preventScroll: true,\n      // Feedback aptico su mobile\n      forceFallback: false,\n      // Callback\n      onStart: function onStart(evt) {\n        evt.item.style.touchAction = \"none\";\n        group.classList.add(\"reordering\");\n        // Disabilita lo scroll del body durante il drag\n        document.body.style.overflow = \"hidden\";\n      },\n      onEnd: function onEnd(evt) {\n        evt.item.style.touchAction = \"\";\n        group.classList.remove(\"reordering\");\n        // Riabilita lo scroll del body\n        document.body.style.overflow = \"\";\n      },\n      onMove: function onMove(evt) {\n        // Previeni lo scroll durante il movimento\n        evt.preventDefault && evt.preventDefault();\n        return true;\n      }\n    };\n\n    // Inizializza il gruppo principale\n    new _csd_lib_js__WEBPACK_IMPORTED_MODULE_0__.Sortable(group, sortableOptions);\n\n    // Inizializza i sottogruppi\n    var groupItems = group.querySelectorAll(\".csd-group-item\");\n    groupItems.forEach(function (groupItem) {\n      new _csd_lib_js__WEBPACK_IMPORTED_MODULE_0__.Sortable(groupItem, _objectSpread(_objectSpread({}, sortableOptions), {}, {\n        onStart: function onStart(evt) {\n          evt.item.style.touchAction = \"none\";\n          groupItem.classList.add(\"reordering\");\n          document.body.style.overflow = \"hidden\";\n        },\n        onEnd: function onEnd(evt) {\n          evt.item.style.touchAction = \"\";\n          groupItem.classList.remove(\"reordering\");\n          document.body.style.overflow = \"\";\n        }\n      }));\n    });\n  });\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-reorder.js?");

/***/ }),

/***/ "./component/csd-searchbar.js":
/*!************************************!*\
  !*** ./component/csd-searchbar.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeSearchbar: () => (/* binding */ initializeSearchbar)\n/* harmony export */ });\nfunction initializeSearchbar(searchBarElement) {\n  var $searchBar = $CSD(searchBarElement);\n  var hasClearButton = $searchBar.hasClass(\"clearbutton\");\n\n  // Crea il wrapper della searchbar\n  var $searchBarWrapper = $CSD('<div class=\"csd-searchbar\"></div>');\n\n  // Sposta l'input nel wrapper\n  $searchBar.wrap($searchBarWrapper);\n\n  // Aggiungi search icon\n  var $searchIcon = $CSD('<ion-icon class=\"csd-searchbar-icon\" name=\"search-sharp\"></ion-icon>');\n  $searchBar.after($searchIcon);\n\n  // Aggiungi clear button solo se richiesto\n  if (hasClearButton) {\n    var $clearButton = $CSD('<div class=\"csd-clearbutton\"><ion-icon name=\"close-sharp\"></ion-icon></div>');\n    $searchBar.after($clearButton);\n    $clearButton.on(\"click\", function () {\n      $searchBar.val(\"\").trigger(\"input\");\n    });\n  }\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-searchbar.js?");

/***/ }),

/***/ "./component/csd-segment.js":
/*!**********************************!*\
  !*** ./component/csd-segment.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeSegment: () => (/* binding */ initializeSegment)\n/* harmony export */ });\n// Segment Component\nfunction initializeSegment(element) {\n  var $element = $CSD(element);\n  var $buttons = $element.find(\".csd-segment-button\");\n  var $indicator = $element.find(\".csd-segment-indicator\");\n  var segmentPadding = 0;\n\n  // Gestione compatibilità SSR\n  if (typeof window !== 'undefined') {\n    var containerStyle = window.getComputedStyle(element);\n    segmentPadding = parseFloat(containerStyle.paddingLeft);\n  }\n  function updateIndicatorPosition(selectedButton) {\n    if (!selectedButton || !$indicator.length) return;\n    var containerRect = element.getBoundingClientRect();\n    var $buttonElements = $element.find(\".csd-segment-button\");\n    var buttonElements = $buttonElements.elements;\n    var isFirstButton = buttonElements[0] === selectedButton;\n    var isLastButton = buttonElements[buttonElements.length - 1] === selectedButton;\n    $buttonElements.removeClass(\"before-checked\");\n    var selectedIndex = buttonElements.indexOf(selectedButton);\n    if (!isFirstButton && selectedIndex > 0) {\n      $CSD(buttonElements[selectedIndex - 1]).addClass(\"before-checked\");\n    }\n    var buttonWidth = selectedButton.getBoundingClientRect().width;\n    var translateX = 0;\n    for (var i = 0; i < selectedIndex; i++) {\n      translateX += buttonElements[i].getBoundingClientRect().width;\n    }\n    if (isFirstButton) {\n      translateX = 0;\n    } else if (isLastButton) {\n      translateX = containerRect.width - buttonWidth - segmentPadding * 2;\n    } else {\n      translateX += segmentPadding;\n    }\n    requestAnimationFrame(function () {\n      $indicator[0].style.width = \"\".concat(buttonWidth, \"px\");\n      $indicator[0].style.transform = \"translateX(\".concat(translateX, \"px)\");\n    });\n  }\n  function updateIndicator(selectedButton) {\n    updateIndicatorPosition(selectedButton);\n    var $icons = $CSD(selectedButton).find(\"ion-icon\");\n    if ($icons.length > 0) {\n      setTimeout(function () {\n        updateIndicatorPosition(selectedButton);\n        setTimeout(function () {\n          return updateIndicatorPosition(selectedButton);\n        }, 300);\n      }, 50);\n    }\n  }\n  function selectButton(selectedButton) {\n    if ($CSD(selectedButton).hasClass(\"active\")) return;\n    $buttons.removeClass(\"active\");\n    $CSD(selectedButton).addClass(\"active\");\n    updateIndicator(selectedButton);\n    var contentId = $CSD(selectedButton).attr(\"content-id\");\n    if (contentId) {\n      // Nascondi tutti i contenuti\n      // Mostra il contenuto corrispondente\n      var targetContent = document.getElementById(contentId);\n      if (targetContent) {\n        var _segmentContents$quer;\n        var segmentContents = targetContent.closest(\".csd-segment-contents\");\n        (_segmentContents$quer = segmentContents.querySelector(\".csd-segment-content.active\")) === null || _segmentContents$quer === void 0 || _segmentContents$quer.classList.remove(\"active\");\n        targetContent.classList.add(\"active\");\n      }\n    }\n    element.dispatchEvent(new CustomEvent(\"segment-change\", {\n      detail: {\n        value: $CSD(selectedButton).attr(\"value\"),\n        contentId: contentId\n      }\n    }));\n  }\n  var $activeButton = $element.find(\".csd-segment-button.active\");\n  if ($activeButton.length) {\n    updateIndicator($activeButton[0]);\n  }\n  $buttons.each(function (button) {\n    $CSD(button).on(\"click\", function () {\n      if (!$CSD(button).prop(\"disabled\")) {\n        selectButton(button);\n      }\n    });\n  });\n  var debouncedResize = debounce(function () {\n    var $activeButton = $element.find(\".csd-segment-button.active\");\n    if ($activeButton.length) {\n      updateIndicator($activeButton[0]);\n    }\n  }, 100);\n  if (typeof window !== 'undefined') {\n    window.addEventListener(\"resize\", debouncedResize);\n  }\n}\nfunction debounce(func, wait) {\n  var timeout;\n  return function executedFunction() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var later = function later() {\n      clearTimeout(timeout);\n      func.apply(void 0, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-segment.js?");

/***/ }),

/***/ "./component/csd-select.js":
/*!*********************************!*\
  !*** ./component/csd-select.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeCustomSelect: () => (/* binding */ initializeCustomSelect)\n/* harmony export */ });\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n/**\n * Destroys a custom select instance, removing all event handlers and custom DOM elements\n * @param {HTMLElement} selectElement - The original select element\n */\nfunction destroyCustomSelect(selectElement) {\n  if (!selectElement) return;\n  var $select = $CSD(selectElement);\n\n  // Check if the element is already initialized\n  if (!$select.attr('data-csd-select-initialized')) {\n    return; // Not initialized, nothing to destroy\n  }\n\n  // Find the wrapper that was created during initialization\n  var $wrapper = $select.closest('.csd-select-wrapper').length ? $select.closest('.csd-select-wrapper') : $select.next('.csd-select-wrapper');\n\n  // Remove document event listeners with namespace\n  var eventNamespace = $select.data('event-namespace');\n  if (eventNamespace) {\n    $CSD(document).off(eventNamespace);\n  }\n  if ($wrapper.length) {\n    // Remove event listeners by replacing elements with clones\n    $wrapper.find('.csd-select-display, .csd-select-option, .csd-select-arrow, .csd-select-clearbutton, .delete-chip').each(function () {\n      var $element = $CSD(this);\n      var $newElement = $element.clone(false, true); // Clone without events but with children\n      $element.replaceWith($newElement);\n    });\n\n    // Show the original select again\n    $select.css('display', '');\n\n    // Remove the wrapper\n    $wrapper.remove();\n  }\n\n  // Remove the initialized flag\n  $select.removeAttr('data-csd-select-initialized');\n}\nfunction initializeCustomSelect(selectElement) {\n  // Check if element exists, otherwise terminate\n  if (!selectElement) return;\n  var $select = $CSD(selectElement);\n\n  // Check if the element is already initialized\n  if ($select.attr('data-csd-select-initialized')) {\n    // If already initialized, destroy it first\n    destroyCustomSelect(selectElement);\n  }\n  var groupOptions = $select.find(\"optgroup\");\n  var options = $select.find(\"option\");\n  var idSelect = $select.attr(\"id\");\n  var placeholder = $select.attr(\"placeholder\") || options.filter('[selected][value=\"\"]').text() || \"Seleziona un'opzione\";\n  var classCssExtra = [];\n  selectElement.classList.contains(\"compact\") ? classCssExtra.push(\"csd-select-compact\") : \"\";\n  selectElement.classList.contains(\"checkmark\") ? classCssExtra.push(\"csd-select-checkmark\") : \"\";\n  selectElement.classList.contains(\"checkmark-all\") ? classCssExtra.push(\"csd-select-checkmark\") : \"\";\n  selectElement.classList.contains(\"chips\") ? classCssExtra.push(\"csd-select-chips\") : \"\";\n\n  // Crea il wrapper personalizzato\n  var $wrapper = $CSD('<div class=\"csd-select-wrapper\"></div>');\n  var $customSelect = $CSD('<div class=\"csd-custom-select ' + classCssExtra.join(\" \") + '\"></div>');\n  var isMultipleSelect = selectElement.hasAttribute(\"multiple\");\n  var $display = $CSD('<div class=\"csd-select-display\"></div>');\n  $display.html('<label class=\"csd-label-select\">' + placeholder + \"</label>\");\n  if (selectElement.classList.contains(\"editable\")) {\n    $display = $CSD('<input type=\"text\" class=\"csd-searchbar-input csd-select-display csd-select-editable csd-input\" placeholder=\"Seleziona un\\'opzione\">');\n  }\n  var checkmark = false;\n  if (selectElement.classList.contains(\"checkmark\") || selectElement.classList.contains(\"checkmark-all\")) {\n    checkmark = '<ion-icon name=\"checkmark-sharp\"></ion-icon>';\n  }\n  var searchbarHtml = selectElement.classList.contains(\"checkmark-all\") ? '<div class=\"csd-select-searchbar-checkbox\"></div><input type=\"text\" class=\"csd-searchbar-input csd-input\" placeholder=\"Cerca...\" id=\"searchInput\">' : '<input type=\"text\" class=\"csd-searchbar-input csd-input\" placeholder=\"Cerca...\" id=\"searchInput\"><ion-icon class=\"csd-searchbar-icon\" name=\"search-sharp\">';\n  var $searchbar = $CSD('<div class=\"csd-select-searchbar\">').html(searchbarHtml);\n  var $arrow = $CSD('<div class=\"csd-select-arrow\"><ion-icon class=\"csd-select-arrow-icon\" name=\"chevron-down-sharp\"></ion-icon></div>');\n  var $clearButton = $CSD('<div class=\"csd-select-clearbutton\"><ion-icon name=\"close-sharp\"></ion-icon></div>');\n  var $optionsContainer = $CSD('<div class=\"csd-select-options ' + classCssExtra.join(\" \") + '\"></div>');\n\n  // Hide original select\n  $select.css('display', 'none');\n  if (selectElement.classList.contains(\"searchable\")) {\n    $optionsContainer.append($searchbar);\n  }\n\n  // Add option groups\n  groupOptions.each(function () {\n    var $group = $CSD(this);\n    var $groupLabel = $CSD('<div class=\"csd-select-group-label\"><div class=\"csd-select-group-label-text\">' + $group.attr(\"label\") + \"</div></div>\");\n    var $groupOptions = $CSD('<div class=\"csd-select-group-options\"></div>');\n    $group.find(\"option\").each(function () {\n      var $option = $CSD(this);\n      var value = $option.attr('value');\n      var text = $option.text();\n      var htmlText = text;\n      if (checkmark) htmlText = checkmark + text;\n      var $customOption = $CSD(\"<div class=\\\"csd-select-option\\\" data-value=\\\"\".concat(value, \"\\\">\").concat(htmlText, \"</div>\"));\n      $groupOptions.append($customOption);\n    });\n    $groupOptions.prepend($groupLabel);\n    $optionsContainer.append($groupOptions);\n  });\n\n  // Add individual options\n  if (groupOptions.length === 0) {\n    options.each(function () {\n      var $option = $CSD(this);\n      var value = $option.val();\n      var text = $option.text();\n      var htmlText = text;\n      if (checkmark) htmlText = checkmark + text;\n      if (value) {\n        var $customOption = $CSD(\"<div class=\\\"csd-select-option\\\" data-value=\\\"\".concat(value, \"\\\">\").concat(htmlText, \"</div>\"));\n        $optionsContainer.append($customOption);\n      }\n    });\n  }\n\n  // Add components to wrapper\n  $customSelect.append($display);\n  $customSelect.append($arrow).append($clearButton);\n  $wrapper.append($customSelect);\n  $wrapper.append($optionsContainer);\n\n  // Insert wrapper into DOM\n  $select.after($wrapper);\n\n  // Add keyboard navigation\n  $CSD(document).off(\"keydown\").on(\"keydown\", function (e) {\n    var $activeWrapper = $CSD(\".csd-select-wrapper\").filter(function () {\n      return $CSD(this).find(\".csd-select-options\").hasClass(\"visible\");\n    });\n    if ($activeWrapper.length) {\n      handleKeyboardNavigation($activeWrapper, e);\n    }\n  });\n\n  // Close all options when clicking outside\n  $CSD(document).on(\"click\", function (e) {\n    if (!e.target.closest('.csd-select-wrapper')) {\n      $CSD(\".csd-select-options\").removeClass(\"visible\");\n      filterOptions($CSD(\".csd-select-wrapper\"), \"\");\n      $CSD(\".csd-searchbar-input:not(.csd-select-editable)\").val(\"\");\n    }\n  });\n\n  // Add event listeners using event delegation\n  if (!selectElement.classList.contains(\"editable\")) {\n    $wrapper.on(\"click\", \".csd-select-display\", function (e) {\n      e.stopPropagation();\n      var $thisWrapper = $CSD(this).closest(\".csd-select-wrapper\");\n      var $thisOptionsContainer = $thisWrapper.find(\".csd-select-options\");\n      $CSD(\".csd-select-options\").not($thisOptionsContainer).removeClass(\"visible\");\n      calculateDropdownPosition($CSD(this), $thisOptionsContainer);\n      $thisOptionsContainer.toggleClass(\"visible\");\n      if ($searchbar.length) $searchbar.find(\"input\").focus();\n    });\n  }\n  $wrapper.on(\"click\", \".csd-select-arrow\", function (e) {\n    e.stopPropagation();\n    var $thisWrapper = $CSD(this).closest(\".csd-select-wrapper\");\n    var $thisDisplay = $thisWrapper.find(\".csd-select-display\");\n    var $thisOptionsContainer = $thisWrapper.find(\".csd-select-options\");\n    calculateDropdownPosition($thisDisplay, $thisOptionsContainer);\n    $CSD(\".csd-select-options\").not($thisOptionsContainer).removeClass(\"visible\");\n    $thisOptionsContainer.toggleClass(\"visible\");\n  });\n  $wrapper.on(\"click\", \".csd-select-clearbutton\", function (e) {\n    e.stopPropagation();\n    var $thisWrapper = $CSD(this).closest(\".csd-select-wrapper\");\n    selectOption($thisWrapper, \"\", placeholder, idSelect);\n  });\n  $wrapper.on(\"click\", \".csd-select-searchbar\", function (e) {\n    e.stopPropagation();\n  });\n\n  // Add events for both searchbar and display\n  $wrapper.on(\"input\", \".csd-searchbar-input\", function (e) {\n    e.stopPropagation();\n    var $thisWrapper = $CSD(this).closest(\".csd-select-wrapper\");\n    var searchValue = $CSD(this).val();\n    filterOptions($thisWrapper, searchValue);\n  });\n  $wrapper.on(\"input\", \".csd-select-editable\", function (e) {\n    e.stopPropagation();\n    var $thisWrapper = $CSD(this).closest(\".csd-select-wrapper\");\n    var $thisOptionsContainer = $thisWrapper.find(\".csd-select-options\");\n    calculateDropdownPosition($CSD(this), $thisOptionsContainer);\n    $thisOptionsContainer.addClass(\"visible\");\n    var searchValue = $CSD(this).val();\n    filterOptions($thisWrapper, searchValue);\n  });\n\n  // Handle option events\n  $wrapper.on(\"mouseenter\", \".csd-select-option\", function () {\n    var $thisWrapper = $CSD(this).closest(\".csd-select-wrapper\");\n    $thisWrapper.find(\".csd-select-option\").removeClass(\"option-focus\");\n    $CSD(this).addClass(\"option-focus\");\n  });\n  $wrapper.on(\"mouseleave\", \".csd-select-option\", function () {\n    $CSD(this).removeClass(\"option-focus\");\n  });\n  $wrapper.on(\"click\", \".csd-select-option\", function (e) {\n    e.stopPropagation();\n    var $thisWrapper = $CSD(this).closest(\".csd-select-wrapper\");\n    var value = $CSD(this).data(\"value\");\n    var text = $CSD(this).text().replace(/^✓\\s*/, \"\");\n    selectOption($thisWrapper, value, text, idSelect, isMultipleSelect);\n  });\n\n  // Add events for checkbox in searchbar if present\n  if (selectElement.classList.contains(\"checkmark-all\")) {\n    // Aggiungiamo la checkbox al searchbar di questo specifico select\n    var $thisSearchbar = $wrapper.find(\".csd-select-searchbar\");\n    var $checkbox = $thisSearchbar.find(\".csd-select-searchbar-checkbox\");\n    $wrapper.on(\"click\", \".csd-select-searchbar-checkbox\", function (e) {\n      e.stopPropagation();\n      var $thisWrapper = $CSD(this).closest(\".csd-select-wrapper\");\n      var $thisSearchbarCheckbox = $CSD(this);\n      var $allOptions = $thisWrapper.find(\".csd-select-option\");\n      var $visibleOptions = $allOptions.filter(\":visible\");\n      var allSelected = $allOptions.length === $allOptions.filter(\".selected\").length;\n      if (allSelected) {\n        $allOptions.each(function () {\n          var $option = $CSD(this);\n          if ($option.hasClass(\"selected\")) {\n            var value = $option.data(\"value\").toString();\n            var text = $option.text().replace(/^✓\\s*/, \"\");\n            selectOption($thisWrapper, value, text, idSelect, isMultipleSelect);\n          }\n        });\n      } else {\n        $visibleOptions.each(function () {\n          var $option = $CSD(this);\n          if (!$option.hasClass(\"selected\")) {\n            var value = $option.data(\"value\").toString();\n            var text = $option.text().replace(/^✓\\s*/, \"\");\n            selectOption($thisWrapper, value, text, idSelect, isMultipleSelect);\n          }\n        });\n      }\n\n      // Aggiorniamo solo la checkbox di questo select\n      updateCheckboxIcon($thisSearchbarCheckbox, $thisWrapper);\n    });\n\n    // Delegate click event for chips\n    $wrapper.on(\"click\", \".delete-chip\", function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var $thisWrapper = $CSD(this).closest(\".csd-select-wrapper\");\n      var $chip = $CSD(this).closest(\".csd-select-chip\");\n      var text = $chip.find(\".csd-label-select\").text();\n      selectOption($thisWrapper, $chip.data(\"value\").toString(), text, idSelect, isMultipleSelect);\n    });\n  }\n\n  // Searchbar with clear button\n  var searchInput = $wrapper.find(\"#searchInput\");\n  var clearButton = $wrapper.find(\"#clearButton\");\n\n  // Mark the element as initialized\n  $select.attr('data-csd-select-initialized', 'true');\n  if (searchInput.length && clearButton.length) {\n    searchInput.on(\"input\", function () {\n      clearButton.toggleClass(\"visible\", this.value !== \"\");\n    });\n    clearButton.on(\"click\", function () {\n      searchInput.val(\"\");\n      $CSD(this).removeClass(\"visible\");\n    });\n  }\n}\n\n// Funzione per aggiornare l'icona della checkbox\nfunction updateCheckboxIcon($checkbox, $wrapper) {\n  var $allOptions = $wrapper.find(\".csd-select-option\");\n  var selectedCount = $allOptions.filter(\".selected\").length;\n  if (selectedCount === 0) {\n    $checkbox.find(\"ion-icon\").remove();\n  } else if (selectedCount === $allOptions.length) {\n    $checkbox.html(\"<ion-icon name='checkmark-outline'></ion-icon>\");\n  } else {\n    $checkbox.html(\"<ion-icon name='remove-outline'></ion-icon>\");\n  }\n}\nfunction handleKeyboardNavigation($wrapper, e) {\n  var $optionsContainer = $wrapper.find(\".csd-select-options\");\n  var $options = $wrapper.find(\".csd-select-option:visible\");\n\n  // Miglioriamo la selezione dell'elemento corrente\n  var $currentHovered = $wrapper.find(\".csd-select-option.option-focus\");\n  if (!$currentHovered.length) {\n    // Prima cerchiamo un elemento con hover\n    $currentHovered = $wrapper.find(\".csd-select-option:hover\");\n\n    // Se non c'è hover, cerchiamo l'elemento selezionato\n    if (!$currentHovered.length) {\n      $currentHovered = $wrapper.find(\".csd-select-option.selected\");\n      if ($currentHovered.length) {\n        $currentHovered.addClass(\"option-focus\");\n      }\n    }\n  }\n  if (!$optionsContainer.hasClass(\"visible\") || !$options.length) return;\n  var updateHover = function updateHover($newHovered) {\n    // Rimuoviamo la classe da tutti gli elementi\n    $options.each(function () {\n      $CSD(this).removeClass(\"option-focus\");\n    });\n    if ($newHovered && $newHovered.length) {\n      $newHovered.addClass(\"option-focus\");\n      var container = $optionsContainer.elements[0];\n      var hoveredOption = $newHovered.elements[0];\n\n      // Calcoliamo la posizione relativa dell'elemento rispetto al container\n      var containerTop = container.scrollTop;\n      var containerHeight = container.clientHeight;\n      var optionTop = hoveredOption.offsetTop;\n      var optionHeight = hoveredOption.offsetHeight;\n      var extraScrollPixels = 5;\n\n      // Scroll verso l'alto se necessario\n      if (optionTop < containerTop) {\n        container.scrollTop = Math.max(0, optionTop - extraScrollPixels);\n      }\n      // Scroll verso il basso se necessario\n      else if (optionTop + optionHeight > containerTop + containerHeight) {\n        container.scrollTop = Math.min(container.scrollHeight - containerHeight, optionTop + optionHeight - containerHeight + extraScrollPixels);\n      }\n    }\n  };\n  var getVisibleOptions = function getVisibleOptions() {\n    var visibleOptions = [];\n    $options.each(function () {\n      visibleOptions.push($CSD(this));\n    });\n    return visibleOptions;\n  };\n  var getCurrentIndex = function getCurrentIndex() {\n    var visibleOptions = getVisibleOptions();\n    var currentFocused = $wrapper.find(\".csd-select-option.option-focus\");\n    if (!currentFocused.length) return -1;\n    for (var i = 0; i < visibleOptions.length; i++) {\n      if (visibleOptions[i].elements[0] === currentFocused.elements[0]) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  switch (e.key) {\n    case \"ArrowDown\":\n      e.preventDefault();\n      var visibleOptionsDown = getVisibleOptions();\n      var currentDownIndex = getCurrentIndex();\n      if (currentDownIndex === -1) {\n        // Se non c'è focus, partiamo dall'elemento selezionato o dal primo\n        var $selected = $wrapper.find(\".csd-select-option.selected\");\n        if ($selected.length) {\n          var selectedIndex = visibleOptionsDown.findIndex(function (opt) {\n            return opt.elements[0] === $selected.elements[0];\n          });\n          if (selectedIndex > -1) {\n            updateHover(visibleOptionsDown[selectedIndex]);\n          } else {\n            updateHover(visibleOptionsDown[0]);\n          }\n        } else {\n          updateHover(visibleOptionsDown[0]);\n        }\n      } else if (currentDownIndex === visibleOptionsDown.length - 1) {\n        updateHover(visibleOptionsDown[0]); // Torna al primo\n      } else {\n        updateHover(visibleOptionsDown[currentDownIndex + 1]);\n      }\n      break;\n    case \"ArrowUp\":\n      e.preventDefault();\n      var visibleOptionsUp = getVisibleOptions();\n      var currentUpIndex = getCurrentIndex();\n      if (currentUpIndex === -1) {\n        // Se non c'è focus, partiamo dall'elemento selezionato o dall'ultimo\n        var _$selected = $wrapper.find(\".csd-select-option.selected\");\n        if (_$selected.length) {\n          var _selectedIndex = visibleOptionsUp.findIndex(function (opt) {\n            return opt.elements[0] === _$selected.elements[0];\n          });\n          if (_selectedIndex > -1) {\n            updateHover(visibleOptionsUp[_selectedIndex]);\n          } else {\n            updateHover(visibleOptionsUp[visibleOptionsUp.length - 1]);\n          }\n        } else {\n          updateHover(visibleOptionsUp[visibleOptionsUp.length - 1]);\n        }\n      } else if (currentUpIndex === 0) {\n        updateHover(visibleOptionsUp[visibleOptionsUp.length - 1]); // Vai all'ultimo\n      } else {\n        updateHover(visibleOptionsUp[currentUpIndex - 1]);\n      }\n      break;\n    case \"Enter\":\n    case \"Tab\":\n      var currentFocused = $wrapper.find(\".csd-select-option.option-focus\");\n      if (currentFocused.length) {\n        e.preventDefault();\n        var value = currentFocused.data(\"value\");\n        var text = currentFocused.text().replace(/^✓\\s*/, \"\");\n        var idSelect = $wrapper.prev(\".csd-select\").attr(\"id\");\n        var isMultipleSelect = $wrapper.prev(\".csd-select\").prop(\"multiple\");\n        selectOption($wrapper, value, text, idSelect, isMultipleSelect);\n        currentFocused.removeClass(\"option-focus\");\n        $optionsContainer.removeClass(\"visible\");\n      }\n      break;\n    case \"Escape\":\n      $options.each(function () {\n        $CSD(this).removeClass(\"option-focus\");\n      });\n      $optionsContainer.removeClass(\"visible\");\n      break;\n  }\n}\nfunction calculateDropdownPosition($display, $optionsContainer) {\n  var position = $display.offset();\n  var viewportHeight = $CSD(window).height();\n  var scrollTop = $CSD(window).scrollTop();\n  var displayHeight = $display.outerHeight();\n  var optionsHeight = $optionsContainer.outerHeight(); // Altezza effettiva del dropdown\n\n  // Calcola lo spazio disponibile sotto\n  var spaceBelow = viewportHeight - (position.top - scrollTop + displayHeight);\n\n  // Se lo spazio sotto è minore dell'altezza delle opzioni, posiziona sopra\n  if (spaceBelow < optionsHeight) {\n    $optionsContainer.addClass(\"position-above\").removeClass(\"position-below\");\n  } else {\n    $optionsContainer.addClass(\"position-below\").removeClass(\"position-above\");\n  }\n}\nfunction selectOption($wrapper, value, text, idSelect) {\n  var isMultipleSelect = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var isEditable = $wrapper.find(\".csd-select-editable\").length > 0;\n  var isChipsSelect = $wrapper.find(\".csd-select-chips\").length > 0;\n  value = value.toString();\n  var $display = $wrapper.find(\".csd-select-display\");\n  if (isEditable) $display = $wrapper.find(\".csd-select-editable\");\n  var $originalSelect = $wrapper.prev(\".csd-select\");\n  var $clearButton = $wrapper.find(\".csd-select-clearbutton\");\n  var $originalSelectById = $CSD(\"#\" + idSelect);\n\n  // Recupera i valori precedenti, assicurandosi che siano un array\n  var oldValue = $originalSelect.val() || (isMultipleSelect ? [] : \"\");\n  if (!Array.isArray(oldValue)) oldValue = oldValue.split(\",\").filter(function (v) {\n    return v;\n  }); // Assicura che sia un array\n\n  var placeholder = $originalSelect.attr(\"data-placeholder\") || \"Seleziona un'opzione\";\n  var oldText = $display.find(\".csd-label-select\").text() || \"\";\n  var newValue = _toConsumableArray(oldValue); // Copy existing values\n  var newText = oldText;\n  if (isMultipleSelect) {\n    if (newValue.includes(value)) {\n      // Remove value and text if already present\n      newValue = newValue.filter(function (v) {\n        return v !== value;\n      });\n      newText = newText.split(\",\").filter(function (t) {\n        return t.trim() !== text;\n      }).join(\", \");\n    } else {\n      // Add value and text if not present\n      if (newValue.includes(placeholder)) {\n        newValue = newValue.filter(function (v) {\n          return v !== placeholder;\n        });\n        newText = newText.replace(placeholder, \"\").trim();\n      }\n      if (newText.includes(placeholder)) {\n        newValue = newValue.filter(function (v) {\n          return v !== placeholder;\n        });\n        newText = newText.replace(placeholder, \"\").trim();\n      }\n      newValue.push(value);\n      newText = (newText ? newText + \", \" : \"\") + text;\n    }\n  } else {\n    // For single select, replace the value\n    newValue = [value];\n    newText = text;\n  }\n  $originalSelect.val(newValue).trigger(\"change\");\n\n  // Update display\n  if (!isChipsSelect || newValue.length == 0 || newValue[0] == \"\") {\n    $display.html('<label class=\"csd-label-select\">' + (newText || placeholder) + \"</label>\");\n  } else {\n    var newHTML = \"\";\n    var $options = $wrapper.find(\".csd-select-options\");\n    newValue.forEach(function (value) {\n      var text = $options.find('.csd-select-option[data-value=\"' + value + '\"]').text();\n      newHTML += '<div class=\"csd-select-chip\" data-value=\"' + value + '\"><label class=\"csd-label-select\">' + text + '</label><ion-icon class=\"delete-chip\" name=\"close-circle-outline\"></ion-icon></div>';\n    });\n    if (newHTML == \"\") {\n      $display.html('<label class=\"csd-label-select\">' + placeholder + \"</label>\");\n    } else {\n      $display.html('<div class=\"csd-select-chips\">' + newHTML + \"</div>\");\n    }\n    $display.find(\".delete-chip\").on(\"click\", function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var $chip = $CSD(this).closest(\".csd-select-chip\");\n      var text = $chip.find(\".csd-label-select\").text();\n      selectOption($wrapper, $chip.data(\"value\").toString(), text, idSelect, isMultipleSelect);\n    });\n  }\n  if (isEditable) $display.val(newText || \"\");\n  if (isEditable && newValue.length === 0) $display.val(\"\");\n\n  // Handle reset button visibility\n  var hasValue = newValue.length > 0 && newValue[0] !== \"\";\n  toggleVisibility($clearButton, hasValue);\n\n  // Update options state\n  $wrapper.find(\".csd-select-option\").each(function () {\n    var $option = $CSD(this);\n    var optionValue = $option.data(\"value\").toString();\n    if (newValue.includes(optionValue)) {\n      $option.addClass(\"selected\");\n    } else {\n      $option.removeClass(\"selected\");\n    }\n  });\n\n  // Update checkbox state if present\n  var $searchbarCheckbox = $wrapper.find(\".csd-select-searchbar-checkbox\");\n  if ($searchbarCheckbox && $searchbarCheckbox.length) {\n    updateCheckboxIcon($searchbarCheckbox, $wrapper);\n  }\n  if (!isMultipleSelect) $wrapper.find(\".csd-select-options\").removeClass(\"visible\");\n}\nfunction toggleVisibility($element, condition) {\n  $element.toggleClass(\"visible\", condition);\n}\nfunction filterOptions($wrapper, searchValue) {\n  // Converte il valore di ricerca in minuscolo per un confronto case-insensitive\n  searchValue = searchValue.toLowerCase();\n  // Conta quante opzioni corrispondono al filtro\n  var matchCount = 0;\n\n  // Filtra le opzioni della select\n  $wrapper.find(\".csd-select-option\").each(function () {\n    var optionText = $CSD(this).text().toLowerCase();\n    var isMatch = optionText.includes(searchValue);\n    $CSD(this).toggle(isMatch); // Mostra o nasconde l'opzione\n    if (isMatch) matchCount++;\n  });\n\n  // Gestione del messaggio \"Nessun risultato trovato\"\n  var $noResultsMessage = $wrapper.find(\".csd-no-results\");\n  if ($noResultsMessage.length === 0) {\n    // Se il messaggio non esiste, lo crea\n    $noResultsMessage = $CSD('<div class=\"csd-no-results\" style=\"display:none\">Nessun risultato trovato</div>');\n    $wrapper.find(\".csd-select-options\").append($noResultsMessage);\n  }\n\n  // Mostra o nasconde il messaggio in base al risultato\n  $noResultsMessage.toggle(matchCount === 0);\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-select.js?");

/***/ }),

/***/ "./component/csd-sidebar.js":
/*!**********************************!*\
  !*** ./component/csd-sidebar.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeSidebar: () => (/* binding */ initializeSidebar)\n/* harmony export */ });\n// Initialize Sidebar Toggle\nfunction initializeSidebar() {\n  var $sidebarToggle = $CSD(\"#sidebarToggle\");\n  var $sidebar = $CSD(\".csd-sidebar\");\n  var $sidebarOverlay = $CSD(\"#sidebarOverlay\");\n  var $sidebarPositionSwitch = $CSD(\"#sidebarPosition\");\n  var $demoContainer = $sidebar.length ? $sidebar.closest(\".demo-container\") : null;\n  if (!$sidebar.length || !$sidebarOverlay.length || !$sidebarToggle.length) return;\n  if ($sidebarPositionSwitch.length) {\n    $sidebarPositionSwitch.prop(\"checked\", true);\n    $sidebarPositionSwitch.on(\"change\", function () {\n      if ($CSD(this).prop(\"checked\")) {\n        if ($sidebar.length && $demoContainer.length) {\n          $sidebar.removeClass(\"csd-sidebar-fixed\");\n          $demoContainer.append($sidebar);\n        }\n      } else {\n        if ($sidebar.length && $demoContainer.length) {\n          $sidebar.addClass(\"csd-sidebar-fixed\");\n          $demoContainer.parent().append($sidebar);\n        }\n      }\n    });\n  }\n  if ($sidebarToggle.length && $sidebar.length && $sidebarOverlay.length) {\n    var $toggleIcon = $sidebarToggle.find(\"ion-icon\");\n    $sidebarToggle.on(\"click\", function () {\n      if ($sidebar.hasClass(\"csd-sidebar-fixed\")) {\n        $sidebar.toggleClass(\"show\");\n        $sidebarOverlay.toggleClass(\"active\");\n      } else {\n        $sidebar.toggleClass(\"active\");\n      }\n      var isActive = $sidebar.hasClass(\"active\") || $sidebar.hasClass(\"show\");\n      $toggleIcon.attr(\"name\", isActive ? \"close-outline\" : \"menu-outline\");\n    });\n    $sidebarOverlay.on(\"click\", function () {\n      if ($sidebar.hasClass(\"csd-sidebar-fixed\")) {\n        $sidebar.removeClass(\"show\");\n      } else {\n        $sidebar.removeClass(\"active\");\n      }\n      $sidebarOverlay.removeClass(\"active\");\n      $toggleIcon.attr(\"name\", \"menu-outline\");\n    });\n  }\n  var $submenuItems = $CSD(\".has-submenu\");\n  $submenuItems.each(function () {\n    var $item = $CSD(this);\n    var $link = $item.find(\"a\");\n    if ($link.length) {\n      $link.on(\"click\", function (e) {\n        e.preventDefault();\n        $item.toggleClass(\"open\");\n      });\n    }\n  });\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-sidebar.js?");

/***/ }),

/***/ "./component/csd-split-button.js":
/*!***************************************!*\
  !*** ./component/csd-split-button.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeSplitButton: () => (/* binding */ initializeSplitButton)\n/* harmony export */ });\n// Split Button functionality\nfunction initializeSplitButton(element) {\n  if (!element || element.initialized) return;\n  var $splitButton = $CSD(element);\n  var $toggleButton = $splitButton.find('.split-toggle');\n  var $dropdown = $splitButton.find('.split-dropdown');\n  var isOpen = false;\n  function toggleDropdown(e) {\n    e.stopPropagation();\n    if (isOpen) {\n      $dropdown.removeClass('show');\n    } else {\n      $dropdown.addClass('show');\n      // Close other open dropdowns\n      $CSD('.split-dropdown.show').not($dropdown).removeClass('show');\n    }\n    isOpen = !isOpen;\n  }\n  function closeDropdown(e) {\n    if (!$splitButton[0].contains(e.target)) {\n      $dropdown.removeClass('show');\n      isOpen = false;\n    }\n  }\n  $toggleButton.on('click', toggleDropdown);\n  $CSD(document).on('click', closeDropdown);\n\n  // Mark as initialized\n  element.initialized = true;\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-split-button.js?");

/***/ }),

/***/ "./component/csd-splitter.js":
/*!***********************************!*\
  !*** ./component/csd-splitter.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeSplitter: () => (/* binding */ initializeSplitter)\n/* harmony export */ });\nfunction initializeSplitter(element) {\n  if (!element || element.initialized) return;\n  var $splitter = $CSD(element);\n  var activeSplitter = null;\n  var startPosition = null;\n  var startSizes = null;\n  function updatePanelSize($panel, size) {\n    $panel.data(\"size\", size);\n    $panel.css(\"flex\", \"0 0 \".concat(size, \"%\"));\n  }\n  function handleMouseMove(e) {\n    if (!activeSplitter) return;\n    var _activeSplitter = activeSplitter,\n      $prevPanel = _activeSplitter.$prevPanel,\n      $nextPanel = _activeSplitter.$nextPanel,\n      isHorizontal = _activeSplitter.isHorizontal;\n    var splitRect = $splitter[0].getBoundingClientRect();\n    var currentPosition = isHorizontal ? e.clientX : e.clientY;\n    var startOffset = isHorizontal ? splitRect.left : splitRect.top;\n    var totalSize = isHorizontal ? splitRect.width : splitRect.height;\n\n    // Calculate the position relative to the splitter\n    var position = currentPosition - startOffset;\n    var percentage = position / totalSize * 100;\n\n    // Calculate new sizes ensuring they sum to 100%\n    var totalPercentage = startSizes.prev + startSizes.next;\n    var newPrevSize = percentage;\n    var newNextSize = totalPercentage - percentage;\n\n    // Enforce minimum size (10%)\n    var minSize = 10;\n    if (newPrevSize < minSize) {\n      newPrevSize = minSize;\n      newNextSize = totalPercentage - minSize;\n    } else if (newNextSize < minSize) {\n      newNextSize = minSize;\n      newPrevSize = totalPercentage - minSize;\n    }\n\n    // Update panel sizes\n    updatePanelSize($prevPanel, newPrevSize);\n    updatePanelSize($nextPanel, newNextSize);\n\n    // Prevent text selection while dragging\n    e.preventDefault();\n  }\n  function handleMouseUp(e) {\n    if (!activeSplitter) return;\n\n    // Remove dragging class and cursor\n    activeSplitter.$gutter.removeClass(\"dragging\");\n    $CSD(\"body\").css(\"cursor\", \"\");\n\n    // Unbind move and up handlers\n    $CSD(document).off(\"mousemove.csd.splitter\").off(\"mouseup.csd.splitter\");\n\n    // Clear state\n    activeSplitter = null;\n    startPosition = null;\n    startSizes = null;\n\n    // Prevent any pending events\n    e.preventDefault();\n  }\n\n  // Initialize nested splitters\n  $splitter.find(\".csd-splitter\").each(function () {\n    if (!this.initialized) {\n      initializeSplitter(this);\n    }\n  });\n\n  // Set initial sizes for panels\n  var $panels = $splitter.find(\".csd-split-panel\");\n  var $gutter = $splitter.find(\".csd-split-gutter\");\n  var isHorizontal = $splitter.hasClass(\"horizontal\");\n  $panels.each(function () {\n    var $panel = $CSD(this);\n    if (!$panel.data(\"size\")) {\n      $panel.data(\"size\", 50); // Default to 50% each\n    }\n    updatePanelSize($panel, $panel.data(\"size\"));\n  });\n\n  // Handle gutter mousedown\n  $gutter.on(\"mousedown\", function (e) {\n    e.preventDefault();\n    activeSplitter = {\n      $gutter: $CSD(this),\n      $prevPanel: $CSD(this).prev(\".csd-split-panel\"),\n      $nextPanel: $CSD(this).next(\".csd-split-panel\"),\n      isHorizontal: isHorizontal\n    };\n    startPosition = isHorizontal ? e.clientX : e.clientY;\n    startSizes = {\n      prev: activeSplitter.$prevPanel.data(\"size\"),\n      next: activeSplitter.$nextPanel.data(\"size\")\n    };\n    activeSplitter.$gutter.addClass(\"dragging\");\n    $CSD(\"body\").css(\"cursor\", isHorizontal ? \"col-resize\" : \"row-resize\");\n\n    // Bind move and up handlers directly to document\n    $CSD(document).on(\"mousemove\", handleMouseMove);\n    $CSD(document).on(\"mouseup\", handleMouseUp);\n  });\n\n  // Update position on window resize and scroll\n  $CSD(window).on(\"resize.csd.splitter scroll.csd.splitter\", function () {\n    if ($splitter.find(\".csd-split-panel\").length) {\n      $splitter.find(\".csd-split-panel\").each(function () {\n        updatePanelSize($CSD(this), $CSD(this).data(\"size\"));\n      });\n    }\n  });\n\n  // Mark as initialized\n  element.initialized = true;\n\n  // Return cleanup function\n  return function destroy() {\n    $gutter.off(\".csd.splitter\");\n    $CSD(document).off(\"mousemove\").off(\"mouseup\");\n    element.initialized = false;\n  };\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-splitter.js?");

/***/ }),

/***/ "./component/csd-stepper.js":
/*!**********************************!*\
  !*** ./component/csd-stepper.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeStepper: () => (/* binding */ initializeStepper)\n/* harmony export */ });\nfunction initializeStepper(element) {\n  if (!element) return;\n  var $element = $CSD(element);\n  var $stepper = $element.find(\".csd-stepper\");\n  if (!$stepper.length) return;\n  var $steps = $stepper.find(\".csd-step\");\n  var $panels = $element.find(\".csd-step-panel\");\n  var $prevBtn = $element.find(\".prev-step\");\n  var $nextBtn = $element.find(\".next-step\");\n  var isVertical = $stepper.hasClass(\"vertical\");\n  function updateProgressLine($progress, index) {\n    var $currentIndicator = $steps.eq(index).find(\".csd-step-indicator\");\n    var $nextIndicator = $steps.eq(index + 1).find(\".csd-step-indicator\");\n    var stepperRect = $stepper[0].getBoundingClientRect();\n    if (isVertical) {\n      var currentRect = $currentIndicator[0].getBoundingClientRect();\n      var nextRect = $nextIndicator[0].getBoundingClientRect();\n      $progress.css({\n        top: \"\".concat(currentRect.bottom - stepperRect.top + 6, \"px\"),\n        height: \"\".concat(nextRect.top - currentRect.bottom - 12, \"px\"),\n        left: \"\".concat(currentRect.left - stepperRect.left + currentRect.width / 2, \"px\")\n      });\n    } else {\n      var _currentRect = $currentIndicator[0].getBoundingClientRect();\n      var _nextRect = $nextIndicator[0].getBoundingClientRect();\n      $progress.css({\n        left: \"\".concat(_currentRect.right - stepperRect.left + 12, \"px\"),\n        width: \"\".concat(_nextRect.left - _currentRect.right - 24, \"px\"),\n        top: \"\".concat(_currentRect.top - stepperRect.top + _currentRect.height / 2, \"px\")\n      });\n    }\n  }\n  $steps.each(function (step, index) {\n    if (index < $steps.length - 1) {\n      var $progress = $CSD(\"<div>\").addClass(\"csd-step-progress\").attr(\"data-step\", index + 1);\n      $stepper.append($progress);\n      updateProgressLine($progress, index);\n    }\n  });\n  var currentStep = 1;\n  var totalSteps = $steps.length;\n  function updateProgress() {\n    var $activeStep = $stepper.find(\".csd-step.active\");\n    if (!$activeStep.length) return;\n    var stepIndex = $activeStep.index();\n    $stepper.find(\".csd-step-progress\").each(function (progress, index) {\n      var $progress = $CSD(progress);\n      updateProgressLine($progress, index);\n      $progress.toggleClass(\"completed\", index < stepIndex);\n    });\n  }\n  function goToStep(step) {\n    currentStep = step;\n    $steps.each(function (step, index) {\n      var $s = $CSD(step);\n      $s.toggleClass(\"active\", index + 1 === currentStep);\n      $s.toggleClass(\"completed\", index + 1 < currentStep);\n    });\n    $panels.each(function (panel, index) {\n      $CSD(panel).toggleClass(\"active\", index + 1 === step);\n    });\n    if ($prevBtn.length) $prevBtn.prop(\"disabled\", currentStep === 1);\n    if ($nextBtn.length) $nextBtn.prop(\"disabled\", currentStep === totalSteps);\n    updateProgress();\n  }\n  $steps.each(function (step, index) {\n    var $indicator = $CSD(step).find(\".csd-step-indicator\");\n    if ($indicator.length) {\n      $indicator.on(\"click\", function () {\n        return goToStep(index + 1);\n      });\n    }\n  });\n  if ($prevBtn.length) {\n    $prevBtn.on(\"click\", function () {\n      if (currentStep > 1) goToStep(currentStep - 1);\n    });\n  }\n  if ($nextBtn.length) {\n    $nextBtn.on(\"click\", function () {\n      if (currentStep < totalSteps) goToStep(currentStep + 1);\n    });\n  }\n  $CSD(window).on(\"load\", function () {\n    goToStep(1);\n    $CSD(window).on(\"resize\", updateProgress);\n  });\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-stepper.js?");

/***/ }),

/***/ "./component/csd-submenu.js":
/*!**********************************!*\
  !*** ./component/csd-submenu.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeSubmenu: () => (/* binding */ initializeSubmenu)\n/* harmony export */ });\nfunction initializeSubmenu(element) {\n  if (!element) return;\n  var $element = $CSD(element);\n  var $toggle = $element.find(\">  a\");\n  if (!$toggle.length) return;\n  $toggle.on(\"click\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    var $parent = $CSD(this).closest(\".has-submenu\").parent();\n    if ($parent.length) {\n      $parent.find(\".has-submenu.open\").not($element).removeClass(\"open\");\n    }\n    $element.toggleClass(\"open\");\n  });\n  var $submenuItems = $element.find(\".csd-sidebar-submenu .csd-sidebar-item > a\");\n  $submenuItems.on(\"click\", function (e) {\n    var $this = $CSD(this);\n    var href = $this.attr(\"href\");\n    if (!href || href === \"#\") {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n  });\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-submenu.js?");

/***/ }),

/***/ "./component/csd-tab.js":
/*!******************************!*\
  !*** ./component/csd-tab.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeTab: () => (/* binding */ initializeTab)\n/* harmony export */ });\n// Utility Functions\nfunction debounce(func, wait) {\n  var timeout;\n  return function executedFunction() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var later = function later() {\n      clearTimeout(timeout);\n      func.apply(void 0, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n// Tab Component\nfunction initializeTab(element) {\n  var $element = $CSD(element);\n  var $tabs = $element.find(\".csd-tab\");\n  var $panels = $element.find(\".csd-tab-panel\");\n  var $indicator = $element.find(\".csd-tab-indicator\");\n  var $tabList = $element.find(\".csd-tab-list\");\n  function updateIndicatorPosition(selectedTab) {\n    if (!selectedTab || !$indicator.length) return;\n    var tabRect = selectedTab.getBoundingClientRect();\n    var listRect = $tabList[0].getBoundingClientRect();\n    var translateX = tabRect.left - listRect.left;\n    requestAnimationFrame(function () {\n      $indicator.css(\"width\", \"\".concat(tabRect.width, \"px\")).css(\"transform\", \"translateX(\".concat(translateX, \"px)\"));\n    });\n  }\n  function selectTab(selectedTab, index) {\n    var $selectedTab = $CSD(selectedTab);\n    if ($selectedTab.hasClass(\"active\")) return;\n    $tabs.removeClass(\"active\");\n    $selectedTab.addClass(\"active\");\n    $panels.each(function (panel, panelIndex) {\n      $CSD(panel).toggleClass(\"active\", panelIndex === index);\n    });\n    updateIndicatorPosition(selectedTab);\n  }\n  $tabs.each(function (tab) {\n    $CSD(tab).on(\"click\", function () {\n      var index = $CSD(tab).index();\n      selectTab(tab, index);\n    });\n  });\n  var $activeTab = $element.find(\".csd-tab.active\");\n  if ($activeTab.length) {\n    updateIndicatorPosition($activeTab[0]);\n  }\n  var debouncedResize = debounce(function () {\n    var $activeTab = $element.find(\".csd-tab.active\");\n    if ($activeTab.length) {\n      updateIndicatorPosition($activeTab[0]);\n    }\n  }, 100);\n  $CSD(window).on(\"resize\", debouncedResize);\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-tab.js?");

/***/ }),

/***/ "./component/csd-textarea.js":
/*!***********************************!*\
  !*** ./component/csd-textarea.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeTextArea: () => (/* binding */ initializeTextArea)\n/* harmony export */ });\nfunction initializeTextArea(textareaElement) {\n  var $textarea = $CSD(textareaElement);\n  var maxLength = $textarea.attr(\"maxlength\");\n  var minRows = $textarea.attr(\"min-rows\");\n  var isAutoResize = $textarea.hasClass(\"csd-textarea-auto\");\n\n  // Gestione conteggio caratteri\n  if (maxLength) {\n    var $counter = $textarea.siblings(\".csd-textarea-counter\");\n    $textarea.on(\"input\", function () {\n      var count = this.value.length;\n      $counter.text(\"\".concat(count, \"/\").concat(maxLength));\n    });\n  }\n\n  // Gestione altezza minima\n  if (minRows && typeof window !== 'undefined') {\n    var lineHeight = parseInt(window.getComputedStyle($textarea.elements[0]).lineHeight);\n    var paddingTop = parseInt(window.getComputedStyle($textarea.elements[0]).paddingTop);\n    var paddingBottom = parseInt(window.getComputedStyle($textarea.elements[0]).paddingBottom);\n    var minHeight = lineHeight * minRows + paddingTop + paddingBottom;\n    $textarea.css(\"min-height\", \"\".concat(minHeight, \"px\"));\n  }\n\n  // Gestione auto-resize\n  if (isAutoResize) {\n    $textarea.on(\"input\", function () {\n      var el = $textarea.elements[0];\n      el.style.height = \"auto\";\n      el.style.height = el.scrollHeight + \"px\";\n    });\n\n    // Imposta altezza iniziale\n    $textarea.trigger(\"input\");\n  }\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-textarea.js?");

/***/ }),

/***/ "./component/csd-toast.js":
/*!********************************!*\
  !*** ./component/csd-toast.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeToast: () => (/* binding */ initializeToast)\n/* harmony export */ });\nfunction initializeToast() {\n  var toastContainer = $CSD(\"<div>\").addClass(\"csd-toast-container\");\n  $CSD(\"body\").append(toastContainer);\n  function createToast(message) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"info\";\n    var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3000;\n    var toast = $CSD(\"<div>\").addClass(\"csd-toast\").addClass(\"csd-toast-\".concat(type)).text(message);\n    toastContainer.append(toast);\n    setTimeout(function () {\n      toast.addClass(\"show\");\n    }, 50);\n    setTimeout(function () {\n      toast.removeClass(\"show\");\n      setTimeout(function () {\n        toast.remove();\n      }, 300);\n    }, duration);\n    return toast;\n  }\n  return {\n    show: createToast\n  };\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-toast.js?");

/***/ }),

/***/ "./component/csd-toggle-button.js":
/*!****************************************!*\
  !*** ./component/csd-toggle-button.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeToggleButton: () => (/* binding */ initializeToggleButton)\n/* harmony export */ });\nfunction initializeToggleButton(buttonElement) {\n  var $originalButton = $CSD(buttonElement);\n\n  // Create wrapper and label\n  var wrapper = document.createElement(\"div\");\n  wrapper.className = \"csd-toggle-button-wrapper\";\n  var label = document.createElement(\"div\");\n  label.className = \"csd-toggle-button-label\";\n\n  // Handle icons and text for different states\n  var icon = buttonElement.getAttribute(\"icon\");\n  var onIcon = buttonElement.getAttribute(\"onicon\");\n  var offIcon = buttonElement.getAttribute(\"officon\");\n  var onLabel = buttonElement.getAttribute(\"onlabel\");\n  var offLabel = buttonElement.getAttribute(\"offlabel\");\n\n  // Calculate minimum width based on text content\n  if (onLabel || offLabel) {\n    // Create temporary span to measure text width\n    var tempSpan = document.createElement(\"span\");\n    tempSpan.style.visibility = \"hidden\";\n    tempSpan.style.position = \"absolute\";\n    tempSpan.style.whiteSpace = \"nowrap\";\n    tempSpan.style.fontSize = \"14px\"; // Match button font size\n    document.body.appendChild(tempSpan);\n\n    // Measure both labels\n    var texts = [onLabel, offLabel].filter(Boolean);\n    var maxWidth = 0;\n    texts.forEach(function (text) {\n      tempSpan.textContent = text;\n      maxWidth = Math.max(maxWidth, tempSpan.offsetWidth);\n    });\n\n    // Remove temporary span\n    document.body.removeChild(tempSpan);\n\n    // Add padding (1rem = 16px) and convert to rem\n    var totalWidthPx = maxWidth + 32 * 2; // 2rem padding (1rem per side)\n    // Round up to nearest rem\n    var widthInRem = Math.ceil(totalWidthPx / 16);\n\n    // Set minimum width on label\n    label.style.minWidth = widthInRem + \"rem\";\n  }\n\n  // Create icon element if needed\n  if (icon || onIcon || offIcon) {\n    var iconElement = document.createElement(\"ion-icon\");\n    if (icon) {\n      iconElement.setAttribute(\"name\", icon);\n    } else {\n      // Set initial icon based on checked state\n      iconElement.setAttribute(\"name\", buttonElement.checked ? onIcon || offIcon : offIcon || onIcon);\n    }\n    label.appendChild(iconElement);\n  }\n\n  // Create text button if needed\n  if (onLabel || offLabel) {\n    var textButton = document.createElement(\"button\");\n    textButton.type = \"button\";\n    textButton.className = \"csd-toggle-button-text\";\n    // Set initial text based on checked state\n    textButton.textContent = buttonElement.checked ? onLabel || offLabel : offLabel || onLabel;\n    label.appendChild(textButton);\n  }\n\n  // Build structure\n\n  // Replace original with wrapper\n  buttonElement.parentNode.replaceChild(wrapper, buttonElement);\n  wrapper.appendChild(buttonElement);\n  wrapper.appendChild(label);\n\n  // Get CSD wrappers\n  var $wrapper = $CSD(wrapper);\n  var $label = $CSD(label);\n\n  // Add click handler\n  $label.on(\"click\", function (e) {\n    if (!buttonElement.disabled) {\n      buttonElement.checked = !buttonElement.checked;\n      // Trigger change event\n      buttonElement.dispatchEvent(new Event(\"change\", {\n        bubbles: true\n      }));\n    }\n  });\n\n  // Listen for changes to update UI\n  $originalButton.on(\"change\", function () {\n    var isChecked = this.checked;\n    var iconEl = label.querySelector(\"ion-icon\");\n    var textEl = label.querySelector(\".csd-toggle-button-text\");\n    if (iconEl) {\n      if (isChecked && (onIcon || icon)) {\n        iconEl.setAttribute(\"name\", onIcon || icon);\n      } else if (!isChecked && (offIcon || icon)) {\n        iconEl.setAttribute(\"name\", offIcon || icon);\n      }\n    }\n    if (textEl) {\n      if (isChecked && (onLabel || offLabel)) {\n        textEl.textContent = onLabel || offLabel;\n      } else if (!isChecked && (offLabel || onLabel)) {\n        textEl.textContent = offLabel || onLabel;\n      }\n    }\n  });\n\n  // Override val method for toggle button\n  var originalVal = _CSD_UTILS.prototype.val;\n  _CSD_UTILS.prototype.val = function (value) {\n    var el = this.elements[0];\n    if (el && el.classList.contains(\"csd-toggle-button\")) {\n      if (arguments.length === 0) {\n        return el.checked;\n      }\n\n      // Convert value to boolean and update\n      el.checked = value === true || value === \"true\" || value === 1 || value === \"1\";\n      el.dispatchEvent(new Event(\"change\", {\n        bubbles: true\n      }));\n      return this;\n    }\n    return originalVal.apply(this, arguments);\n  };\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-toggle-button.js?");

/***/ }),

/***/ "./component/csd-toggle.js":
/*!*********************************!*\
  !*** ./component/csd-toggle.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeToggle: () => (/* binding */ initializeToggle)\n/* harmony export */ });\nfunction initializeToggle(toggleElement) {\n  var $originalToggle = $CSD(toggleElement);\n\n  // Create wrapper and switch element\n  var wrapper = document.createElement(\"div\");\n  wrapper.className = \"csd-toggle-wrapper\";\n  var switchLabel = document.createElement(\"label\");\n  if (!switchLabel) {\n    return;\n  }\n  switchLabel.className = \"csd-toggle-switch\";\n\n  // Add special classes and data if needed\n  var iconChecked = toggleElement.getAttribute(\"icon-checked\");\n  var iconUnchecked = toggleElement.getAttribute(\"icon-unchecked\");\n  var textChecked = toggleElement.getAttribute(\"text-checked\");\n  var textUnchecked = toggleElement.getAttribute(\"text-unchecked\");\n  if (iconChecked && iconUnchecked) {\n    switchLabel.classList.add(\"with-icons\");\n    switchLabel.setAttribute(\"data-icon-checked\", iconChecked);\n    switchLabel.setAttribute(\"data-icon-unchecked\", iconUnchecked);\n  }\n  if (textChecked && textUnchecked) {\n    switchLabel.classList.add(\"with-text\");\n    switchLabel.setAttribute(\"data-text-checked\", textChecked);\n    switchLabel.setAttribute(\"data-text-unchecked\", textUnchecked);\n  }\n\n  // Create toggle group if label is present\n  var label = toggleElement.getAttribute(\"label\");\n  var position = toggleElement.getAttribute(\"position\") || \"end\";\n  if (label) {\n    wrapper.className = \"csd-toggle-group\";\n    var labelSpan = document.createElement(\"span\");\n    labelSpan.className = \"csd-toggle-label\";\n    labelSpan.textContent = label;\n\n    // Add elements in correct order based on position\n    if (position === \"start\") {\n      wrapper.appendChild(labelSpan);\n      wrapper.appendChild(switchLabel);\n    } else {\n      wrapper.appendChild(switchLabel);\n      wrapper.appendChild(labelSpan);\n    }\n  } else {\n    wrapper.appendChild(switchLabel);\n  }\n\n  // Move original toggle into wrapper and hide it\n  var originalElement = $originalToggle.elements[0];\n  originalElement.style.display = \"none\";\n  originalElement.parentNode.replaceChild(wrapper, originalElement);\n  wrapper.appendChild(originalElement);\n\n  // Get CSD wrappers\n  var $wrapper = $CSD(wrapper);\n  var $switch = $CSD(switchLabel);\n\n  // Add click handler\n  $switch.on(\"click\", function (e) {\n    if (!originalElement.disabled) {\n      originalElement.checked = !originalElement.checked;\n      // Trigger change event\n      originalElement.dispatchEvent(new Event(\"change\", {\n        bubbles: true\n      }));\n    }\n  });\n\n  // Listen for changes to update UI\n  $originalToggle.on(\"change\", function () {\n    $switch.toggleClass(\"checked\", originalElement.checked);\n  });\n\n  // Initial state\n  $switch.toggleClass(\"checked\", originalElement.checked);\n\n  // Override val method for toggle\n  var originalVal = _CSD_UTILS.prototype.val;\n  _CSD_UTILS.prototype.val = function (value) {\n    var el = this.elements[0];\n    if (el && el.classList.contains(\"csd-toggle\")) {\n      if (arguments.length === 0) {\n        return el.checked;\n      }\n\n      // Convert value to boolean and update\n      el.checked = value === true || value === \"true\" || value === 1 || value === \"1\";\n      el.dispatchEvent(new Event(\"change\", {\n        bubbles: true\n      }));\n      return this;\n    }\n    return originalVal.apply(this, arguments);\n  };\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-toggle.js?");

/***/ }),

/***/ "./component/csd-toolbar.js":
/*!**********************************!*\
  !*** ./component/csd-toolbar.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeToolbar: () => (/* binding */ initializeToolbar)\n/* harmony export */ });\n// Toolbar Component\nfunction initializeToolbar(element) {\n  // Aggiungi qui la logica specifica per la toolbar se necessaria\n}\n\n\n//# sourceURL=webpack://$CSD/./component/csd-toolbar.js?");

/***/ }),

/***/ "./component/index.js":
/*!****************************!*\
  !*** ./component/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   destroyBtn: () => (/* reexport safe */ _csd_button_js__WEBPACK_IMPORTED_MODULE_4__.destroyBtn),\n/* harmony export */   destroyFab: () => (/* reexport safe */ _csd_fab_js__WEBPACK_IMPORTED_MODULE_16__.destroyFab),\n/* harmony export */   getCheckboxValues: () => (/* reexport safe */ _csd_checkbox_js__WEBPACK_IMPORTED_MODULE_6__.getCheckboxValues),\n/* harmony export */   getRadioValue: () => (/* reexport safe */ _csd_radio_js__WEBPACK_IMPORTED_MODULE_7__.getRadioValue),\n/* harmony export */   initializeAccordion: () => (/* reexport safe */ _csd_accordion_js__WEBPACK_IMPORTED_MODULE_27__.initializeAccordion),\n/* harmony export */   initializeBtn: () => (/* reexport safe */ _csd_button_js__WEBPACK_IMPORTED_MODULE_4__.initializeBtn),\n/* harmony export */   initializeCheckbox: () => (/* reexport safe */ _csd_checkbox_js__WEBPACK_IMPORTED_MODULE_6__.initializeCheckbox),\n/* harmony export */   initializeConfirmDialog: () => (/* reexport safe */ _csd_modal_js__WEBPACK_IMPORTED_MODULE_18__.initializeConfirmDialog),\n/* harmony export */   initializeCustomSelect: () => (/* reexport safe */ _csd_select_js__WEBPACK_IMPORTED_MODULE_1__.initializeCustomSelect),\n/* harmony export */   initializeDatepickers: () => (/* reexport safe */ _csd_datepicker_js__WEBPACK_IMPORTED_MODULE_2__.initializeDatepickers),\n/* harmony export */   initializeDropdown: () => (/* reexport safe */ _csd_dropdown_js__WEBPACK_IMPORTED_MODULE_24__.initializeDropdown),\n/* harmony export */   initializeEditor: () => (/* reexport safe */ _csd_editor_js__WEBPACK_IMPORTED_MODULE_11__.initializeEditor),\n/* harmony export */   initializeFab: () => (/* reexport safe */ _csd_fab_js__WEBPACK_IMPORTED_MODULE_16__.initializeFab),\n/* harmony export */   initializeList: () => (/* reexport safe */ _csd_list_js__WEBPACK_IMPORTED_MODULE_21__.initializeList),\n/* harmony export */   initializeMask: () => (/* reexport safe */ _csd_mask_js__WEBPACK_IMPORTED_MODULE_5__.initializeMask),\n/* harmony export */   initializeMenu: () => (/* reexport safe */ _csd_menu_js__WEBPACK_IMPORTED_MODULE_29__.initializeMenu),\n/* harmony export */   initializeModal: () => (/* reexport safe */ _csd_modal_js__WEBPACK_IMPORTED_MODULE_18__.initializeModal),\n/* harmony export */   initializeNavigation: () => (/* reexport safe */ _csd_navigation_js__WEBPACK_IMPORTED_MODULE_17__.initializeNavigation),\n/* harmony export */   initializeNumber: () => (/* reexport safe */ _csd_number_js__WEBPACK_IMPORTED_MODULE_0__.initializeNumber),\n/* harmony export */   initializeOTP: () => (/* reexport safe */ _csd_otp_js__WEBPACK_IMPORTED_MODULE_8__.initializeOTP),\n/* harmony export */   initializePassword: () => (/* reexport safe */ _csd_password_js__WEBPACK_IMPORTED_MODULE_12__.initializePassword),\n/* harmony export */   initializePopover: () => (/* reexport safe */ _csd_popover_js__WEBPACK_IMPORTED_MODULE_23__.initializePopover),\n/* harmony export */   initializeRadio: () => (/* reexport safe */ _csd_radio_js__WEBPACK_IMPORTED_MODULE_7__.initializeRadio),\n/* harmony export */   initializeRange: () => (/* reexport safe */ _csd_range_js__WEBPACK_IMPORTED_MODULE_13__.initializeRange),\n/* harmony export */   initializeReorder: () => (/* reexport safe */ _csd_reorder_js__WEBPACK_IMPORTED_MODULE_20__.initializeReorder),\n/* harmony export */   initializeSearchbar: () => (/* reexport safe */ _csd_searchbar_js__WEBPACK_IMPORTED_MODULE_9__.initializeSearchbar),\n/* harmony export */   initializeSegment: () => (/* reexport safe */ _csd_segment_js__WEBPACK_IMPORTED_MODULE_28__.initializeSegment),\n/* harmony export */   initializeSidebar: () => (/* reexport safe */ _csd_sidebar_js__WEBPACK_IMPORTED_MODULE_30__.initializeSidebar),\n/* harmony export */   initializeSplitButton: () => (/* reexport safe */ _csd_split_button_js__WEBPACK_IMPORTED_MODULE_14__.initializeSplitButton),\n/* harmony export */   initializeSplitter: () => (/* reexport safe */ _csd_splitter_js__WEBPACK_IMPORTED_MODULE_22__.initializeSplitter),\n/* harmony export */   initializeStepper: () => (/* reexport safe */ _csd_stepper_js__WEBPACK_IMPORTED_MODULE_25__.initializeStepper),\n/* harmony export */   initializeSubmenu: () => (/* reexport safe */ _csd_submenu_js__WEBPACK_IMPORTED_MODULE_32__.initializeSubmenu),\n/* harmony export */   initializeTab: () => (/* reexport safe */ _csd_tab_js__WEBPACK_IMPORTED_MODULE_26__.initializeTab),\n/* harmony export */   initializeTextArea: () => (/* reexport safe */ _csd_textarea_js__WEBPACK_IMPORTED_MODULE_15__.initializeTextArea),\n/* harmony export */   initializeToast: () => (/* reexport safe */ _csd_toast_js__WEBPACK_IMPORTED_MODULE_19__.initializeToast),\n/* harmony export */   initializeToggle: () => (/* reexport safe */ _csd_toggle_js__WEBPACK_IMPORTED_MODULE_10__.initializeToggle),\n/* harmony export */   initializeToggleButton: () => (/* reexport safe */ _csd_toggle_button_js__WEBPACK_IMPORTED_MODULE_3__.initializeToggleButton),\n/* harmony export */   initializeToolbar: () => (/* reexport safe */ _csd_toolbar_js__WEBPACK_IMPORTED_MODULE_31__.initializeToolbar),\n/* harmony export */   showAccordion: () => (/* reexport safe */ _csd_accordion_js__WEBPACK_IMPORTED_MODULE_27__.showAccordion)\n/* harmony export */ });\n/* harmony import */ var _csd_number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csd-number.js */ \"./component/csd-number.js\");\n/* harmony import */ var _csd_select_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csd-select.js */ \"./component/csd-select.js\");\n/* harmony import */ var _csd_datepicker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./csd-datepicker.js */ \"./component/csd-datepicker.js\");\n/* harmony import */ var _csd_toggle_button_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./csd-toggle-button.js */ \"./component/csd-toggle-button.js\");\n/* harmony import */ var _csd_button_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./csd-button.js */ \"./component/csd-button.js\");\n/* harmony import */ var _csd_mask_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./csd-mask.js */ \"./component/csd-mask.js\");\n/* harmony import */ var _csd_checkbox_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./csd-checkbox.js */ \"./component/csd-checkbox.js\");\n/* harmony import */ var _csd_radio_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./csd-radio.js */ \"./component/csd-radio.js\");\n/* harmony import */ var _csd_otp_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./csd-otp.js */ \"./component/csd-otp.js\");\n/* harmony import */ var _csd_searchbar_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./csd-searchbar.js */ \"./component/csd-searchbar.js\");\n/* harmony import */ var _csd_toggle_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./csd-toggle.js */ \"./component/csd-toggle.js\");\n/* harmony import */ var _csd_editor_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./csd-editor.js */ \"./component/csd-editor.js\");\n/* harmony import */ var _csd_password_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./csd-password.js */ \"./component/csd-password.js\");\n/* harmony import */ var _csd_range_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./csd-range.js */ \"./component/csd-range.js\");\n/* harmony import */ var _csd_split_button_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./csd-split-button.js */ \"./component/csd-split-button.js\");\n/* harmony import */ var _csd_textarea_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./csd-textarea.js */ \"./component/csd-textarea.js\");\n/* harmony import */ var _csd_fab_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./csd-fab.js */ \"./component/csd-fab.js\");\n/* harmony import */ var _csd_navigation_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./csd-navigation.js */ \"./component/csd-navigation.js\");\n/* harmony import */ var _csd_modal_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./csd-modal.js */ \"./component/csd-modal.js\");\n/* harmony import */ var _csd_toast_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./csd-toast.js */ \"./component/csd-toast.js\");\n/* harmony import */ var _csd_reorder_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./csd-reorder.js */ \"./component/csd-reorder.js\");\n/* harmony import */ var _csd_list_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./csd-list.js */ \"./component/csd-list.js\");\n/* harmony import */ var _csd_splitter_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./csd-splitter.js */ \"./component/csd-splitter.js\");\n/* harmony import */ var _csd_popover_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./csd-popover.js */ \"./component/csd-popover.js\");\n/* harmony import */ var _csd_dropdown_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./csd-dropdown.js */ \"./component/csd-dropdown.js\");\n/* harmony import */ var _csd_stepper_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./csd-stepper.js */ \"./component/csd-stepper.js\");\n/* harmony import */ var _csd_tab_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./csd-tab.js */ \"./component/csd-tab.js\");\n/* harmony import */ var _csd_accordion_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./csd-accordion.js */ \"./component/csd-accordion.js\");\n/* harmony import */ var _csd_segment_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./csd-segment.js */ \"./component/csd-segment.js\");\n/* harmony import */ var _csd_menu_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./csd-menu.js */ \"./component/csd-menu.js\");\n/* harmony import */ var _csd_sidebar_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./csd-sidebar.js */ \"./component/csd-sidebar.js\");\n/* harmony import */ var _csd_toolbar_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./csd-toolbar.js */ \"./component/csd-toolbar.js\");\n/* harmony import */ var _csd_submenu_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./csd-submenu.js */ \"./component/csd-submenu.js\");\n// Form components\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// UI components\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://$CSD/./component/index.js?");

/***/ }),

/***/ "./csd-bundle.js":
/*!***********************!*\
  !*** ./csd-bundle.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   destroyBtn: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.destroyBtn),\n/* harmony export */   destroyFab: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.destroyFab),\n/* harmony export */   getCheckboxValues: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.getCheckboxValues),\n/* harmony export */   getRadioValue: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.getRadioValue),\n/* harmony export */   initCSDComponents: () => (/* reexport safe */ _csd_init_js__WEBPACK_IMPORTED_MODULE_36__[\"default\"]),\n/* harmony export */   initializeAccordion: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeAccordion),\n/* harmony export */   initializeBtn: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeBtn),\n/* harmony export */   initializeCheckbox: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeCheckbox),\n/* harmony export */   initializeConfirmDialog: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeConfirmDialog),\n/* harmony export */   initializeCustomSelect: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeCustomSelect),\n/* harmony export */   initializeDatepickers: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeDatepickers),\n/* harmony export */   initializeDropdown: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeDropdown),\n/* harmony export */   initializeEditor: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeEditor),\n/* harmony export */   initializeFab: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeFab),\n/* harmony export */   initializeList: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeList),\n/* harmony export */   initializeMask: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeMask),\n/* harmony export */   initializeMenu: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeMenu),\n/* harmony export */   initializeModal: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeModal),\n/* harmony export */   initializeNavigation: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeNavigation),\n/* harmony export */   initializeNumber: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeNumber),\n/* harmony export */   initializeOTP: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeOTP),\n/* harmony export */   initializePassword: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializePassword),\n/* harmony export */   initializePopover: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializePopover),\n/* harmony export */   initializeRadio: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeRadio),\n/* harmony export */   initializeRange: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeRange),\n/* harmony export */   initializeReorder: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeReorder),\n/* harmony export */   initializeSearchbar: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeSearchbar),\n/* harmony export */   initializeSegment: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeSegment),\n/* harmony export */   initializeSidebar: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeSidebar),\n/* harmony export */   initializeSplitButton: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeSplitButton),\n/* harmony export */   initializeSplitter: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeSplitter),\n/* harmony export */   initializeStepper: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeStepper),\n/* harmony export */   initializeSubmenu: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeSubmenu),\n/* harmony export */   initializeTab: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeTab),\n/* harmony export */   initializeTextArea: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeTextArea),\n/* harmony export */   initializeToast: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeToast),\n/* harmony export */   initializeToggle: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeToggle),\n/* harmony export */   initializeToggleButton: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeToggleButton),\n/* harmony export */   initializeToolbar: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.initializeToolbar),\n/* harmony export */   showAccordion: () => (/* reexport safe */ _component_index_js__WEBPACK_IMPORTED_MODULE_35__.showAccordion)\n/* harmony export */ });\n/* harmony import */ var _ssr_safe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ssr-safe.js */ \"./ssr-safe.js\");\n/* harmony import */ var _csd_lib_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csd-lib.js */ \"./csd-lib.js\");\n/* harmony import */ var _csd_lib_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_csd_lib_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _csd_utility_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./csd-utility.js */ \"./csd-utility.js\");\n/* harmony import */ var _csd_utility_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_csd_utility_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _component_csd_number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./component/csd-number.js */ \"./component/csd-number.js\");\n/* harmony import */ var _component_csd_select_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./component/csd-select.js */ \"./component/csd-select.js\");\n/* harmony import */ var _component_csd_datepicker_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./component/csd-datepicker.js */ \"./component/csd-datepicker.js\");\n/* harmony import */ var _component_csd_toggle_button_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./component/csd-toggle-button.js */ \"./component/csd-toggle-button.js\");\n/* harmony import */ var _component_csd_mask_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./component/csd-mask.js */ \"./component/csd-mask.js\");\n/* harmony import */ var _component_csd_checkbox_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./component/csd-checkbox.js */ \"./component/csd-checkbox.js\");\n/* harmony import */ var _component_csd_radio_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./component/csd-radio.js */ \"./component/csd-radio.js\");\n/* harmony import */ var _component_csd_otp_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./component/csd-otp.js */ \"./component/csd-otp.js\");\n/* harmony import */ var _component_csd_searchbar_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./component/csd-searchbar.js */ \"./component/csd-searchbar.js\");\n/* harmony import */ var _component_csd_toggle_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./component/csd-toggle.js */ \"./component/csd-toggle.js\");\n/* harmony import */ var _component_csd_editor_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./component/csd-editor.js */ \"./component/csd-editor.js\");\n/* harmony import */ var _component_csd_password_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./component/csd-password.js */ \"./component/csd-password.js\");\n/* harmony import */ var _component_csd_range_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./component/csd-range.js */ \"./component/csd-range.js\");\n/* harmony import */ var _component_csd_split_button_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./component/csd-split-button.js */ \"./component/csd-split-button.js\");\n/* harmony import */ var _component_csd_textarea_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./component/csd-textarea.js */ \"./component/csd-textarea.js\");\n/* harmony import */ var _component_csd_fab_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./component/csd-fab.js */ \"./component/csd-fab.js\");\n/* harmony import */ var _component_csd_navigation_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./component/csd-navigation.js */ \"./component/csd-navigation.js\");\n/* harmony import */ var _component_csd_modal_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./component/csd-modal.js */ \"./component/csd-modal.js\");\n/* harmony import */ var _component_csd_toast_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./component/csd-toast.js */ \"./component/csd-toast.js\");\n/* harmony import */ var _component_csd_reorder_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./component/csd-reorder.js */ \"./component/csd-reorder.js\");\n/* harmony import */ var _component_csd_list_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./component/csd-list.js */ \"./component/csd-list.js\");\n/* harmony import */ var _component_csd_splitter_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./component/csd-splitter.js */ \"./component/csd-splitter.js\");\n/* harmony import */ var _component_csd_popover_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./component/csd-popover.js */ \"./component/csd-popover.js\");\n/* harmony import */ var _component_csd_dropdown_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./component/csd-dropdown.js */ \"./component/csd-dropdown.js\");\n/* harmony import */ var _component_csd_stepper_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./component/csd-stepper.js */ \"./component/csd-stepper.js\");\n/* harmony import */ var _component_csd_tab_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./component/csd-tab.js */ \"./component/csd-tab.js\");\n/* harmony import */ var _component_csd_accordion_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./component/csd-accordion.js */ \"./component/csd-accordion.js\");\n/* harmony import */ var _component_csd_segment_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./component/csd-segment.js */ \"./component/csd-segment.js\");\n/* harmony import */ var _component_csd_menu_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./component/csd-menu.js */ \"./component/csd-menu.js\");\n/* harmony import */ var _component_csd_sidebar_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./component/csd-sidebar.js */ \"./component/csd-sidebar.js\");\n/* harmony import */ var _component_csd_toolbar_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./component/csd-toolbar.js */ \"./component/csd-toolbar.js\");\n/* harmony import */ var _component_csd_submenu_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./component/csd-submenu.js */ \"./component/csd-submenu.js\");\n/* harmony import */ var _component_index_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./component/index.js */ \"./component/index.js\");\n/* harmony import */ var _csd_init_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./csd-init.js */ \"./csd-init.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Importa prima il wrapper SSR-safe (che renderà $CSD disponibile anche in SSR)\n\n\n// Core components\n\n\n\n// Assicurati che $CSD sia disponibile globalmente in SSR\nif (typeof __webpack_require__.g !== 'undefined') {\n  __webpack_require__.g.$CSD = _ssr_safe_js__WEBPACK_IMPORTED_MODULE_0__.$CSD;\n}\n\n// Form components\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// UI components\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Import all components functions\n\n\n// Initialize all components\n\n\n// Create a bundle object with all exports\nvar csdBundle = _objectSpread({\n  $CSD: _ssr_safe_js__WEBPACK_IMPORTED_MODULE_0__.$CSD,\n  initCSDComponents: _csd_init_js__WEBPACK_IMPORTED_MODULE_36__[\"default\"]\n}, _component_index_js__WEBPACK_IMPORTED_MODULE_35__);\n\n// Make all functions available globally, ma solo in ambiente browser\nif (typeof window !== 'undefined') {\n  window.$CSD = _ssr_safe_js__WEBPACK_IMPORTED_MODULE_0__.$CSD;\n  window.initCSDComponents = _csd_init_js__WEBPACK_IMPORTED_MODULE_36__[\"default\"];\n\n  // Add all component functions to window\n  Object.keys(_component_index_js__WEBPACK_IMPORTED_MODULE_35__).forEach(function (key) {\n    window[key] = _component_index_js__WEBPACK_IMPORTED_MODULE_35__[key];\n  });\n\n  // Also add the full bundle as a single object\n  window.csdBundle = csdBundle;\n}\n\n// Export for module systems\nif ( true && module.exports) {\n  module.exports = csdBundle;\n} else if (typeof define === 'function' && __webpack_require__.amdO) {\n  define(function () {\n    return csdBundle;\n  });\n}\n\n// ES6 exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_ssr_safe_js__WEBPACK_IMPORTED_MODULE_0__.$CSD);\n\n\n\n//# sourceURL=webpack://$CSD/./csd-bundle.js?");

/***/ }),

/***/ "./csd-init.js":
/*!*********************!*\
  !*** ./csd-init.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   initCSDComponents: () => (/* binding */ initCSDComponents)\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./component/index.js\");\n/* harmony import */ var _csd_lib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csd-lib */ \"./csd-lib.js\");\n/* harmony import */ var _csd_lib__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_csd_lib__WEBPACK_IMPORTED_MODULE_1__);\n// Import all components from the component directory\n\n\n// Import all function/Events\n\n\nvar originalVal = _CSD_UTILS.prototype.val;\nfunction initCSDComponents() {\n  // Initialize searchbar components\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-searchbar-input:not(.csd-select-editable)\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeSearchbar)(this);\n  });\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-btn\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeBtn)(this);\n  });\n\n  // Initialize form components\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-select\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeCustomSelect)(this);\n  });\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-checkbox\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeCheckbox)(this);\n  });\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-radio\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeRadio)(this);\n  });\n\n  // Initialize password inputs\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)('input[type=\"password\"].csd-input').each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializePassword)(this);\n  });\n\n  // Initialize masked inputs\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\"input[data-mask].csd-input\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeMask)(this);\n  });\n\n  // Initialize number inputs\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-number\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeNumber)(this);\n  });\n\n  // Initialize textareas\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-textarea\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeTextArea)(this);\n  });\n\n  // Initialize datepickers\n  (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeDatepickers)();\n\n  // Reinitialize datepickers on content change\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(document).on(\"contentChanged\", function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeDatepickers)();\n  });\n\n  // Initialize range components\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-range\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeRange)(this);\n  });\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-knob\").each(function () {\n    initializeKnob(this);\n  });\n\n  // Initialize toggle components\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-toggle\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeToggle)(this);\n  });\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-toggle-button\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeToggleButton)(this);\n  });\n\n  // Initialize UI components\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-segment\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeSegment)(this);\n  });\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-tabs\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeTab)(this);\n  });\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-stepper-container\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeStepper)(this);\n  });\n\n  // Initialize menu components\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-menubar\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeMenu)(this);\n  });\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-mega-menu\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeMenu)(this);\n  });\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-toolbar\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeToolbar)(this);\n  });\n\n  // Initialize sidebar\n  (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeSidebar)();\n\n  // Initialize navigation elements\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-navigation\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeNavigation)(this);\n  });\n\n  // Initialize accordion elements\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-accordion\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeAccordion)(this);\n  });\n\n  // Handle csdClick=\"showAccordion(param)\" syntax\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\"[csdClick^='showAccordion']\").on(\"click\", function () {\n    var param = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(this).attr(\"csdClick\").replace(\"showAccordion(\", \"\").replace(\")\", \"\");\n    _component__WEBPACK_IMPORTED_MODULE_0__.showAccordion.call(this, param);\n  });\n\n  // Initialize dropdown elements\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-dropdown\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeDropdown)(this);\n  });\n\n  // Initialize toast elements\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-toast\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeToast)(this);\n  });\n\n  // Modal\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-modal\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeModal)(this);\n  });\n\n  // Confirm Dialog\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-modal-confirm\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeConfirmDialog)(this);\n  });\n\n  // Popover\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-popover\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializePopover)(this);\n  });\n\n  // Initialize splitter functionality\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-splitter\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeSplitter)(this);\n  });\n\n  // Initialize FABs\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-fab\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeFab)(this);\n  });\n\n  // Initialize list\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-list\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeList)(this);\n  });\n\n  // Initialize reorder\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-reorder\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeReorder)(this);\n  });\n\n  // Initialize global toast\n  var toastInstance = (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeToast)();\n  if (typeof window !== 'undefined') {\n    window.toast = toastInstance;\n  }\n\n  // Initialize all split buttons\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-split-button\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeSplitButton)(this);\n  });\n\n  // Initialize all editors\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-editor\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeEditor)(this);\n  });\n  if (!(0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-toast-container\").length) {\n    (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\"body\").append('<div class=\"csd-toast-container\"></div>');\n  }\n\n  // Toast buttons\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(document).on(\"click\", \".csd-btn-toast\", function () {\n    var type = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(this).data(\"type\");\n    var message = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(this).data(\"message\");\n    var $toast = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\"<div>\").addClass(\"csd-toast\").addClass(\"csd-toast-\".concat(type)).html(\"\\n                <div class=\\\"csd-toast-content\\\">\\n                    <ion-icon name=\\\"\".concat(getToastIcon(type), \"\\\"></ion-icon>\\n                    <span>\").concat(message, \"</span>\\n                </div>\\n                <button type=\\\"button\\\" class=\\\"csd-toast-close\\\">\\n                    <ion-icon name=\\\"close-outline\\\"></ion-icon>\\n                </button>\\n            \"));\n    var $container = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-toast-container\");\n    $container.append($toast);\n\n    // Show with animation\n    setTimeout(function () {\n      $toast.addClass(\"show\");\n    }, 100);\n\n    // Auto close after 3 seconds\n    var autoCloseTimeout = setTimeout(function () {\n      closeToast($toast);\n    }, 2500);\n\n    // Close button handler\n    $toast.find(\".csd-toast-close\").on(\"click\", function () {\n      clearTimeout(autoCloseTimeout);\n      closeToast($toast);\n    });\n  });\n  function closeToast($toast) {\n    $toast.removeClass(\"show\");\n    setTimeout(function () {\n      $toast.remove();\n    }, 300);\n  }\n  function getToastIcon(type) {\n    switch (type) {\n      case \"success\":\n        return \"checkmark-circle-outline\";\n      case \"warning\":\n        return \"warning-outline\";\n      case \"error\":\n        return \"alert-circle-outline\";\n      case \"info\":\n        return \"information-circle-outline\";\n      default:\n        return \"information-circle-outline\";\n    }\n  }\n\n  // Initialize modals and confirm dialogs\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-modal, .csd-modal-confirm\").each(function () {\n    (0,_component__WEBPACK_IMPORTED_MODULE_0__.initializeModal)(this);\n  });\n\n  // Modal and confirm dialog open buttons\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(document).on(\"click\", \".js-open-modal, .js-open-confirm\", function (e) {\n    e.preventDefault();\n    var targetId = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(this).data(\"target\");\n    var $modal = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(targetId);\n    if ($modal.length) {\n      $modal.show();\n      setTimeout(function () {\n        $modal.addClass(\"show\");\n      }, 50);\n    }\n  });\n\n  // Modal close buttons and overlay\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(document).on(\"click\", \".csd-modal-close, .csd-modal-overlay\", function (e) {\n    e.preventDefault();\n    var $modal = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(this).closest(\".csd-modal\");\n    $modal.removeClass(\"show\");\n  });\n\n  // Handle confirm dialog buttons\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(document).on(\"click\", \".csd-confirm-btn\", function (e) {\n    e.preventDefault();\n    var $modal = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(this).closest(\".csd-modal-confirm\");\n    if ($modal.length) {\n      console.log(\"Confirmed\");\n      $modal.removeClass(\"show\");\n      setTimeout(function () {\n        $modal.hide();\n      }, 300);\n    }\n  });\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(document).on(\"click\", \".csd-cancel-btn\", function (e) {\n    e.preventDefault();\n    var $modal = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(this).closest(\".csd-modal-confirm\");\n    if ($modal.length) {\n      console.log(\"Cancelled\");\n      $modal.removeClass(\"show\");\n      setTimeout(function () {\n        $modal.hide();\n      }, 300);\n    }\n  });\n\n  // Form submit handler\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".js-form-submit\").on(\"click\", function (e) {\n    e.preventDefault();\n    var $modal = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(this).closest(\".csd-modal\");\n    var $form = $modal.find(\"form\");\n\n    // Check form validity\n    if ($form[0].checkValidity()) {\n      // Collect form data\n      var formData = {};\n      $form.find(\".csd-form-control\").each(function () {\n        var $input = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(this);\n        formData[$input.attr(\"name\")] = $input.val();\n      });\n\n      // Handle form submission\n      console.log(\"Form data:\", formData);\n      if (typeof window !== 'undefined' && window.toast) {\n        window.toast.show(\"Dati salvati con successo!\", \"success\");\n      } else if (toastInstance) {\n        toastInstance.show(\"Dati salvati con successo!\", \"success\");\n      }\n\n      // Clear form and close modal\n      $form[0].reset();\n      $modal.removeClass(\"show\");\n    } else {\n      // Trigger HTML5 validation\n      $form[0].reportValidity();\n    }\n  });\n\n  // Handle escape key\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(document).on(\"keydown\", function (e) {\n    if (e.key === \"Escape\") {\n      var $modal = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(\".csd-modal.show\");\n      if ($modal.length) {\n        $modal.removeClass(\"show\");\n      }\n    }\n  });\n\n  // Previeni il redirect sui link # che non sono submenu o dropdown\n  (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(document).on(\"click\", 'a[href=\"#\"]', function (e) {\n    var $target = (0,_csd_lib__WEBPACK_IMPORTED_MODULE_1__.$CSD)(this);\n    if (!$target.closest(\".has-submenu\").length && !$target.closest(\".csd-dropdown-menu\").length) {\n      e.preventDefault();\n    }\n  });\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initCSDComponents);\n\n\n//# sourceURL=webpack://$CSD/./csd-init.js?");

/***/ }),

/***/ "./csd-lib.js":
/*!********************!*\
  !*** ./csd-lib.js ***!
  \********************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _readOnlyError(r) { throw new TypeError('\"' + r + '\" is read-only'); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * _CSD_UTILS Library - A lightweight library inspired by jQuery\n */\n// Define the core class\nvar _CSD_UTILS = /*#__PURE__*/function () {\n  function _CSD_UTILS(selector) {\n    _classCallCheck(this, _CSD_UTILS);\n    if (typeof selector === 'string') {\n      try {\n        // Handle HTML string creation like jQuery\n        if (selector.trim().startsWith('<') && selector.trim().endsWith('>')) {\n          var tempDiv = document.createElement('div');\n          tempDiv.innerHTML = selector.trim();\n          this.elements = [tempDiv.firstElementChild];\n        } else {\n          this.elements = Array.from(document.querySelectorAll(selector));\n        }\n      } catch (error) {\n        if (error instanceof DOMException && error.name === 'SyntaxError') {\n          var _tempDiv = document.createElement('div');\n          _tempDiv.innerHTML = selector.trim();\n          this.elements = [_tempDiv.firstElementChild];\n        } else {\n          throw error;\n        }\n      }\n    } else if (selector instanceof Node) {\n      this.elements = [selector];\n    } else if (selector instanceof NodeList || Array.isArray(selector)) {\n      this.elements = Array.from(selector);\n    } else if (selector instanceof _CSD_UTILS) {\n      this.elements = selector.elements;\n    } else {\n      this.elements = [];\n    }\n    return new Proxy(this, {\n      get: function get(target, prop) {\n        if (prop === 'length') {\n          return target.elements.length;\n        }\n        if (!isNaN(prop)) {\n          return target.elements[prop];\n        }\n        return target[prop];\n      }\n    });\n  }\n  return _createClass(_CSD_UTILS, [{\n    key: \"_updateElements\",\n    value: function _updateElements() {\n      // Update elements array with current state of DOM elements\n      this.elements = this.elements.map(function (el) {\n        // If element is no longer in DOM, return null\n        return new _CSD_UTILS(el).elements[0] || null;\n      }).filter(function (el) {\n        return el !== null;\n      }); // Remove any null elements\n      return this;\n    }\n\n    // ATTRIBUTES\n  }, {\n    key: \"addClass\",\n    value: function addClass(className) {\n      return this.each(function (el) {\n        el.classList.add(className);\n      })._updateElements();\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {\n      return this.each(function (el) {\n        el.classList.remove(className);\n      })._updateElements();\n    }\n  }, {\n    key: \"toggleClass\",\n    value: function toggleClass(className) {\n      var condition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      return this.each(function (el) {\n        if (condition === undefined) {\n          el.classList.toggle(className);\n        } else {\n          el.classList.toggle(className, condition);\n        }\n      })._updateElements();\n    }\n  }, {\n    key: \"attr\",\n    value: function attr(attribute, value) {\n      if (value === undefined) {\n        var _this$elements$;\n        return (_this$elements$ = this.elements[0]) === null || _this$elements$ === void 0 ? void 0 : _this$elements$.getAttribute(attribute);\n      } else {\n        return this.each(function (el) {\n          el.setAttribute(attribute, value);\n        })._updateElements();\n      }\n    }\n  }, {\n    key: \"removeAttr\",\n    value: function removeAttr(attribute) {\n      return this.each(function (el) {\n        el.removeAttribute(attribute);\n      })._updateElements();\n    }\n  }, {\n    key: \"prop\",\n    value: function prop(property, value) {\n      if (value === undefined) {\n        var element = this.elements[0];\n        if (!element) return undefined;\n\n        // Handle boolean properties\n        if (typeof element[property] === 'boolean') {\n          return element[property];\n        }\n        return element[property];\n      }\n      return this.each(function (el) {\n        // Handle special cases for boolean attributes\n        if (property === 'checked' || property === 'selected' || property === 'disabled' || property === 'readonly') {\n          if (value === true || value === 'true') {\n            el.setAttribute(property, '');\n          } else {\n            el.removeAttribute(property);\n          }\n        }\n\n        // Set the property\n        el[property] = value;\n\n        // For readonly, also set the attribute to ensure it works in all browsers\n        if (property === 'readOnly') {\n          if (value === true || value === 'true') {\n            el.setAttribute('readonly', '');\n          } else {\n            el.removeAttribute('readonly');\n          }\n        }\n      })._updateElements();\n    }\n  }, {\n    key: \"removeProp\",\n    value: function removeProp(property) {\n      return this.each(function (el) {\n        delete el[property];\n      })._updateElements();\n    }\n  }, {\n    key: \"hasClass\",\n    value: function hasClass(className) {\n      var _this$elements$2;\n      return ((_this$elements$2 = this.elements[0]) === null || _this$elements$2 === void 0 ? void 0 : _this$elements$2.classList.contains(className)) || false;\n    }\n\n    // COLLECTION\n  }, {\n    key: \"each\",\n    value: function each(callback) {\n      this.elements.forEach(function (el, index) {\n        callback.call(el, el, index);\n      });\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(selector) {\n      var newElements = document.querySelectorAll(selector);\n      this.elements = [].concat(_toConsumableArray(this.elements), _toConsumableArray(newElements));\n      return this;\n    }\n  }, {\n    key: \"eq\",\n    value: function eq(index) {\n      return new _CSD_UTILS(this.elements[index]);\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.eq(0);\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      return this.eq(this.elements.length - 1);\n    }\n  }, {\n    key: \"get\",\n    value: function get(index) {\n      return this.elements[index];\n    }\n  }, {\n    key: \"index\",\n    value: function index() {\n      var element = this.elements[0];\n      return element ? Array.from(element.parentNode.children).indexOf(element) : -1;\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(selectorOrCallback) {\n      var filtered = this.elements.filter(function (el) {\n        if (typeof selectorOrCallback === 'function') {\n          return selectorOrCallback.call(el, el);\n        } else {\n          // Handle :visible pseudo-selector\n          if (selectorOrCallback === ':visible') {\n            // Verifica che siamo in un ambiente browser\n            if (typeof window !== 'undefined') {\n              var style = window.getComputedStyle(el);\n              return style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0' && el.offsetWidth > 0 && el.offsetHeight > 0;\n            }\n            return el.offsetWidth > 0 && el.offsetHeight > 0; // Fallback basic check\n          }\n          // Handle :hidden pseudo-selector\n          if (selectorOrCallback === ':hidden') {\n            // Verifica che siamo in un ambiente browser\n            if (typeof window !== 'undefined') {\n              var _style = window.getComputedStyle(el);\n              return _style.display === 'none' || _style.visibility === 'hidden' || _style.opacity === '0' || el.offsetWidth === 0 || el.offsetHeight === 0;\n            }\n            return el.offsetWidth === 0 || el.offsetHeight === 0; // Fallback basic check\n          }\n          // Handle complex selectors like [selected][value=\"\"]\n          if (selectorOrCallback.includes('[')) {\n            var attributes = selectorOrCallback.match(/\\[(.*?)\\]/g);\n            return attributes.every(function (attr) {\n              var _attr$slice$split = attr.slice(1, -1).split('='),\n                _attr$slice$split2 = _slicedToArray(_attr$slice$split, 2),\n                name = _attr$slice$split2[0],\n                value = _attr$slice$split2[1];\n              if (value) {\n                // Remove quotes if present\n                var cleanValue = value.replace(/['\"]/g, '');\n                return el.getAttribute(name) === cleanValue;\n              }\n              return el.hasAttribute(name);\n            });\n          }\n          return el.matches(selectorOrCallback);\n        }\n      });\n      return new _CSD_UTILS(filtered);\n    }\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      return this.elements.map(callback);\n    }\n  }, {\n    key: \"slice\",\n    value: function slice(start, end) {\n      return new _CSD_UTILS(this.elements.slice(start, end));\n    }\n\n    // CSS\n  }, {\n    key: \"css\",\n    value: function css(property, value) {\n      if (_typeof(property) === 'object') {\n        return this.each(function (el) {\n          Object.assign(el.style, property);\n        });\n      }\n      if (value === undefined) {\n        var el = this.elements[0];\n        if (!el) return ''; // Return empty string for non-existent elements\n        if (typeof window !== 'undefined') {\n          return window.getComputedStyle(el)[property] || '';\n        }\n        return el.style[property] || ''; // Fallback per SSR\n      }\n      return this.each(function (el) {\n        el.style[property] = value;\n      });\n    }\n\n    // DATA\n  }, {\n    key: \"data\",\n    value: function data(key, value) {\n      // Convert key to data-* format if needed\n      var dataKey = key.startsWith('data-') ? key : \"data-\".concat(key);\n      if (value === undefined) {\n        var element = this.elements[0];\n        if (!element) return undefined;\n\n        // Get the data attribute value\n        var attrValue = element.getAttribute(dataKey);\n\n        // Try to parse the value if it looks like JSON\n        if (attrValue) {\n          try {\n            // Handle special cases first\n            if (attrValue.toLowerCase() === 'true') return true;\n            if (attrValue.toLowerCase() === 'false') return false;\n            if (!isNaN(attrValue)) return Number(attrValue);\n            return JSON.parse(attrValue);\n          } catch (e) {\n            // If parsing fails, return the raw string\n            return attrValue;\n          }\n        }\n        return undefined;\n      }\n\n      // Setting data\n      return this.each(function (el) {\n        if (value === null) {\n          el.removeAttribute(dataKey);\n        } else {\n          var dataValue = _typeof(value) === 'object' ? JSON.stringify(value) : value;\n          el.setAttribute(dataKey, dataValue);\n        }\n      });\n    }\n\n    // DIMENSIONS\n  }, {\n    key: \"outerWidth\",\n    value: function outerWidth() {\n      var _this$elements$3;\n      return ((_this$elements$3 = this.elements[0]) === null || _this$elements$3 === void 0 ? void 0 : _this$elements$3.offsetWidth) || 0;\n    }\n  }, {\n    key: \"outerHeight\",\n    value: function outerHeight() {\n      var includeMargin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var el = this.elements[0];\n      if (!el) return 0;\n      var height = el.offsetHeight;\n      if (includeMargin) {\n        var computedStyle = window.getComputedStyle(el);\n        height += parseFloat(computedStyle.marginTop) + parseFloat(computedStyle.marginBottom);\n      }\n      return height;\n    }\n  }, {\n    key: \"height\",\n    value: function height() {\n      var _this$elements$4;\n      return (_this$elements$4 = this.elements[0]) === null || _this$elements$4 === void 0 ? void 0 : _this$elements$4.offsetHeight;\n    }\n  }, {\n    key: \"width\",\n    value: function width() {\n      var _this$elements$5;\n      return (_this$elements$5 = this.elements[0]) === null || _this$elements$5 === void 0 ? void 0 : _this$elements$5.offsetWidth;\n    }\n  }, {\n    key: \"innerHeight\",\n    value: function innerHeight() {\n      var _this$elements$6;\n      return (_this$elements$6 = this.elements[0]) === null || _this$elements$6 === void 0 ? void 0 : _this$elements$6.clientHeight;\n    }\n  }, {\n    key: \"innerWidth\",\n    value: function innerWidth() {\n      var _this$elements$7;\n      return (_this$elements$7 = this.elements[0]) === null || _this$elements$7 === void 0 ? void 0 : _this$elements$7.clientWidth;\n    }\n\n    // EFFECTS\n  }, {\n    key: \"show\",\n    value: function show() {\n      return this.each(function (el) {\n        el.style.display = '';\n      })._updateElements();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      return this.each(function (el) {\n        el.style.display = 'none';\n      })._updateElements();\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(force) {\n      return this.each(function (el) {\n        var style = window.getComputedStyle(el);\n        var isHidden = style.display === 'none';\n        if (force === undefined) {\n          // Se non c'è force, inverti lo stato corrente\n          el.style.display = isHidden ? '' : 'none';\n        } else {\n          // Se force è true, mostra l'elemento\n          // Se force è false, nascondi l'elemento\n          el.style.display = force ? '' : 'none';\n        }\n      })._updateElements();\n    }\n\n    // EVENTS\n  }, {\n    key: \"on\",\n    value: function on(event, selectorOrCallback, callback) {\n      if (typeof selectorOrCallback === 'string') {\n        var selector = selectorOrCallback;\n        return this.each(function (el) {\n          var handler = function handler(e) {\n            var matches = el.querySelectorAll(selector);\n            var target = e.target;\n            var matched = false;\n\n            // Check if the target or any of its parents match the selector\n            var currentElement = target;\n            while (currentElement && currentElement !== el) {\n              if (Array.from(matches).includes(currentElement)) {\n                matched = true;\n                break;\n              }\n              currentElement = currentElement.parentElement;\n            }\n            if (matched) {\n              callback.call(currentElement, e);\n            }\n          };\n\n          // Store the handler reference for potential removal\n          if (!el._eventHandlers) el._eventHandlers = {};\n          if (!el._eventHandlers[event]) el._eventHandlers[event] = [];\n          el._eventHandlers[event].push({\n            selector: selector,\n            handler: handler,\n            callback: callback\n          });\n          el.addEventListener(event, handler);\n        })._updateElements();\n      } else {\n        var _callback = selectorOrCallback;\n        return this.each(function (el) {\n          // Store the handler reference for potential removal\n          if (!el._eventHandlers) el._eventHandlers = {};\n          if (!el._eventHandlers[event]) el._eventHandlers[event] = [];\n          el._eventHandlers[event].push({\n            handler: _callback,\n            callback: _callback\n          });\n          el.addEventListener(event, _callback);\n        })._updateElements();\n      }\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, callback) {\n      return this.each(function (el) {\n        if (el._eventHandlers && el._eventHandlers[event]) {\n          el._eventHandlers[event].forEach(function (item) {\n            if (!callback || item.callback === callback) {\n              el.removeEventListener(event, item.handler || item.callback);\n            }\n          });\n          if (!callback) {\n            delete el._eventHandlers[event];\n          } else {\n            el._eventHandlers[event] = el._eventHandlers[event].filter(function (item) {\n              return item.callback !== callback;\n            });\n          }\n        }\n      })._updateElements();\n    }\n  }, {\n    key: \"one\",\n    value: function one(event, callback) {\n      return this.each(function (el) {\n        var _oneTimeCallback = function oneTimeCallback(e) {\n          callback(e);\n          el.removeEventListener(event, _oneTimeCallback);\n        };\n        el.addEventListener(event, _oneTimeCallback);\n      })._updateElements();\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(event) {\n      if (typeof event === 'string') {\n        var evt = new Event(event);\n        return this.each(function (el) {\n          el.dispatchEvent(evt);\n        })._updateElements();\n      }\n\n      // Handle custom event object\n      var customEvent = new CustomEvent(event.type, {\n        detail: event,\n        bubbles: true,\n        cancelable: true\n      });\n      return this.each(function (el) {\n        el.dispatchEvent(customEvent);\n      })._updateElements();\n    }\n\n    // EVENTS\n  }, {\n    key: \"click\",\n    value: function click(callback) {\n      if (!callback) {\n        // Se non c'è callback, simula un click\n        return this.each(function (el) {\n          el.click();\n        })._updateElements();\n      }\n      return this.on('click', function (e) {\n        // Preserva il contesto this e passa l'evento e\n        callback.call(this, e);\n      })._updateElements();\n    }\n  }, {\n    key: \"hover\",\n    value: function hover(mouseEnterCallback, mouseLeaveCallback) {\n      return this.on('mouseenter', function (e) {\n        if (mouseEnterCallback) mouseEnterCallback.call(this, e);\n      }).on('mouseleave', function (e) {\n        if (mouseLeaveCallback) mouseLeaveCallback.call(this, e);\n      })._updateElements();\n    }\n  }, {\n    key: \"ready\",\n    value: function ready(callback) {\n      if (document.readyState !== 'loading') {\n        callback();\n      } else {\n        document.addEventListener('DOMContentLoaded', callback);\n      }\n      return this;\n    }\n\n    // FORMS\n  }, {\n    key: \"focus\",\n    value: function focus(handler) {\n      if (handler === undefined) {\n        // Se non c'è handler, imposta il focus sul primo elemento\n        if (this.elements[0]) {\n          this.elements[0].focus();\n        }\n        return this;\n      }\n\n      // Altrimenti aggiungi l'event handler per il focus\n      return this.on('focus', handler);\n    }\n  }, {\n    key: \"blur\",\n    value: function blur(handler) {\n      if (handler === undefined) {\n        // Se non c'è handler, rimuovi il focus dal primo elemento\n        if (this.elements[0]) {\n          this.elements[0].blur();\n        }\n        return this;\n      }\n\n      // Altrimenti aggiungi l'event handler per il blur\n      return this.on('blur', handler);\n    }\n  }, {\n    key: \"val\",\n    value: function val(value) {\n      if (value === undefined) {\n        var el = this.elements[0];\n        if (!el) return undefined;\n        if (el.type === 'select-multiple') {\n          var selectedOptions = Array.from(el.selectedOptions).map(function (option) {\n            return option.value;\n          }).filter(function (value) {\n            return value !== \"\";\n          }); // Filtro i valori vuoti\n          return selectedOptions;\n        }\n        return el.value;\n      } else {\n        return this.each(function (el) {\n          if (el.type === 'select-multiple' && Array.isArray(value)) {\n            Array.from(el.options).forEach(function (option) {\n              option.selected = value.includes(option.value);\n            });\n          } else {\n            el.value = value;\n          }\n        })._updateElements();\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      if (!this.elements[0] || this.elements[0].nodeName !== 'FORM') return '';\n      var formData = new FormData(this.elements[0]);\n      return new URLSearchParams(formData).toString();\n    }\n\n    // MANIPULATION\n  }, {\n    key: \"html\",\n    value: function html(content) {\n      if (content === undefined) {\n        var _this$elements$8;\n        return (_this$elements$8 = this.elements[0]) === null || _this$elements$8 === void 0 ? void 0 : _this$elements$8.innerHTML;\n      } else {\n        return this.each(function (el) {\n          el.innerHTML = content;\n        })._updateElements();\n      }\n    }\n  }, {\n    key: \"text\",\n    value: function text(content) {\n      if (content === undefined) {\n        var _this$elements$9;\n        return (_this$elements$9 = this.elements[0]) === null || _this$elements$9 === void 0 ? void 0 : _this$elements$9.textContent;\n      } else {\n        return this.each(function (el) {\n          el.textContent = content;\n        })._updateElements();\n      }\n    }\n  }, {\n    key: \"append\",\n    value: function append(content) {\n      if (!content) return this;\n      var appendContent = function appendContent(el, content) {\n        if (typeof content === 'string') {\n          el.insertAdjacentHTML('beforeend', content);\n          return el.lastElementChild;\n        } else if (content instanceof Node) {\n          var clone = content.cloneNode(true);\n          el.appendChild(clone);\n          return clone;\n        }\n        return null;\n      };\n      var newElements = [];\n      this.each(function (el) {\n        if (content instanceof _CSD_UTILS) {\n          content.each(function (contentEl) {\n            var newEl = appendContent(el, contentEl);\n            if (newEl) newElements.push(newEl);\n          });\n        } else {\n          var newEl = appendContent(el, content);\n          if (newEl) newElements.push(newEl);\n        }\n      });\n\n      // Se content è un _CSD_UTILS, aggiorna i suoi elementi\n      if (content instanceof _CSD_UTILS) {\n        content.elements = newElements;\n      }\n      return this._updateElements();\n    }\n  }, {\n    key: \"prepend\",\n    value: function prepend(content) {\n      if (!content) return this;\n      var newElements = [];\n      this.each(function (el) {\n        if (typeof content === 'string') {\n          el.insertAdjacentHTML('afterbegin', content);\n          newElements.push(el.firstElementChild);\n        } else if (content instanceof _CSD_UTILS) {\n          content.each(function (contentEl) {\n            var clone = contentEl.cloneNode(true);\n            el.prepend(clone);\n            newElements.push(clone);\n          });\n        } else if (content instanceof Node) {\n          var clone = content.cloneNode(true);\n          el.prepend(clone);\n          newElements.push(clone);\n        }\n      });\n\n      // Se content è un _CSD_UTILS, aggiorna i suoi elementi\n      if (content instanceof _CSD_UTILS) {\n        content.elements = newElements;\n      }\n      return this._updateElements();\n    }\n  }, {\n    key: \"before\",\n    value: function before(content) {\n      if (!content) return this;\n      var newElements = [];\n      this.each(function (el) {\n        if (typeof content === 'string') {\n          el.insertAdjacentHTML('beforebegin', content);\n          newElements.push(el.previousElementSibling);\n        } else if (content instanceof _CSD_UTILS) {\n          content.each(function (contentEl) {\n            var clone = contentEl.cloneNode(true);\n            el.before(clone);\n            newElements.push(clone);\n          });\n        } else if (content instanceof Node) {\n          var clone = content.cloneNode(true);\n          el.before(clone);\n          newElements.push(clone);\n        }\n      });\n\n      // Se content è un _CSD_UTILS, aggiorna i suoi elementi\n      if (content instanceof _CSD_UTILS) {\n        content.elements = newElements;\n      }\n      return this._updateElements();\n    }\n  }, {\n    key: \"after\",\n    value: function after(content) {\n      if (!content) return this;\n      var newElements = [];\n      this.each(function (el) {\n        if (typeof content === 'string') {\n          el.insertAdjacentHTML('afterend', content);\n          newElements.push(el.nextElementSibling);\n        } else if (content instanceof _CSD_UTILS) {\n          content.each(function (contentEl) {\n            var clone = contentEl.cloneNode(true);\n            el.after(clone);\n            newElements.push(clone);\n          });\n        } else if (content instanceof Node) {\n          var clone = content.cloneNode(true);\n          el.after(clone);\n          newElements.push(clone);\n        }\n      });\n\n      // Se content è un _CSD_UTILS, aggiorna i suoi elementi\n      if (content instanceof _CSD_UTILS) {\n        content.elements = newElements;\n      }\n      return this._updateElements();\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      return this.each(function (el) {\n        el.innerHTML = '';\n      })._updateElements();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      this.each(function (el) {\n        el.remove();\n      });\n      return this._updateElements();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new _CSD_UTILS(this.elements.map(function (el) {\n        return el.cloneNode(true);\n      }));\n    }\n  }, {\n    key: \"wrap\",\n    value: function wrap(html) {\n      return this.each(function (el) {\n        var wrapper = document.createElement('div');\n        if (html instanceof _CSD_UTILS) {\n          var _html$elements$;\n          wrapper.innerHTML = ((_html$elements$ = html.elements[0]) === null || _html$elements$ === void 0 ? void 0 : _html$elements$.outerHTML) || '';\n        } else {\n          wrapper.innerHTML = html;\n        }\n        var wrapperElement = wrapper.firstElementChild;\n        if (wrapperElement) {\n          el.parentNode.insertBefore(wrapperElement, el);\n          wrapperElement.appendChild(el);\n        }\n      })._updateElements();\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return this.each(function (el) {\n        var parent = el.parentNode;\n        if (parent && parent.nodeName !== 'BODY') {\n          parent.replaceWith.apply(parent, _toConsumableArray(parent.childNodes));\n        }\n      })._updateElements();\n    }\n  }, {\n    key: \"wrapInner\",\n    value: function wrapInner(html) {\n      return this.each(function (el) {\n        var wrapper = document.createElement('div');\n        wrapper.innerHTML = html;\n        while (el.firstChild) {\n          wrapper.firstElementChild.appendChild(el.firstChild);\n        }\n        el.appendChild(wrapper.firstElementChild);\n      })._updateElements();\n    }\n  }, {\n    key: \"wrapAll\",\n    value: function wrapAll(html) {\n      if (this.elements.length === 0) return this;\n      var wrapper = document.createElement('div');\n      wrapper.innerHTML = html;\n      var wrapElement = wrapper.firstElementChild;\n      this.elements[0].parentNode.insertBefore(wrapElement, this.elements[0]);\n      this.each(function (el) {\n        wrapElement.appendChild(el);\n      });\n      return this._updateElements();\n    }\n\n    // SCROLL\n  }, {\n    key: \"scrollTop\",\n    value: function scrollTop(value) {\n      // Se l'elemento è window, gestisci lo scroll della finestra\n      if (this.elements[0] === window) {\n        if (value === undefined) {\n          return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n        }\n        window.scrollTo({\n          top: value,\n          behavior: 'smooth'\n        });\n        return this;\n      }\n\n      // Altrimenti gestisci lo scroll dell'elemento\n      if (value === undefined) {\n        var _this$elements$10;\n        return ((_this$elements$10 = this.elements[0]) === null || _this$elements$10 === void 0 ? void 0 : _this$elements$10.scrollTop) || 0;\n      }\n      return this.each(function (el) {\n        el.scrollTop = value;\n      })._updateElements();\n    }\n\n    // OFFSET\n  }, {\n    key: \"offset\",\n    value: function offset() {\n      if (!this.elements[0]) return;\n      var rect = this.elements[0].getBoundingClientRect();\n      if (typeof window !== 'undefined') {\n        return {\n          top: rect.top + window.scrollY,\n          left: rect.left + window.scrollX\n        };\n      }\n      // Fallback per SSR\n      return {\n        top: rect.top,\n        left: rect.left\n      };\n    }\n  }, {\n    key: \"position\",\n    value: function position() {\n      if (!this.elements[0]) return;\n      return {\n        top: this.elements[0].offsetTop,\n        left: this.elements[0].offsetLeft\n      };\n    }\n  }, {\n    key: \"offsetParent\",\n    value: function offsetParent() {\n      var _this$elements$11;\n      return new _CSD_UTILS((_this$elements$11 = this.elements[0]) === null || _this$elements$11 === void 0 ? void 0 : _this$elements$11.offsetParent);\n    }\n\n    // TRAVERSAL\n  }, {\n    key: \"children\",\n    value: function children() {\n      var _this$elements$12;\n      return new _CSD_UTILS((_this$elements$12 = this.elements[0]) === null || _this$elements$12 === void 0 ? void 0 : _this$elements$12.children);\n    }\n  }, {\n    key: \"parent\",\n    value: function parent() {\n      var _this$elements$13;\n      return new _CSD_UTILS((_this$elements$13 = this.elements[0]) === null || _this$elements$13 === void 0 ? void 0 : _this$elements$13.parentNode);\n    }\n  }, {\n    key: \"parents\",\n    value: function parents() {\n      var _this$elements$14;\n      var parents = [];\n      var parent = (_this$elements$14 = this.elements[0]) === null || _this$elements$14 === void 0 ? void 0 : _this$elements$14.parentNode;\n      while (parent && parent.nodeName !== 'HTML') {\n        parents.push(parent);\n        parent = parent.parentNode;\n      }\n      return new _CSD_UTILS(parents);\n    }\n  }, {\n    key: \"parentsUntil\",\n    value: function parentsUntil(selector) {\n      var _this$elements$15;\n      var parents = [];\n      var parent = (_this$elements$15 = this.elements[0]) === null || _this$elements$15 === void 0 ? void 0 : _this$elements$15.parentNode;\n      while (parent && !parent.matches(selector)) {\n        parents.push(parent);\n        parent = parent.parentNode;\n      }\n      return new _CSD_UTILS(parents);\n    }\n  }, {\n    key: \"closest\",\n    value: function closest(selector) {\n      var el = this.elements[0];\n      if (!el) return new _CSD_UTILS([]);\n      var closest = el.closest(selector);\n      return closest ? new _CSD_UTILS([closest]) : new _CSD_UTILS([]);\n    }\n  }, {\n    key: \"contents\",\n    value: function contents() {\n      var _this$elements$16;\n      return new _CSD_UTILS((_this$elements$16 = this.elements[0]) === null || _this$elements$16 === void 0 ? void 0 : _this$elements$16.childNodes);\n    }\n  }, {\n    key: \"find\",\n    value: function find(selector) {\n      var _this$elements$20;\n      if (selector === ':visible') {\n        var _this$elements$17;\n        // Gestisci il selettore :visible\n        var allElements = (_this$elements$17 = this.elements[0]) === null || _this$elements$17 === void 0 ? void 0 : _this$elements$17.querySelectorAll('*');\n        if (!allElements) return new _CSD_UTILS([]);\n        var visibleElements = Array.from(allElements).filter(function (el) {\n          // Verifica compatibilità SSR\n          if (typeof window !== 'undefined') {\n            var style = window.getComputedStyle(el);\n            return style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0' && el.offsetWidth > 0 && el.offsetHeight > 0;\n          }\n          return el.offsetWidth > 0 && el.offsetHeight > 0; // Fallback basic check\n        });\n        return new _CSD_UTILS(visibleElements);\n      } else if (selector === ':hidden') {\n        var _this$elements$18;\n        // Gestisci il selettore :hidden\n        var _allElements = (_this$elements$18 = this.elements[0]) === null || _this$elements$18 === void 0 ? void 0 : _this$elements$18.querySelectorAll('*');\n        if (!_allElements) return new _CSD_UTILS([]);\n        var hiddenElements = Array.from(_allElements).filter(function (el) {\n          // Verifica compatibilità SSR\n          if (typeof window !== 'undefined') {\n            var style = window.getComputedStyle(el);\n            return style.display === 'none' || style.visibility === 'hidden' || style.opacity === '0' || el.offsetWidth === 0 || el.offsetHeight === 0;\n          }\n          return el.offsetWidth === 0 || el.offsetHeight === 0; // Fallback basic check\n        });\n        return new _CSD_UTILS(hiddenElements);\n      } else if (selector === ':selected') {\n        // Gestisci il selettore :selected per gli elementi option\n        var selectedElements = this.elements.reduce(function (acc, el) {\n          var selected = el.querySelectorAll('option').length > 0 ? Array.from(el.querySelectorAll('option')).filter(function (opt) {\n            return opt.selected;\n          }) : [];\n          return [].concat(_toConsumableArray(acc), _toConsumableArray(selected));\n        }, []);\n        return new _CSD_UTILS(selectedElements);\n      } else if (selector.includes(':visible') || selector.includes(':hidden') || selector.includes(':selected') || selector.includes(':checked')) {\n        var _this$elements$19;\n        // Gestisci selettori combinati (es: .my-class:visible)\n        var baseSelector = selector.replace(/:visible|:hidden|:selected/g, '');\n        var isPseudoVisible = selector.includes(':visible');\n        var isPseudoHidden = selector.includes(':hidden');\n        var isPseudoSelected = selector.includes(':selected');\n        var elements = (_this$elements$19 = this.elements[0]) === null || _this$elements$19 === void 0 ? void 0 : _this$elements$19.querySelectorAll(baseSelector);\n        if (!elements) return new _CSD_UTILS([]);\n        var filteredElements = Array.from(elements).filter(function (el) {\n          if (isPseudoSelected && el.tagName.toLowerCase() === 'option') {\n            return el.selected;\n          }\n          var style = window.getComputedStyle(el);\n          var elementIsVisible = style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0' && el.offsetWidth > 0 && el.offsetHeight > 0;\n          if (isPseudoVisible) return elementIsVisible;\n          if (isPseudoHidden) return !elementIsVisible;\n          return true;\n        });\n        return new _CSD_UTILS(filteredElements);\n      }\n\n      // Per tutti gli altri selettori, usa querySelectorAll standard\n      return new _CSD_UTILS((_this$elements$20 = this.elements[0]) === null || _this$elements$20 === void 0 ? void 0 : _this$elements$20.querySelectorAll(selector));\n    }\n  }, {\n    key: \"siblings\",\n    value: function siblings() {\n      var _this$elements$21,\n        _this = this;\n      var siblings = Array.from(((_this$elements$21 = this.elements[0]) === null || _this$elements$21 === void 0 || (_this$elements$21 = _this$elements$21.parentNode) === null || _this$elements$21 === void 0 ? void 0 : _this$elements$21.children) || []).filter(function (sibling) {\n        return sibling !== _this.elements[0];\n      });\n      return new _CSD_UTILS(siblings);\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var _this$elements$22;\n      return new _CSD_UTILS((_this$elements$22 = this.elements[0]) === null || _this$elements$22 === void 0 ? void 0 : _this$elements$22.nextElementSibling);\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      var _this$elements$23;\n      return new _CSD_UTILS((_this$elements$23 = this.elements[0]) === null || _this$elements$23 === void 0 ? void 0 : _this$elements$23.previousElementSibling);\n    }\n  }, {\n    key: \"nextAll\",\n    value: function nextAll() {\n      var _this$elements$24;\n      var nextSiblings = [];\n      var sibling = (_this$elements$24 = this.elements[0]) === null || _this$elements$24 === void 0 ? void 0 : _this$elements$24.nextElementSibling;\n      while (sibling) {\n        nextSiblings.push(sibling);\n        sibling = sibling.nextElementSibling;\n      }\n      return new _CSD_UTILS(nextSiblings);\n    }\n  }, {\n    key: \"prevAll\",\n    value: function prevAll() {\n      var _this$elements$25;\n      var prevSiblings = [];\n      var sibling = (_this$elements$25 = this.elements[0]) === null || _this$elements$25 === void 0 ? void 0 : _this$elements$25.previousElementSibling;\n      while (sibling) {\n        prevSiblings.push(sibling);\n        sibling = sibling.previousElementSibling;\n      }\n      return new _CSD_UTILS(prevSiblings);\n    }\n  }, {\n    key: \"nextUntil\",\n    value: function nextUntil(selector) {\n      var _this$elements$26;\n      var nextSiblings = [];\n      var sibling = (_this$elements$26 = this.elements[0]) === null || _this$elements$26 === void 0 ? void 0 : _this$elements$26.nextElementSibling;\n      while (sibling && !sibling.matches(selector)) {\n        nextSiblings.push(sibling);\n        sibling = sibling.nextElementSibling;\n      }\n      return new _CSD_UTILS(nextSiblings);\n    }\n  }, {\n    key: \"prevUntil\",\n    value: function prevUntil(selector) {\n      var _this$elements$27;\n      var prevSiblings = [];\n      var sibling = (_this$elements$27 = this.elements[0]) === null || _this$elements$27 === void 0 ? void 0 : _this$elements$27.previousElementSibling;\n      while (sibling && !sibling.matches(selector)) {\n        prevSiblings.push(sibling);\n        sibling = sibling.previousElementSibling;\n      }\n      return new _CSD_UTILS(prevSiblings);\n    }\n  }, {\n    key: \"is\",\n    value: function is(selector) {\n      // Se non ci sono elementi o il selettore è vuoto, ritorna false\n      if (!this.elements[0] || !selector) return false;\n\n      // Se il selettore è una funzione, la esegue per ogni elemento\n      if (typeof selector === 'function') {\n        return this.elements.some(function (el, i) {\n          return selector.call(el, i, el);\n        });\n      }\n\n      // Se il selettore è un oggetto _CSD_UTILS\n      if (selector instanceof _CSD_UTILS) {\n        return this.elements.some(function (el) {\n          return selector.elements.includes(el);\n        });\n      }\n\n      // Se il selettore è un elemento DOM\n      if (selector.nodeType) {\n        return this.elements.includes(selector);\n      }\n\n      // Se il selettore è :visible o :hidden\n      if (selector === ':visible' || selector === ':hidden') {\n        var isVisible = function isVisible(el) {\n          if (!el) return false;\n\n          // Verifica compatibilità SSR\n          if (typeof window !== 'undefined') {\n            var style = window.getComputedStyle(el);\n            var isVisibleStyle = style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0' && el.offsetWidth > 0 && el.offsetHeight > 0;\n            return selector === ':visible' ? isVisibleStyle : !isVisibleStyle;\n          } else {\n            // Fallback per SSR\n            var hasSize = el.offsetWidth > 0 && el.offsetHeight > 0;\n            return selector === ':visible' ? hasSize : !hasSize;\n          }\n        };\n        return this.elements.some(isVisible);\n      }\n      try {\n        // Per selettori CSS standard\n        if (typeof selector === 'string') {\n          // Crea un set temporaneo di elementi che matchano il selettore\n          var matches = Array.from(document.querySelectorAll(selector));\n          // Controlla se almeno un elemento della collection è nel set\n          return this.elements.some(function (el) {\n            return matches.includes(el);\n          });\n        }\n      } catch (e) {\n        console.warn('Invalid selector in is():', selector);\n      }\n      return false;\n    }\n  }, {\n    key: \"not\",\n    value: function not(selector) {\n      if (selector instanceof _CSD_UTILS) {\n        var selectorElements = selector.elements;\n        var filtered = this.elements.filter(function (el) {\n          return !selectorElements.includes(el);\n        });\n        return new _CSD_UTILS(filtered);\n      } else if (selector instanceof Node) {\n        var _filtered = this.elements.filter(function (el) {\n          return el !== selector;\n        });\n        return new _CSD_UTILS(_filtered);\n      } else if (typeof selector === 'string') {\n        try {\n          var _filtered2 = this.elements.filter(function (el) {\n            if (el instanceof Element) {\n              return !el.matches(selector);\n            }\n            return true;\n          });\n          return new _CSD_UTILS(_filtered2);\n        } catch (e) {\n          console.warn('Invalid selector in not():', selector);\n          return this;\n        }\n      }\n      return this;\n    }\n  }, {\n    key: \"has\",\n    value: function has(selector) {\n      var hasChild = this.elements.some(function (el) {\n        return el.querySelector(selector);\n      });\n      return new _CSD_UTILS(hasChild ? this.elements : []);\n    }\n  }, {\n    key: \"replaceWith\",\n    value: function replaceWith(content) {\n      var replacedElement;\n      this.each(function (el) {\n        var newElement;\n        if (content instanceof _CSD_UTILS) {\n          newElement = content.elements[0];\n          el.replaceWith(newElement);\n        } else if (content instanceof Node) {\n          newElement = content.cloneNode(true);\n          el.replaceWith(newElement);\n        } else if (typeof content === 'string') {\n          var tempDiv = document.createElement('div');\n          tempDiv.innerHTML = content.trim();\n          newElement = tempDiv.firstElementChild;\n          el.replaceWith(newElement);\n        }\n        replacedElement = newElement;\n      });\n      return new _CSD_UTILS(replacedElement)._updateElements();\n    }\n\n    // STATIC METHODS\n  }], [{\n    key: \"extend\",\n    value: function extend(target) {\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n      return Object.assign.apply(Object, [target].concat(sources));\n    }\n  }, {\n    key: \"each\",\n    value: function each(obj, callback) {\n      if (!obj) return;\n      if (obj instanceof NodeList || Array.isArray(obj) || obj instanceof Array || obj instanceof NamedNodeMap) {\n        Array.from(obj).forEach(function (element, index) {\n          callback.call(element, index);\n        });\n      } else {\n        callback.call(obj, 0);\n      }\n      return this;\n    }\n  }]);\n}();\nvar Sortable = /*#__PURE__*/function () {\n  function Sortable(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Sortable);\n    this.element = element;\n    this.options = _objectSpread({\n      handle: '.handle',\n      // Elemento per iniziare il drag\n      draggable: '.csd-reorder',\n      // Classe degli elementi draggabili\n      ghostClass: 'csd-reorder-ghost',\n      // Classe per il ghost\n      dragClass: 'csd-reorder-drag',\n      // Classe durante il drag\n      onStart: null,\n      // Callback all'inizio del drag\n      onEnd: null\n    }, options);\n    this.dragItem = null;\n    this.startY = 0;\n    this.currentY = 0;\n    this.initialY = 0;\n    this.touchStartTime = 0;\n    this.init();\n  }\n  return _createClass(Sortable, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      // Rendi tutti gli elementi draggabili\n      var items = this.element.querySelectorAll(this.options.draggable);\n      items.forEach(function (item) {\n        // Desktop Events\n        item.draggable = true;\n        var handle = item.querySelector(_this2.options.handle);\n        if (handle) {\n          // Desktop Events\n          handle.addEventListener('mousedown', function () {\n            item.draggable = true;\n          });\n          handle.addEventListener('mouseup', function () {\n            item.draggable = false;\n          });\n\n          // Touch Events\n          handle.addEventListener('touchstart', function (e) {\n            return _this2.handleTouchStart(e, item);\n          });\n          handle.addEventListener('touchmove', function (e) {\n            return _this2.handleTouchMove(e);\n          });\n          handle.addEventListener('touchend', function (e) {\n            return _this2.handleTouchEnd(e);\n          });\n        }\n\n        // Desktop Events\n        item.addEventListener('dragstart', function (e) {\n          return _this2.handleDragStart(e, item);\n        });\n        item.addEventListener('dragend', function (e) {\n          return _this2.handleDragEnd(e, item);\n        });\n      });\n\n      // Eventi di drag per il container\n      this.element.addEventListener('dragover', function (e) {\n        return _this2.handleDragOver(e);\n      });\n      this.element.addEventListener('dragenter', function (e) {\n        return e.preventDefault();\n      });\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(e, item) {\n      e.preventDefault();\n      this.touchStartTime = Date.now();\n      this.dragItem = item;\n      var touch = e.touches[0];\n      this.startY = touch.clientY;\n      this.initialY = this.dragItem.offsetTop;\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(e) {\n      if (!this.dragItem) return;\n      e.preventDefault();\n      var touch = e.touches[0];\n      this.currentY = touch.clientY;\n      var deltaY = this.currentY - this.startY;\n\n      // Se il touch è attivo da più di 150ms, inizia il drag\n      if (Date.now() - this.touchStartTime > 150) {\n        this.dragItem.classList.add(this.options.dragClass);\n        this.element.classList.add('is-dragging');\n\n        // Sposta l'elemento\n        this.dragItem.style.transform = \"translateY(\".concat(deltaY, \"px)\");\n\n        // Trova la nuova posizione\n        var siblings = _toConsumableArray(this.element.querySelectorAll(\"\".concat(this.options.draggable, \":not(.\").concat(this.options.dragClass, \")\")));\n        var nextSibling = siblings.find(function (sibling) {\n          var rect = sibling.getBoundingClientRect();\n          var middle = rect.top + rect.height / 2;\n          return touch.clientY <= middle;\n        });\n        if (nextSibling) {\n          this.element.insertBefore(this.dragItem, nextSibling);\n        } else {\n          this.element.appendChild(this.dragItem);\n        }\n      }\n    }\n  }, {\n    key: \"handleTouchEnd\",\n    value: function handleTouchEnd(e) {\n      if (!this.dragItem) return;\n      e.preventDefault();\n      this.dragItem.classList.remove(this.options.dragClass);\n      this.element.classList.remove('is-dragging');\n      this.dragItem.style.transform = '';\n\n      // Callback\n      if (this.options.onEnd) {\n        var newIndex = Array.from(this.element.children).indexOf(this.dragItem);\n        this.options.onEnd({\n          item: this.dragItem,\n          from: this.startIndex,\n          to: newIndex\n        });\n      }\n      this.dragItem = null;\n      this.startY = 0;\n      this.currentY = 0;\n      this.initialY = 0;\n      this.touchStartTime = 0;\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart(e, item) {\n      var _this3 = this;\n      e.dataTransfer.effectAllowed = 'move';\n      this.startIndex = Array.from(this.element.children).indexOf(item);\n      setTimeout(function () {\n        item.classList.add(_this3.options.dragClass);\n        _this3.element.classList.add('is-dragging');\n      }, 0);\n      if (this.options.onStart) {\n        this.options.onStart({\n          item: item,\n          index: this.startIndex\n        });\n      }\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(e) {\n      e.preventDefault();\n      e.dataTransfer.dropEffect = 'move';\n      var draggingItem = this.element.querySelector('.' + this.options.dragClass);\n      if (!draggingItem) return;\n      var siblings = _toConsumableArray(this.element.querySelectorAll(\"\".concat(this.options.draggable, \":not(.\").concat(this.options.dragClass, \")\")));\n      var nextSibling = siblings.find(function (sibling) {\n        var rect = sibling.getBoundingClientRect();\n        var middle = rect.top + rect.height / 2;\n        return e.clientY <= middle;\n      });\n      if (nextSibling) {\n        this.element.insertBefore(draggingItem, nextSibling);\n      } else {\n        this.element.appendChild(draggingItem);\n      }\n    }\n  }, {\n    key: \"handleDragEnd\",\n    value: function handleDragEnd(e, item) {\n      item.classList.remove(this.options.dragClass);\n      this.element.classList.remove('is-dragging');\n      var newIndex = Array.from(this.element.children).indexOf(item);\n      if (this.options.onEnd) {\n        this.options.onEnd({\n          item: item,\n          from: this.startIndex,\n          to: newIndex\n        });\n      }\n      item.draggable = false;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this4 = this;\n      var items = this.element.querySelectorAll(this.options.draggable);\n      items.forEach(function (item) {\n        item.draggable = false;\n        item.removeEventListener('dragstart', _this4.handleDragStart);\n        item.removeEventListener('dragend', _this4.handleDragEnd);\n        var handle = item.querySelector(_this4.options.handle);\n        if (handle) {\n          handle.removeEventListener('mousedown', null);\n          handle.removeEventListener('mouseup', null);\n          handle.removeEventListener('touchstart', null);\n          handle.removeEventListener('touchmove', null);\n          handle.removeEventListener('touchend', null);\n        }\n      });\n      this.element.removeEventListener('dragover', this.handleDragOver);\n      this.element.removeEventListener('dragenter', null);\n    }\n  }]);\n}(); // Factory function\nvar $CSD = function () {\n  // Create the main function\n  var fn = function fn(selector) {\n    // In ambiente SSR, ritorna un oggetto vuoto con metodi che non fanno nulla\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      return {\n        elements: [],\n        length: 0,\n        each: function each() {\n          return this;\n        },\n        find: function find() {\n          return this;\n        },\n        addClass: function addClass() {\n          return this;\n        },\n        removeClass: function removeClass() {\n          return this;\n        },\n        toggleClass: function toggleClass() {\n          return this;\n        },\n        hasClass: function hasClass() {\n          return false;\n        },\n        attr: function attr() {\n          return this;\n        },\n        removeAttr: function removeAttr() {\n          return this;\n        },\n        data: function data() {\n          return this;\n        },\n        css: function css() {\n          return this;\n        },\n        html: function html() {\n          return \"\";\n        },\n        text: function text() {\n          return \"\";\n        },\n        append: function append() {\n          return this;\n        },\n        prepend: function prepend() {\n          return this;\n        },\n        on: function on() {\n          return this;\n        },\n        off: function off() {\n          return this;\n        },\n        closest: function closest() {\n          return this;\n        },\n        is: function is() {\n          return false;\n        }\n      };\n    }\n    // In ambiente browser, comportamento normale\n    return new _CSD_UTILS(selector);\n  };\n\n  // Add ready method\n  fn.ready = function (callback) {\n    if (typeof document === 'undefined') return;\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      document.addEventListener('DOMContentLoaded', callback);\n    }\n  };\n  return fn;\n}();\n\n// Make $CSD and _CSD_UTILS available globally solo in ambiente browser\nif (typeof window !== 'undefined') {\n  window.$CSD = $CSD;\n  window._CSD_UTILS = _CSD_UTILS;\n  window.Sortable = Sortable;\n}\n\n// Add static methods to $CSD\n$CSD.extend = _CSD_UTILS.extend;\n$CSD.each = _CSD_UTILS.each;\n\n// Export for module systems\nif ( true && module.exports) {\n  module.exports = {\n    $CSD: $CSD,\n    _CSD_UTILS: _CSD_UTILS,\n    Sortable: Sortable\n  };\n} else if (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n    return {\n      $CSD: $CSD,\n      _CSD_UTILS: _CSD_UTILS,\n      Sortable: Sortable\n    };\n  }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n//# sourceURL=webpack://$CSD/./csd-lib.js?");

/***/ }),

/***/ "./csd-utility.js":
/*!************************!*\
  !*** ./csd-utility.js ***!
  \************************/
/***/ (() => {

eval("// Funzione per formattare le date\nfunction formatPresetDate(date) {\n  var day = String(date.getDate()).padStart(2, \"0\");\n  var month = String(date.getMonth() + 1).padStart(2, \"0\");\n  var year = date.getFullYear();\n  return \"\".concat(day, \"/\").concat(month, \"/\").concat(year);\n}\nfunction getOppositeTheme(theme) {\n  switch (theme) {\n    case \"secondary\":\n      return \"primary\";\n      break;\n    default:\n      return \"secondary\";\n      break;\n  }\n}\n\n//# sourceURL=webpack://$CSD/./csd-utility.js?");

/***/ }),

/***/ "./ssr-safe.js":
/*!*********************!*\
  !*** ./ssr-safe.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $CSD: () => (/* binding */ $CSD),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * SSR-Safe Utility per csdsolutions-csdjs\n * Questo file fornisce funzioni sicure per l'ambiente SSR\n */\n\n// Wrapper per $CSD in ambiente SSR\nvar createSsrSafe$CSD = function createSsrSafe$CSD() {\n  // In ambiente SSR, restituisce un oggetto fittizio che non fa nulla\n  var ssrSafe$CSD = function ssrSafe$CSD() {\n    return {\n      elements: [],\n      length: 0,\n      each: function each() {\n        return this;\n      },\n      find: function find() {\n        return this;\n      },\n      addClass: function addClass() {\n        return this;\n      },\n      removeClass: function removeClass() {\n        return this;\n      },\n      toggleClass: function toggleClass() {\n        return this;\n      },\n      hasClass: function hasClass() {\n        return false;\n      },\n      attr: function attr() {\n        return this;\n      },\n      removeAttr: function removeAttr() {\n        return this;\n      },\n      data: function data() {\n        return this;\n      },\n      css: function css() {\n        return this;\n      },\n      html: function html() {\n        return \"\";\n      },\n      text: function text() {\n        return \"\";\n      },\n      append: function append() {\n        return this;\n      },\n      prepend: function prepend() {\n        return this;\n      },\n      on: function on() {\n        return this;\n      },\n      off: function off() {\n        return this;\n      },\n      closest: function closest() {\n        return this;\n      },\n      is: function is() {\n        return false;\n      }\n    };\n  };\n\n  // Aggiunge metodi statici\n  ssrSafe$CSD.ready = function (callback) {/* noop */};\n  ssrSafe$CSD.extend = function () {\n    return {};\n  };\n  ssrSafe$CSD.each = function () {\n    return null;\n  };\n  return ssrSafe$CSD;\n};\n\n// Esporta una versione sicura per SSR di $CSD\nvar globalSafe$CSD;\nif (typeof window === 'undefined') {\n  // Ambiente SSR: usa la versione safe\n  globalSafe$CSD = createSsrSafe$CSD();\n} else {\n  // Ambiente Browser: usa la versione reale se disponibile o crea un placeholder\n  // che sarà sostituito dalla versione reale quando verrà caricata\n  globalSafe$CSD = typeof $CSD !== 'undefined' ? $CSD : createSsrSafe$CSD();\n}\n\n// Esporta per uso nei moduli che dipendono da $CSD\nvar $CSD = globalSafe$CSD;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (globalSafe$CSD);\n\n//# sourceURL=webpack://$CSD/./ssr-safe.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/harmony module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.hmd = (module) => {
/******/ 			module = Object.create(module);
/******/ 			if (!module.children) module.children = [];
/******/ 			Object.defineProperty(module, 'exports', {
/******/ 				enumerable: true,
/******/ 				set: () => {
/******/ 					throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
/******/ 				}
/******/ 			});
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./csd-bundle.js");
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});